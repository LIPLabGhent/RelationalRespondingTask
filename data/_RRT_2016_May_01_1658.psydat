ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/Ian/git/RRT/RRT.psyexp
p7
sS'dataFileName'
p8
V/Users/Ian/git/RRT/data/_RRT_2016_May_01_1658
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'RRT'
p12
sS'dataNames'
p13
(lp14
S'required_response.keys'
p15
aS'required_response.corr'
p16
aS'required_response.rt'
p17
aS'feedback_response.keys'
p18
aS'feedback_response.corr'
p19
aS'feedback_response.rt'
p20
asS'autoLog'
p21
I01
sS'extraInfo'
p22
(dp23
Vparticipant
p24
V
sVgender
p25
V
sVage
p26
V
sS'frameRate'
p27
cnumpy.core.multiarray
scalar
p28
(cnumpy
dtype
p29
(S'f8'
I0
I1
tRp30
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x96\xdb\xec\x93\x08\xf0M@'
tRp31
sS'expName'
p32
g12
sS'date'
p33
V2016_May_01_1658
p34
ssS'loopsUnfinished'
p35
(lp36
sS'saveWideText'
p37
I01
sS'thisEntry'
p38
(dp39
sS'version'
p40
S''
sS'_paramNamesSoFar'
p41
(lp42
Vinstructions
p43
aVfalse_label
p44
aVtrue_label
p45
aVtrial_type
p46
aVdescriptor
p47
asS'entries'
p48
(lp49
(dp50
g45
VTRUE
p51
sg46
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
VIn this reaction time task will you have to respond to words and statements that are presented on screen. \u000a\u000aThe first phase presents both words in orange.\u000a\u000aYour job is to categorise these words as referring to TRUE or FALSE.\u000a\u000aGo as quickly as you can while being accurate.\u000aIf you make a mistake, hit the correct key as soon as possible.\u000a\u000aPut your two index fingers on the E and I keys. Press either one to start.
p52
sS'trials.thisIndex'
p53
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p54
g28
(g29
(S'i4'
I0
I1
tRp55
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00'
tRp56
sS'trials.thisRepN'
p57
I0
sg26
V
sS'trials.thisN'
p58
I0
sg47
Vinducer_2
p59
sg32
g12
sS'trials.thisTrialN'
p60
I0
sS'blocks.thisRepN'
p61
I0
sg17
F0.63833904266357422
sg44
VFALSE
p62
sg20
F0.55184292793273926
sS'blocks.thisN'
p63
I0
sS'blocks.thisTrialN'
p64
I0
sa(dp65
g45
g51
sg46
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p66
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p67
g56
sS'trials.thisRepN'
p68
I0
sg26
V
sS'trials.thisN'
p69
I1
sg47
g59
sg32
g12
sS'trials.thisTrialN'
p70
I1
sS'blocks.thisRepN'
p71
I0
sg17
F0.2677159309387207
sg44
g62
sg20
F0.21786403656005859
sS'blocks.thisN'
p72
I0
sS'blocks.thisTrialN'
p73
I0
sa(dp74
g45
g51
sg46
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p75
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p76
g56
sS'trials.thisRepN'
p77
I1
sg26
V
sS'trials.thisN'
p78
I2
sg47
Vinducer_1
p79
sg32
g12
sS'trials.thisTrialN'
p80
I0
sS'blocks.thisRepN'
p81
I0
sg17
F0.16893196105957031
sg44
g62
sS'blocks.thisN'
p82
I0
sS'blocks.thisTrialN'
p83
I0
sa(dp84
g45
g51
sg46
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p85
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p86
g56
sS'trials.thisRepN'
p87
I1
sg26
V
sS'trials.thisN'
p88
I3
sg47
g59
sg32
g12
sS'trials.thisTrialN'
p89
I1
sS'blocks.thisRepN'
p90
I0
sg17
F0.25204801559448242
sg44
g62
sg20
F0.21866607666015625
sS'blocks.thisN'
p91
I0
sS'blocks.thisTrialN'
p92
I0
sa(dp93
g45
g51
sg46
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p94
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p95
g56
sS'trials.thisRepN'
p96
I2
sg26
V
sS'trials.thisN'
p97
I4
sg47
g79
sg32
g12
sS'trials.thisTrialN'
p98
I0
sS'blocks.thisRepN'
p99
I0
sg17
F0.18554496765136719
sg44
g62
sS'blocks.thisN'
p100
I0
sS'blocks.thisTrialN'
p101
I0
sa(dp102
g45
g51
sg46
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p103
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p104
g56
sS'trials.thisRepN'
p105
I2
sg26
V
sS'trials.thisN'
p106
I5
sg47
g79
sg32
g12
sS'trials.thisTrialN'
p107
I1
sS'blocks.thisRepN'
p108
I0
sg17
F0.25150704383850098
sg44
g62
sS'blocks.thisN'
p109
I0
sS'blocks.thisTrialN'
p110
I0
sa(dp111
g45
g51
sg46
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p112
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p113
g56
sS'trials.thisRepN'
p114
I3
sg26
V
sS'trials.thisN'
p115
I6
sg47
g79
sg32
g12
sS'trials.thisTrialN'
p116
I0
sS'blocks.thisRepN'
p117
I0
sg17
F0.23474812507629395
sg44
g62
sS'blocks.thisN'
p118
I0
sS'blocks.thisTrialN'
p119
I0
sa(dp120
g45
g51
sg46
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p121
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p122
g56
sS'trials.thisRepN'
p123
I3
sg26
V
sS'trials.thisN'
p124
I7
sg47
g59
sg32
g12
sS'trials.thisTrialN'
p125
I1
sS'blocks.thisRepN'
p126
I0
sg17
F0.28493309020996094
sg44
g62
sg20
F0.20216894149780273
sS'blocks.thisN'
p127
I0
sS'blocks.thisTrialN'
p128
I0
sa(dp129
g45
g51
sg46
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p130
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p131
g56
sS'trials.thisRepN'
p132
I4
sg26
V
sS'trials.thisN'
p133
I8
sg47
g59
sg32
g12
sS'trials.thisTrialN'
p134
I0
sS'blocks.thisRepN'
p135
I0
sg17
F0.2189021110534668
sg44
g62
sg20
F0.18493390083312988
sS'blocks.thisN'
p136
I0
sS'blocks.thisTrialN'
p137
I0
sa(dp138
g45
g51
sg46
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p139
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p140
g56
sS'trials.thisRepN'
p141
I4
sg26
V
sS'trials.thisN'
p142
I9
sg47
g59
sg32
g12
sS'trials.thisTrialN'
p143
I1
sS'blocks.thisRepN'
p144
I0
sg17
F0.20154380798339844
sg44
g62
sg20
F0.16689515113830566
sS'blocks.thisN'
p145
I0
sS'blocks.thisTrialN'
p146
I0
sa(dp147
g45
g51
sg46
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p148
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p149
g56
sS'trials.thisRepN'
p150
I5
sg26
V
sS'trials.thisN'
p151
I10
sg47
g79
sg32
g12
sS'trials.thisTrialN'
p152
I0
sS'blocks.thisRepN'
p153
I0
sg17
F0.18499112129211426
sg44
g62
sS'blocks.thisN'
p154
I0
sS'blocks.thisTrialN'
p155
I0
sa(dp156
g45
g51
sg46
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p157
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p158
g56
sS'trials.thisRepN'
p159
I5
sg26
V
sS'trials.thisN'
p160
I11
sg47
g79
sg32
g12
sS'trials.thisTrialN'
p161
I1
sS'blocks.thisRepN'
p162
I0
sg17
F0.20265507698059082
sg44
g62
sS'blocks.thisN'
p163
I0
sS'blocks.thisTrialN'
p164
I0
sa(dp165
g45
g51
sg46
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p166
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p167
g56
sS'trials.thisRepN'
p168
I6
sg26
V
sS'trials.thisN'
p169
I12
sg47
g79
sg32
g12
sS'trials.thisTrialN'
p170
I0
sS'blocks.thisRepN'
p171
I0
sg17
F0.20202803611755371
sg44
g62
sS'blocks.thisN'
p172
I0
sS'blocks.thisTrialN'
p173
I0
sa(dp174
g45
g51
sg46
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p175
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p176
g56
sS'trials.thisRepN'
p177
I6
sg26
V
sS'trials.thisN'
p178
I13
sg47
g59
sg32
g12
sS'trials.thisTrialN'
p179
I1
sS'blocks.thisRepN'
p180
I0
sg17
F0.25173091888427734
sg44
g62
sg20
F0.21949601173400879
sS'blocks.thisN'
p181
I0
sS'blocks.thisTrialN'
p182
I0
sa(dp183
g45
g51
sg46
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p184
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p185
g56
sS'trials.thisRepN'
p186
I7
sg26
V
sS'trials.thisN'
p187
I14
sg47
g79
sg32
g12
sS'trials.thisTrialN'
p188
I0
sS'blocks.thisRepN'
p189
I0
sg17
F0.1673281192779541
sg44
g62
sS'blocks.thisN'
p190
I0
sS'blocks.thisTrialN'
p191
I0
sa(dp192
g45
g51
sg46
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p193
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p194
g56
sS'trials.thisRepN'
p195
I7
sg26
V
sS'trials.thisN'
p196
I15
sg47
g59
sg32
g12
sS'trials.thisTrialN'
p197
I1
sS'blocks.thisRepN'
p198
I0
sg17
F0.26793694496154785
sg44
g62
sg20
F0.2184140682220459
sS'blocks.thisN'
p199
I0
sS'blocks.thisTrialN'
p200
I0
sa(dp201
g45
g51
sg46
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p202
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p203
g56
sS'trials.thisRepN'
p204
I8
sg26
V
sS'trials.thisN'
p205
I16
sg47
g59
sg32
g12
sS'trials.thisTrialN'
p206
I0
sS'blocks.thisRepN'
p207
I0
sg17
F0.25156402587890625
sg44
g62
sg20
F0.1851038932800293
sS'blocks.thisN'
p208
I0
sS'blocks.thisTrialN'
p209
I0
sa(dp210
g45
g51
sg46
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p211
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p212
g56
sS'trials.thisRepN'
p213
I8
sg26
V
sS'trials.thisN'
p214
I17
sg47
g59
sg32
g12
sS'trials.thisTrialN'
p215
I1
sS'blocks.thisRepN'
p216
I0
sg17
F0.20245003700256348
sg44
g62
sg20
F0.11850500106811523
sS'blocks.thisN'
p217
I0
sS'blocks.thisTrialN'
p218
I0
sa(dp219
g45
g51
sg46
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p220
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p221
g56
sS'trials.thisRepN'
p222
I9
sg26
V
sS'trials.thisN'
p223
I18
sg47
g79
sg32
g12
sS'trials.thisTrialN'
p224
I0
sS'blocks.thisRepN'
p225
I0
sg17
F0.13497209548950195
sg44
g62
sS'blocks.thisN'
p226
I0
sS'blocks.thisTrialN'
p227
I0
sa(dp228
g45
g51
sg46
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g52
sS'trials.thisIndex'
p229
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p230
g56
sS'trials.thisRepN'
p231
I9
sg26
V
sS'trials.thisN'
p232
I19
sg47
g79
sg32
g12
sS'trials.thisTrialN'
p233
I1
sS'blocks.thisRepN'
p234
I0
sg17
F0.21924114227294922
sg44
g62
sS'blocks.thisN'
p235
I0
sS'blocks.thisTrialN'
p236
I0
sa(dp237
g45
g51
sVtrial_type
p238
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
VThe next phase presents statements about self esteem in blue.\u000a\u000aYou must respond AS IF 'I am good and not bad'.\u000a\u000aFor example:\u000aWhen 'I am valuable' appears, respond with TRUE.\u000aWhen 'I am worthless' appears, respond with FALSE.\u000a\u000aGo as quickly as you can while being accurate.\u000aIf you make a mistake hit the correct key as soon as possible.\u000a\u000aPress E or I to continue.
p239
sS'trials.thisIndex'
p240
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p241
g28
(g55
S'\x01\x00\x00\x00'
tRp242
sS'trials.thisRepN'
p243
I0
sg26
V
sS'trials.thisN'
p244
I0
sVdescriptor
p245
Vtarget_2
p246
sg32
g12
sS'trials.thisTrialN'
p247
I0
sS'blocks.thisRepN'
p248
I0
sg17
F0.2861940860748291
sg44
g62
sg20
F0.25296592712402344
sS'blocks.thisN'
p249
I1
sS'blocks.thisTrialN'
p250
I1
sa(dp251
g45
g51
sg238
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p252
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p253
g242
sS'trials.thisRepN'
p254
I0
sg26
V
sS'trials.thisN'
p255
I1
sg245
Vtarget_1
p256
sg32
g12
sS'trials.thisTrialN'
p257
I1
sS'blocks.thisRepN'
p258
I0
sg17
F0.1189579963684082
sg44
g62
sS'blocks.thisN'
p259
I1
sS'blocks.thisTrialN'
p260
I1
sa(dp261
g45
g51
sg238
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p262
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p263
g242
sS'trials.thisRepN'
p264
I0
sg26
V
sS'trials.thisN'
p265
I2
sg245
g246
sg32
g12
sS'trials.thisTrialN'
p266
I2
sS'blocks.thisRepN'
p267
I0
sg17
F0.23585915565490723
sg44
g62
sg20
F0.15143609046936035
sS'blocks.thisN'
p268
I1
sS'blocks.thisTrialN'
p269
I1
sa(dp270
g45
g51
sg238
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p271
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p272
g242
sS'trials.thisRepN'
p273
I0
sg26
V
sS'trials.thisN'
p274
I3
sg245
g246
sg32
g12
sS'trials.thisTrialN'
p275
I3
sS'blocks.thisRepN'
p276
I0
sg17
F0.16674399375915527
sg44
g62
sg20
F0.10197114944458008
sS'blocks.thisN'
p277
I1
sS'blocks.thisTrialN'
p278
I1
sa(dp279
g45
g51
sg238
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p280
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p281
g242
sS'trials.thisRepN'
p282
I1
sg26
V
sS'trials.thisN'
p283
I4
sg245
Vtarget_3
p284
sg32
g12
sS'trials.thisTrialN'
p285
I0
sS'blocks.thisRepN'
p286
I0
sg17
F0.18485188484191895
sg44
g62
sg20
F0.11810803413391113
sS'blocks.thisN'
p287
I1
sS'blocks.thisTrialN'
p288
I1
sa(dp289
g45
g51
sg238
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p290
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p291
g242
sS'trials.thisRepN'
p292
I1
sg26
V
sS'trials.thisN'
p293
I5
sg245
Vtarget_4
p294
sg32
g12
sS'trials.thisTrialN'
p295
I1
sS'blocks.thisRepN'
p296
I0
sg17
F0.15010595321655273
sg44
g62
sS'blocks.thisN'
p297
I1
sS'blocks.thisTrialN'
p298
I1
sa(dp299
g45
g51
sg238
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p300
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p301
g242
sS'trials.thisRepN'
p302
I1
sg26
V
sS'trials.thisN'
p303
I6
sg245
g256
sg32
g12
sS'trials.thisTrialN'
p304
I2
sS'blocks.thisRepN'
p305
I0
sg17
F0.2005150318145752
sg44
g62
sS'blocks.thisN'
p306
I1
sS'blocks.thisTrialN'
p307
I1
sa(dp308
g45
g51
sg238
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p309
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p310
g242
sS'trials.thisRepN'
p311
I1
sg26
V
sS'trials.thisN'
p312
I7
sg245
g284
sg32
g12
sS'trials.thisTrialN'
p313
I3
sS'blocks.thisRepN'
p314
I0
sg17
F0.23466992378234863
sg44
g62
sg20
F0.16925883293151855
sS'blocks.thisN'
p315
I1
sS'blocks.thisTrialN'
p316
I1
sa(dp317
g45
g51
sg238
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p318
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p319
g242
sS'trials.thisRepN'
p320
I2
sg26
V
sS'trials.thisN'
p321
I8
sg245
g284
sg32
g12
sS'trials.thisTrialN'
p322
I0
sS'blocks.thisRepN'
p323
I0
sg17
F0.18512606620788574
sg44
g62
sg20
F0.10135078430175781
sS'blocks.thisN'
p324
I1
sS'blocks.thisTrialN'
p325
I1
sa(dp326
g45
g51
sg238
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p327
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p328
g242
sS'trials.thisRepN'
p329
I2
sg26
V
sS'trials.thisN'
p330
I9
sg245
g294
sg32
g12
sS'trials.thisTrialN'
p331
I1
sS'blocks.thisRepN'
p332
I0
sg17
F0.06865692138671875
sg44
g62
sS'blocks.thisN'
p333
I1
sS'blocks.thisTrialN'
p334
I1
sa(dp335
g45
g51
sg238
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p336
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p337
g242
sS'trials.thisRepN'
p338
I2
sg26
V
sS'trials.thisN'
p339
I10
sg245
g246
sg32
g12
sS'trials.thisTrialN'
p340
I2
sS'blocks.thisRepN'
p341
I0
sg17
F0.2860260009765625
sg44
g62
sg20
F0.18543791770935059
sS'blocks.thisN'
p342
I1
sS'blocks.thisTrialN'
p343
I1
sa(dp344
g45
g51
sg238
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p345
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p346
g242
sS'trials.thisRepN'
p347
I2
sg26
V
sS'trials.thisN'
p348
I11
sg245
g294
sg32
g12
sS'trials.thisTrialN'
p349
I3
sS'blocks.thisRepN'
p350
I0
sg17
F0.085078001022338867
sg44
g62
sS'blocks.thisN'
p351
I1
sS'blocks.thisTrialN'
p352
I1
sa(dp353
g45
g51
sg238
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p354
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p355
g242
sS'trials.thisRepN'
p356
I3
sg26
V
sS'trials.thisN'
p357
I12
sg245
g284
sg32
g12
sS'trials.thisTrialN'
p358
I0
sS'blocks.thisRepN'
p359
I0
sg17
F0.26723408699035645
sg44
g62
sg20
F0.18511104583740234
sS'blocks.thisN'
p360
I1
sS'blocks.thisTrialN'
p361
I1
sa(dp362
g45
g51
sg238
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p363
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p364
g242
sS'trials.thisRepN'
p365
I3
sg26
V
sS'trials.thisN'
p366
I13
sg245
g256
sg32
g12
sS'trials.thisTrialN'
p367
I1
sS'blocks.thisRepN'
p368
I0
sg17
F0.1030418872833252
sg44
g62
sS'blocks.thisN'
p369
I1
sS'blocks.thisTrialN'
p370
I1
sa(dp371
g45
g51
sg238
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p372
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p373
g242
sS'trials.thisRepN'
p374
I3
sg26
V
sS'trials.thisN'
p375
I14
sg245
g256
sg32
g12
sS'trials.thisTrialN'
p376
I2
sS'blocks.thisRepN'
p377
I0
sg17
F0.16843700408935547
sg44
g62
sS'blocks.thisN'
p378
I1
sS'blocks.thisTrialN'
p379
I1
sa(dp380
g45
g51
sg238
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p381
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p382
g242
sS'trials.thisRepN'
p383
I3
sg26
V
sS'trials.thisN'
p384
I15
sg245
g246
sg32
g12
sS'trials.thisTrialN'
p385
I3
sS'blocks.thisRepN'
p386
I0
sg17
F0.30261588096618652
sg44
g62
sg20
F0.21800708770751953
sS'blocks.thisN'
p387
I1
sS'blocks.thisTrialN'
p388
I1
sa(dp389
g45
g51
sg238
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p390
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p391
g242
sS'trials.thisRepN'
p392
I4
sg26
V
sS'trials.thisN'
p393
I16
sg245
g294
sg32
g12
sS'trials.thisTrialN'
p394
I0
sS'blocks.thisRepN'
p395
I0
sg17
F0.084021806716918945
sg44
g62
sS'blocks.thisN'
p396
I1
sS'blocks.thisTrialN'
p397
I1
sa(dp398
g45
g51
sg238
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p399
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p400
g242
sS'trials.thisRepN'
p401
I4
sg26
V
sS'trials.thisN'
p402
I17
sg245
g294
sg32
g12
sS'trials.thisTrialN'
p403
I1
sS'blocks.thisRepN'
p404
I0
sg17
F0.23436808586120605
sg44
g62
sS'blocks.thisN'
p405
I1
sS'blocks.thisTrialN'
p406
I1
sa(dp407
g45
g51
sg238
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p408
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p409
g242
sS'trials.thisRepN'
p410
I4
sg26
V
sS'trials.thisN'
p411
I18
sg245
g256
sg32
g12
sS'trials.thisTrialN'
p412
I2
sS'blocks.thisRepN'
p413
I0
sg17
F0.15080094337463379
sg44
g62
sS'blocks.thisN'
p414
I1
sS'blocks.thisTrialN'
p415
I1
sa(dp416
g45
g51
sg238
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g239
sS'trials.thisIndex'
p417
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p418
g242
sS'trials.thisRepN'
p419
I4
sg26
V
sS'trials.thisN'
p420
I19
sg245
g284
sg32
g12
sS'trials.thisTrialN'
p421
I3
sS'blocks.thisRepN'
p422
I0
sg17
F0.26755213737487793
sg44
g62
sg20
F0.20175814628601074
sS'blocks.thisN'
p423
I1
sS'blocks.thisTrialN'
p424
I1
sa(dp425
g45
g51
sVtrial_type
p426
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
VThe next phase presents both the orange words and blue statements.\u000a\u000aYou must both respond to the statements in blue AS IF 'I am good and not bad',\u000aand categorise the orange words as referring to TRUE or FALSE.\u000a\u000aGo as quickly as you can while being accurate.\u000aIf you make a mistake hit the correct key as soon as possible.\u000a\u000aPress E or I to continue.
p427
sS'trials.thisIndex'
p428
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p429
g28
(g55
S'\x02\x00\x00\x00'
tRp430
sS'trials.thisRepN'
p431
I0
sg26
V
sS'trials.thisN'
p432
I0
sVdescriptor
p433
Vinducer_1
p434
sg32
g12
sS'trials.thisTrialN'
p435
I0
sS'blocks.thisRepN'
p436
I0
sg17
F0.16868185997009277
sg44
g62
sS'blocks.thisN'
p437
I2
sS'blocks.thisTrialN'
p438
I2
sa(dp439
g45
g51
sg426
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p440
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p441
g430
sS'trials.thisRepN'
p442
I0
sg26
V
sS'trials.thisN'
p443
I1
sg433
g434
sg32
g12
sS'trials.thisTrialN'
p444
I1
sS'blocks.thisRepN'
p445
I0
sg17
F0.21882796287536621
sg44
g62
sS'blocks.thisN'
p446
I2
sS'blocks.thisTrialN'
p447
I2
sa(dp448
g45
g51
sg426
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p449
I4
sg24
V
sg19
I1
sS'blocks.thisIndex'
p450
g430
sS'trials.thisRepN'
p451
I0
sg26
V
sS'trials.thisN'
p452
I2
sg433
Vtarget_3
p453
sg32
g12
sS'trials.thisTrialN'
p454
I2
sS'blocks.thisRepN'
p455
I0
sg17
F0.31889009475708008
sg44
g62
sg20
F0.21813106536865234
sS'blocks.thisN'
p456
I2
sS'blocks.thisTrialN'
p457
I2
sa(dp458
g45
g51
sg426
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p459
I5
sg24
V
sg19
I0
sS'blocks.thisIndex'
p460
g430
sS'trials.thisRepN'
p461
I0
sg26
V
sS'trials.thisN'
p462
I3
sg433
Vtarget_4
p463
sg32
g12
sS'trials.thisTrialN'
p464
I3
sS'blocks.thisRepN'
p465
I0
sg17
F0.13554286956787109
sg44
g62
sS'blocks.thisN'
p466
I2
sS'blocks.thisTrialN'
p467
I2
sa(dp468
g45
g51
sg426
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p469
I5
sg24
V
sg19
I0
sS'blocks.thisIndex'
p470
g430
sS'trials.thisRepN'
p471
I0
sg26
V
sS'trials.thisN'
p472
I4
sg433
g463
sg32
g12
sS'trials.thisTrialN'
p473
I4
sS'blocks.thisRepN'
p474
I0
sg17
F0.21983194351196289
sg44
g62
sS'blocks.thisN'
p475
I2
sS'blocks.thisTrialN'
p476
I2
sa(dp477
g45
g51
sg426
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p478
I5
sg24
V
sg19
I0
sS'blocks.thisIndex'
p479
g430
sS'trials.thisRepN'
p480
I0
sg26
V
sS'trials.thisN'
p481
I5
sg433
g463
sg32
g12
sS'trials.thisTrialN'
p482
I5
sS'blocks.thisRepN'
p483
I0
sg17
F0.16784000396728516
sg44
g62
sS'blocks.thisN'
p484
I2
sS'blocks.thisTrialN'
p485
I2
sa(dp486
g45
g51
sg426
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p487
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p488
g430
sS'trials.thisRepN'
p489
I1
sg26
V
sS'trials.thisN'
p490
I6
sg433
Vtarget_2
p491
sg32
g12
sS'trials.thisTrialN'
p492
I0
sS'blocks.thisRepN'
p493
I0
sg17
F0.25134992599487305
sg44
g62
sg20
F0.15125703811645508
sS'blocks.thisN'
p494
I2
sS'blocks.thisTrialN'
p495
I2
sa(dp496
g45
g51
sg426
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p497
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p498
g430
sS'trials.thisRepN'
p499
I1
sg26
V
sS'trials.thisN'
p500
I7
sg433
g491
sg32
g12
sS'trials.thisTrialN'
p501
I1
sS'blocks.thisRepN'
p502
I0
sg17
F0.1517031192779541
sg44
g62
sg20
F0.068217992782592773
sS'blocks.thisN'
p503
I2
sS'blocks.thisTrialN'
p504
I2
sa(dp505
g45
g51
sg426
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p506
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p507
g430
sS'trials.thisRepN'
p508
I1
sg26
V
sS'trials.thisN'
p509
I8
sg433
g491
sg32
g12
sS'trials.thisTrialN'
p510
I2
sS'blocks.thisRepN'
p511
I0
sg17
F0.16748213768005371
sg44
g62
sg20
F0.10123300552368164
sS'blocks.thisN'
p512
I2
sS'blocks.thisTrialN'
p513
I2
sa(dp514
g45
g51
sg426
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p515
I5
sg24
V
sg19
I0
sS'blocks.thisIndex'
p516
g430
sS'trials.thisRepN'
p517
I1
sg26
V
sS'trials.thisN'
p518
I9
sg433
g463
sg32
g12
sS'trials.thisTrialN'
p519
I3
sS'blocks.thisRepN'
p520
I0
sg17
F0.11874294281005859
sg44
g62
sS'blocks.thisN'
p521
I2
sS'blocks.thisTrialN'
p522
I2
sa(dp523
g45
g51
sg426
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p524
I2
sg24
V
sg19
I0
sS'blocks.thisIndex'
p525
g430
sS'trials.thisRepN'
p526
I1
sg26
V
sS'trials.thisN'
p527
I10
sg433
Vtarget_1
p528
sg32
g12
sS'trials.thisTrialN'
p529
I4
sS'blocks.thisRepN'
p530
I0
sg17
F0.21822190284729004
sg44
g62
sS'blocks.thisN'
p531
I2
sS'blocks.thisTrialN'
p532
I2
sa(dp533
g45
g51
sg426
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p534
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p535
g430
sS'trials.thisRepN'
p536
I1
sg26
V
sS'trials.thisN'
p537
I11
sg433
Vinducer_2
p538
sg32
g12
sS'trials.thisTrialN'
p539
I5
sS'blocks.thisRepN'
p540
I0
sg17
F0.23453998565673828
sg44
g62
sg20
F0.2176368236541748
sS'blocks.thisN'
p541
I2
sS'blocks.thisTrialN'
p542
I2
sa(dp543
g45
g51
sg426
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p544
I4
sg24
V
sg19
I1
sS'blocks.thisIndex'
p545
g430
sS'trials.thisRepN'
p546
I2
sg26
V
sS'trials.thisN'
p547
I12
sg433
g453
sg32
g12
sS'trials.thisTrialN'
p548
I0
sS'blocks.thisRepN'
p549
I0
sg17
F0.18460512161254883
sg44
g62
sg20
F0.11839604377746582
sS'blocks.thisN'
p550
I2
sS'blocks.thisTrialN'
p551
I2
sa(dp552
g45
g51
sg426
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p553
I2
sg24
V
sg19
I0
sS'blocks.thisIndex'
p554
g430
sS'trials.thisRepN'
p555
I2
sg26
V
sS'trials.thisN'
p556
I13
sg433
g528
sg32
g12
sS'trials.thisTrialN'
p557
I1
sS'blocks.thisRepN'
p558
I0
sg17
F0.11788010597229004
sg44
g62
sS'blocks.thisN'
p559
I2
sS'blocks.thisTrialN'
p560
I2
sa(dp561
g45
g51
sg426
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p562
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p563
g430
sS'trials.thisRepN'
p564
I2
sg26
V
sS'trials.thisN'
p565
I14
sg433
g538
sg32
g12
sS'trials.thisTrialN'
p566
I2
sS'blocks.thisRepN'
p567
I0
sg17
F0.26869702339172363
sg44
g62
sg20
F0.20132708549499512
sS'blocks.thisN'
p568
I2
sS'blocks.thisTrialN'
p569
I2
sa(dp570
g45
g51
sg426
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p571
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p572
g430
sS'trials.thisRepN'
p573
I2
sg26
V
sS'trials.thisN'
p574
I15
sg433
g538
sg32
g12
sS'trials.thisTrialN'
p575
I3
sS'blocks.thisRepN'
p576
I0
sg17
F0.18431210517883301
sg44
g62
sg20
F0.11763095855712891
sS'blocks.thisN'
p577
I2
sS'blocks.thisTrialN'
p578
I2
sa(dp579
g45
g51
sg426
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p580
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p581
g430
sS'trials.thisRepN'
p582
I2
sg26
V
sS'trials.thisN'
p583
I16
sg433
g491
sg32
g12
sS'trials.thisTrialN'
p584
I4
sS'blocks.thisRepN'
p585
I0
sg17
F0.18453598022460938
sg44
g62
sg20
F0.10160398483276367
sS'blocks.thisN'
p586
I2
sS'blocks.thisTrialN'
p587
I2
sa(dp588
g45
g51
sg426
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p589
I5
sg24
V
sg19
I0
sS'blocks.thisIndex'
p590
g430
sS'trials.thisRepN'
p591
I2
sg26
V
sS'trials.thisN'
p592
I17
sg433
g463
sg32
g12
sS'trials.thisTrialN'
p593
I5
sS'blocks.thisRepN'
p594
I0
sg17
F0.10081815719604492
sg44
g62
sS'blocks.thisN'
p595
I2
sS'blocks.thisTrialN'
p596
I2
sa(dp597
g45
g51
sg426
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p598
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p599
g430
sS'trials.thisRepN'
p600
I3
sg26
V
sS'trials.thisN'
p601
I18
sg433
g491
sg32
g12
sS'trials.thisTrialN'
p602
I0
sS'blocks.thisRepN'
p603
I0
sg17
F0.26864290237426758
sg44
g62
sg20
F0.20158004760742188
sS'blocks.thisN'
p604
I2
sS'blocks.thisTrialN'
p605
I2
sa(dp606
g45
g51
sg426
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p607
I4
sg24
V
sg19
I1
sS'blocks.thisIndex'
p608
g430
sS'trials.thisRepN'
p609
I3
sg26
V
sS'trials.thisN'
p610
I19
sg433
g453
sg32
g12
sS'trials.thisTrialN'
p611
I1
sS'blocks.thisRepN'
p612
I0
sg17
F0.21993613243103027
sg44
g62
sg20
F0.16973185539245605
sS'blocks.thisN'
p613
I2
sS'blocks.thisTrialN'
p614
I2
sa(dp615
g45
g51
sg426
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p616
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p617
g430
sS'trials.thisRepN'
p618
I3
sg26
V
sS'trials.thisN'
p619
I20
sg433
g434
sg32
g12
sS'trials.thisTrialN'
p620
I2
sS'blocks.thisRepN'
p621
I0
sg17
F0.11911702156066895
sg44
g62
sS'blocks.thisN'
p622
I2
sS'blocks.thisTrialN'
p623
I2
sa(dp624
g45
g51
sg426
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p625
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p626
g430
sS'trials.thisRepN'
p627
I3
sg26
V
sS'trials.thisN'
p628
I21
sg433
g538
sg32
g12
sS'trials.thisTrialN'
p629
I3
sS'blocks.thisRepN'
p630
I0
sg17
F0.25317096710205078
sg44
g62
sg20
F0.1683809757232666
sS'blocks.thisN'
p631
I2
sS'blocks.thisTrialN'
p632
I2
sa(dp633
g45
g51
sg426
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p634
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p635
g430
sS'trials.thisRepN'
p636
I3
sg26
V
sS'trials.thisN'
p637
I22
sg433
g491
sg32
g12
sS'trials.thisTrialN'
p638
I4
sS'blocks.thisRepN'
p639
I0
sg17
F0.15116000175476074
sg44
g62
sg20
F0.10222506523132324
sS'blocks.thisN'
p640
I2
sS'blocks.thisTrialN'
p641
I2
sa(dp642
g45
g51
sg426
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p643
I4
sg24
V
sg19
I1
sS'blocks.thisIndex'
p644
g430
sS'trials.thisRepN'
p645
I3
sg26
V
sS'trials.thisN'
p646
I23
sg433
g453
sg32
g12
sS'trials.thisTrialN'
p647
I5
sS'blocks.thisRepN'
p648
I0
sg17
F0.20148110389709473
sg44
g62
sg20
F0.13487696647644043
sS'blocks.thisN'
p649
I2
sS'blocks.thisTrialN'
p650
I2
sa(dp651
g45
g51
sg426
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p652
I4
sg24
V
sg19
I1
sS'blocks.thisIndex'
p653
g430
sS'trials.thisRepN'
p654
I4
sg26
V
sS'trials.thisN'
p655
I24
sg433
g453
sg32
g12
sS'trials.thisTrialN'
p656
I0
sS'blocks.thisRepN'
p657
I0
sg17
F0.23487401008605957
sg44
g62
sg20
F0.15121197700500488
sS'blocks.thisN'
p658
I2
sS'blocks.thisTrialN'
p659
I2
sa(dp660
g45
g51
sg426
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p661
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p662
g430
sS'trials.thisRepN'
p663
I4
sg26
V
sS'trials.thisN'
p664
I25
sg433
g538
sg32
g12
sS'trials.thisTrialN'
p665
I1
sS'blocks.thisRepN'
p666
I0
sg17
F0.26735997200012207
sg44
g62
sg20
F0.16825699806213379
sS'blocks.thisN'
p667
I2
sS'blocks.thisTrialN'
p668
I2
sa(dp669
g45
g51
sg426
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p670
I4
sg24
V
sg19
I1
sS'blocks.thisIndex'
p671
g430
sS'trials.thisRepN'
p672
I4
sg26
V
sS'trials.thisN'
p673
I26
sg433
g453
sg32
g12
sS'trials.thisTrialN'
p674
I2
sS'blocks.thisRepN'
p675
I0
sg17
F0.25173115730285645
sg44
g62
sg20
F0.15184378623962402
sS'blocks.thisN'
p676
I2
sS'blocks.thisTrialN'
p677
I2
sa(dp678
g45
g51
sg426
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p679
I2
sg24
V
sg19
I0
sS'blocks.thisIndex'
p680
g430
sS'trials.thisRepN'
p681
I4
sg26
V
sS'trials.thisN'
p682
I27
sg433
g528
sg32
g12
sS'trials.thisTrialN'
p683
I3
sS'blocks.thisRepN'
p684
I0
sg17
F0.15207004547119141
sg44
g62
sS'blocks.thisN'
p685
I2
sS'blocks.thisTrialN'
p686
I2
sa(dp687
g45
g51
sg426
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p688
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p689
g430
sS'trials.thisRepN'
p690
I4
sg26
V
sS'trials.thisN'
p691
I28
sg433
g491
sg32
g12
sS'trials.thisTrialN'
p692
I4
sS'blocks.thisRepN'
p693
I0
sg17
F0.21848082542419434
sg44
g62
sg20
F0.1685330867767334
sS'blocks.thisN'
p694
I2
sS'blocks.thisTrialN'
p695
I2
sa(dp696
g45
g51
sg426
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p697
I5
sg24
V
sg19
I0
sS'blocks.thisIndex'
p698
g430
sS'trials.thisRepN'
p699
I4
sg26
V
sS'trials.thisN'
p700
I29
sg433
g463
sg32
g12
sS'trials.thisTrialN'
p701
I5
sS'blocks.thisRepN'
p702
I0
sg17
F0.10129880905151367
sg44
g62
sS'blocks.thisN'
p703
I2
sS'blocks.thisTrialN'
p704
I2
sa(dp705
g45
g51
sg426
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p706
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p707
g430
sS'trials.thisRepN'
p708
I5
sg26
V
sS'trials.thisN'
p709
I30
sg433
g538
sg32
g12
sS'trials.thisTrialN'
p710
I0
sS'blocks.thisRepN'
p711
I0
sg17
F0.23477697372436523
sg44
g62
sg20
F0.15076804161071777
sS'blocks.thisN'
p712
I2
sS'blocks.thisTrialN'
p713
I2
sa(dp714
g45
g51
sg426
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p715
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p716
g430
sS'trials.thisRepN'
p717
I5
sg26
V
sS'trials.thisN'
p718
I31
sg433
g434
sg32
g12
sS'trials.thisTrialN'
p719
I1
sS'blocks.thisRepN'
p720
I0
sg17
F0.1516420841217041
sg44
g62
sS'blocks.thisN'
p721
I2
sS'blocks.thisTrialN'
p722
I2
sa(dp723
g45
g51
sg426
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p724
I2
sg24
V
sg19
I0
sS'blocks.thisIndex'
p725
g430
sS'trials.thisRepN'
p726
I5
sg26
V
sS'trials.thisN'
p727
I32
sg433
g528
sg32
g12
sS'trials.thisTrialN'
p728
I2
sS'blocks.thisRepN'
p729
I0
sg17
F0.10094594955444336
sg44
g62
sS'blocks.thisN'
p730
I2
sS'blocks.thisTrialN'
p731
I2
sa(dp732
g45
g51
sg426
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p733
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p734
g430
sS'trials.thisRepN'
p735
I5
sg26
V
sS'trials.thisN'
p736
I33
sg433
g538
sg32
g12
sS'trials.thisTrialN'
p737
I3
sS'blocks.thisRepN'
p738
I0
sg17
F0.25134515762329102
sg44
g62
sg20
F0.20202517509460449
sS'blocks.thisN'
p739
I2
sS'blocks.thisTrialN'
p740
I2
sa(dp741
g45
g51
sg426
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p742
I5
sg24
V
sg19
I0
sS'blocks.thisIndex'
p743
g430
sS'trials.thisRepN'
p744
I5
sg26
V
sS'trials.thisN'
p745
I34
sg433
g463
sg32
g12
sS'trials.thisTrialN'
p746
I4
sS'blocks.thisRepN'
p747
I0
sg17
F0.15191507339477539
sg44
g62
sS'blocks.thisN'
p748
I2
sS'blocks.thisTrialN'
p749
I2
sa(dp750
g45
g51
sg426
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p751
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p752
g430
sS'trials.thisRepN'
p753
I5
sg26
V
sS'trials.thisN'
p754
I35
sg433
g434
sg32
g12
sS'trials.thisTrialN'
p755
I5
sS'blocks.thisRepN'
p756
I0
sg17
F0.1514439582824707
sg44
g62
sS'blocks.thisN'
p757
I2
sS'blocks.thisTrialN'
p758
I2
sa(dp759
g45
g51
sg426
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p760
I4
sg24
V
sg19
I1
sS'blocks.thisIndex'
p761
g430
sS'trials.thisRepN'
p762
I6
sg26
V
sS'trials.thisN'
p763
I36
sg433
g453
sg32
g12
sS'trials.thisTrialN'
p764
I0
sS'blocks.thisRepN'
p765
I0
sg17
F0.28480982780456543
sg44
g62
sg20
F0.20178794860839844
sS'blocks.thisN'
p766
I2
sS'blocks.thisTrialN'
p767
I2
sa(dp768
g45
g51
sg426
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p769
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p770
g430
sS'trials.thisRepN'
p771
I6
sg26
V
sS'trials.thisN'
p772
I37
sg433
g434
sg32
g12
sS'trials.thisTrialN'
p773
I1
sS'blocks.thisRepN'
p774
I0
sg17
F0.11834716796875
sg44
g62
sS'blocks.thisN'
p775
I2
sS'blocks.thisTrialN'
p776
I2
sa(dp777
g45
g51
sg426
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p778
I5
sg24
V
sg19
I0
sS'blocks.thisIndex'
p779
g430
sS'trials.thisRepN'
p780
I6
sg26
V
sS'trials.thisN'
p781
I38
sg433
g463
sg32
g12
sS'trials.thisTrialN'
p782
I2
sS'blocks.thisRepN'
p783
I0
sg17
F0.1691749095916748
sg44
g62
sS'blocks.thisN'
p784
I2
sS'blocks.thisTrialN'
p785
I2
sa(dp786
g45
g51
sg426
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p787
I5
sg24
V
sg19
I0
sS'blocks.thisIndex'
p788
g430
sS'trials.thisRepN'
p789
I6
sg26
V
sS'trials.thisN'
p790
I39
sg433
g463
sg32
g12
sS'trials.thisTrialN'
p791
I3
sS'blocks.thisRepN'
p792
I0
sg17
F0.20005702972412109
sg44
g62
sS'blocks.thisN'
p793
I2
sS'blocks.thisTrialN'
p794
I2
sa(dp795
g45
g51
sg426
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p796
I4
sg24
V
sg19
I1
sS'blocks.thisIndex'
p797
g430
sS'trials.thisRepN'
p798
I6
sg26
V
sS'trials.thisN'
p799
I40
sg433
g453
sg32
g12
sS'trials.thisTrialN'
p800
I4
sS'blocks.thisRepN'
p801
I0
sg17
F0.26924014091491699
sg44
g62
sg20
F0.21745896339416504
sS'blocks.thisN'
p802
I2
sS'blocks.thisTrialN'
p803
I2
sa(dp804
g45
g51
sg426
I3
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p805
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p806
g430
sS'trials.thisRepN'
p807
I6
sg26
V
sS'trials.thisN'
p808
I41
sg433
g528
sg32
g12
sS'trials.thisTrialN'
p809
I5
sS'blocks.thisRepN'
p810
I0
sg17
F0.18606686592102051
sg44
g62
sg20
F0.18579578399658203
sS'blocks.thisN'
p811
I2
sS'blocks.thisTrialN'
p812
I2
sa(dp813
g45
g51
sg426
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p814
I2
sg24
V
sg19
I0
sS'blocks.thisIndex'
p815
g430
sS'trials.thisRepN'
p816
I7
sg26
V
sS'trials.thisN'
p817
I42
sg433
g528
sg32
g12
sS'trials.thisTrialN'
p818
I0
sS'blocks.thisRepN'
p819
I0
sg17
F0.15091705322265625
sg44
g62
sS'blocks.thisN'
p820
I2
sS'blocks.thisTrialN'
p821
I2
sa(dp822
g45
g51
sg426
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p823
I2
sg24
V
sg19
I0
sS'blocks.thisIndex'
p824
g430
sS'trials.thisRepN'
p825
I7
sg26
V
sS'trials.thisN'
p826
I43
sg433
g528
sg32
g12
sS'trials.thisTrialN'
p827
I1
sS'blocks.thisRepN'
p828
I0
sg17
F0.13464808464050293
sg44
g62
sS'blocks.thisN'
p829
I2
sS'blocks.thisTrialN'
p830
I2
sa(dp831
g45
g51
sg426
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p832
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p833
g430
sS'trials.thisRepN'
p834
I7
sg26
V
sS'trials.thisN'
p835
I44
sg433
g538
sg32
g12
sS'trials.thisTrialN'
p836
I2
sS'blocks.thisRepN'
p837
I0
sg17
F0.21882796287536621
sg44
g62
sg20
F0.15007305145263672
sS'blocks.thisN'
p838
I2
sS'blocks.thisTrialN'
p839
I2
sa(dp840
g45
g51
sg426
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p841
I5
sg24
V
sg19
I0
sS'blocks.thisIndex'
p842
g430
sS'trials.thisRepN'
p843
I7
sg26
V
sS'trials.thisN'
p844
I45
sg433
g463
sg32
g12
sS'trials.thisTrialN'
p845
I3
sS'blocks.thisRepN'
p846
I0
sg17
F0.13437199592590332
sg44
g62
sS'blocks.thisN'
p847
I2
sS'blocks.thisTrialN'
p848
I2
sa(dp849
g45
g51
sg426
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p850
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p851
g430
sS'trials.thisRepN'
p852
I7
sg26
V
sS'trials.thisN'
p853
I46
sg433
g434
sg32
g12
sS'trials.thisTrialN'
p854
I4
sS'blocks.thisRepN'
p855
I0
sg17
F0.16789603233337402
sg44
g62
sS'blocks.thisN'
p856
I2
sS'blocks.thisTrialN'
p857
I2
sa(dp858
g45
g51
sg426
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p859
I4
sg24
V
sg19
I1
sS'blocks.thisIndex'
p860
g430
sS'trials.thisRepN'
p861
I7
sg26
V
sS'trials.thisN'
p862
I47
sg433
g453
sg32
g12
sS'trials.thisTrialN'
p863
I5
sS'blocks.thisRepN'
p864
I0
sg17
F0.21997594833374023
sg44
g62
sg20
F0.16823816299438477
sS'blocks.thisN'
p865
I2
sS'blocks.thisTrialN'
p866
I2
sa(dp867
g45
g51
sg426
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p868
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p869
g430
sS'trials.thisRepN'
p870
I8
sg26
V
sS'trials.thisN'
p871
I48
sg433
g434
sg32
g12
sS'trials.thisTrialN'
p872
I0
sS'blocks.thisRepN'
p873
I0
sg17
F0.1512749195098877
sg44
g62
sS'blocks.thisN'
p874
I2
sS'blocks.thisTrialN'
p875
I2
sa(dp876
g45
g51
sg426
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p877
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p878
g430
sS'trials.thisRepN'
p879
I8
sg26
V
sS'trials.thisN'
p880
I49
sg433
g538
sg32
g12
sS'trials.thisTrialN'
p881
I1
sS'blocks.thisRepN'
p882
I0
sg17
F0.26820206642150879
sg44
g62
sg20
F0.20122909545898438
sS'blocks.thisN'
p883
I2
sS'blocks.thisTrialN'
p884
I2
sa(dp885
g45
g51
sg426
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p886
I2
sg24
V
sg19
I0
sS'blocks.thisIndex'
p887
g430
sS'trials.thisRepN'
p888
I8
sg26
V
sS'trials.thisN'
p889
I50
sg433
g528
sg32
g12
sS'trials.thisTrialN'
p890
I2
sS'blocks.thisRepN'
p891
I0
sg17
F0.13592004776000977
sg44
g62
sS'blocks.thisN'
p892
I2
sS'blocks.thisTrialN'
p893
I2
sa(dp894
g45
g51
sg426
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p895
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p896
g430
sS'trials.thisRepN'
p897
I8
sg26
V
sS'trials.thisN'
p898
I51
sg433
g538
sg32
g12
sS'trials.thisTrialN'
p899
I3
sS'blocks.thisRepN'
p900
I0
sg17
F0.23514795303344727
sg44
g62
sg20
F0.1849830150604248
sS'blocks.thisN'
p901
I2
sS'blocks.thisTrialN'
p902
I2
sa(dp903
g45
g51
sg426
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p904
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p905
g430
sS'trials.thisRepN'
p906
I8
sg26
V
sS'trials.thisN'
p907
I52
sg433
g491
sg32
g12
sS'trials.thisTrialN'
p908
I4
sS'blocks.thisRepN'
p909
I0
sg17
F0.18453717231750488
sg44
g62
sg20
F0.13714098930358887
sS'blocks.thisN'
p910
I2
sS'blocks.thisTrialN'
p911
I2
sa(dp912
g45
g51
sg426
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p913
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p914
g430
sS'trials.thisRepN'
p915
I8
sg26
V
sS'trials.thisN'
p916
I53
sg433
g491
sg32
g12
sS'trials.thisTrialN'
p917
I5
sS'blocks.thisRepN'
p918
I0
sg17
F0.20072197914123535
sg44
g62
sg20
F0.099718093872070312
sS'blocks.thisN'
p919
I2
sS'blocks.thisTrialN'
p920
I2
sa(dp921
g45
g51
sg426
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p922
I2
sg24
V
sg19
I0
sS'blocks.thisIndex'
p923
g430
sS'trials.thisRepN'
p924
I9
sg26
V
sS'trials.thisN'
p925
I54
sg433
g528
sg32
g12
sS'trials.thisTrialN'
p926
I0
sS'blocks.thisRepN'
p927
I0
sg17
F0.052258968353271484
sg44
g62
sS'blocks.thisN'
p928
I2
sS'blocks.thisTrialN'
p929
I2
sa(dp930
g45
g51
sg426
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p931
I2
sg24
V
sg19
I0
sS'blocks.thisIndex'
p932
g430
sS'trials.thisRepN'
p933
I9
sg26
V
sS'trials.thisN'
p934
I55
sg433
g528
sg32
g12
sS'trials.thisTrialN'
p935
I1
sS'blocks.thisRepN'
p936
I0
sg17
F0.16775918006896973
sg44
g62
sS'blocks.thisN'
p937
I2
sS'blocks.thisTrialN'
p938
I2
sa(dp939
g45
g51
sg426
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p940
I4
sg24
V
sg19
I1
sS'blocks.thisIndex'
p941
g430
sS'trials.thisRepN'
p942
I9
sg26
V
sS'trials.thisN'
p943
I56
sg433
g453
sg32
g12
sS'trials.thisTrialN'
p944
I2
sS'blocks.thisRepN'
p945
I0
sg17
F0.30323100090026855
sg44
g62
sg20
F0.18576788902282715
sS'blocks.thisN'
p946
I2
sS'blocks.thisTrialN'
p947
I2
sa(dp948
g45
g51
sg426
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p949
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p950
g430
sS'trials.thisRepN'
p951
I9
sg26
V
sS'trials.thisN'
p952
I57
sg433
g434
sg32
g12
sS'trials.thisTrialN'
p953
I3
sS'blocks.thisRepN'
p954
I0
sg17
F0.11860108375549316
sg44
g62
sS'blocks.thisN'
p955
I2
sS'blocks.thisTrialN'
p956
I2
sa(dp957
g45
g51
sg426
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p958
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p959
g430
sS'trials.thisRepN'
p960
I9
sg26
V
sS'trials.thisN'
p961
I58
sg433
g434
sg32
g12
sS'trials.thisTrialN'
p962
I4
sS'blocks.thisRepN'
p963
I0
sg17
F0.13511013984680176
sg44
g62
sS'blocks.thisN'
p964
I2
sS'blocks.thisTrialN'
p965
I2
sa(dp966
g45
g51
sg426
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g427
sS'trials.thisIndex'
p967
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p968
g430
sS'trials.thisRepN'
p969
I9
sg26
V
sS'trials.thisN'
p970
I59
sg433
g491
sg32
g12
sS'trials.thisTrialN'
p971
I5
sS'blocks.thisRepN'
p972
I0
sg17
F0.25256204605102539
sg44
g62
sg20
F0.18561816215515137
sS'blocks.thisN'
p973
I2
sS'blocks.thisTrialN'
p974
I2
sa(dp975
g45
g51
sVtrial_type
p976
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
VThe next phase presents only the blue statements.\u000a\u000aIMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u000a\u000aYou must respond AS IF 'I am bad and not good'.\u000a\u000aFor example:\u000aWhen 'I am valuable' appears, respond with FALSE.\u000aWhen 'I am worthless' appears, respond with TRUE.\u000a\u000aGo as quickly as you can while being accurate.\u000aIf you make a mistake, hit the correct key as soon as possible.\u000a\u000aPress E or I to continue.
p977
sS'trials.thisIndex'
p978
I1
sg24
V
sg19
I0
sS'blocks.thisIndex'
p979
g28
(g55
S'\x03\x00\x00\x00'
tRp980
sS'trials.thisRepN'
p981
I0
sg26
V
sS'trials.thisN'
p982
I0
sVdescriptor
p983
Vtarget_2
p984
sg32
g12
sS'trials.thisTrialN'
p985
I0
sS'blocks.thisRepN'
p986
I0
sg17
F0.20140194892883301
sg44
g62
sS'blocks.thisN'
p987
I3
sS'blocks.thisTrialN'
p988
I3
sa(dp989
g45
g51
sg976
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p990
I1
sg24
V
sg19
I0
sS'blocks.thisIndex'
p991
g980
sS'trials.thisRepN'
p992
I0
sg26
V
sS'trials.thisN'
p993
I1
sg983
g984
sg32
g12
sS'trials.thisTrialN'
p994
I1
sS'blocks.thisRepN'
p995
I0
sg17
F0.16765022277832031
sg44
g62
sS'blocks.thisN'
p996
I3
sS'blocks.thisTrialN'
p997
I3
sa(dp998
g45
g51
sg976
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p999
I0
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1000
g980
sS'trials.thisRepN'
p1001
I0
sg26
V
sS'trials.thisN'
p1002
I2
sg983
Vtarget_1
p1003
sg32
g12
sS'trials.thisTrialN'
p1004
I2
sS'blocks.thisRepN'
p1005
I0
sg17
F0.21827983856201172
sg44
g62
sg20
F0.16772794723510742
sS'blocks.thisN'
p1006
I3
sS'blocks.thisTrialN'
p1007
I3
sa(dp1008
g45
g51
sg976
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1009
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1010
g980
sS'trials.thisRepN'
p1011
I0
sg26
V
sS'trials.thisN'
p1012
I3
sg983
Vtarget_4
p1013
sg32
g12
sS'trials.thisTrialN'
p1014
I3
sS'blocks.thisRepN'
p1015
I0
sg17
F0.11853408813476562
sg44
g62
sg20
F0.10062694549560547
sS'blocks.thisN'
p1016
I3
sS'blocks.thisTrialN'
p1017
I3
sa(dp1018
g45
g51
sg976
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1019
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1020
g980
sS'trials.thisRepN'
p1021
I1
sg26
V
sS'trials.thisN'
p1022
I4
sg983
g1013
sg32
g12
sS'trials.thisTrialN'
p1023
I0
sS'blocks.thisRepN'
p1024
I0
sg17
F0.20191001892089844
sg44
g62
sg20
F0.1516578197479248
sS'blocks.thisN'
p1025
I3
sS'blocks.thisTrialN'
p1026
I3
sa(dp1027
g45
g51
sg976
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1028
I2
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1029
g980
sS'trials.thisRepN'
p1030
I1
sg26
V
sS'trials.thisN'
p1031
I5
sg983
Vtarget_3
p1032
sg32
g12
sS'trials.thisTrialN'
p1033
I1
sS'blocks.thisRepN'
p1034
I0
sg17
F0.13445305824279785
sg44
g62
sS'blocks.thisN'
p1035
I3
sS'blocks.thisTrialN'
p1036
I3
sa(dp1037
g45
g51
sg976
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1038
I0
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1039
g980
sS'trials.thisRepN'
p1040
I1
sg26
V
sS'trials.thisN'
p1041
I6
sg983
g1003
sg32
g12
sS'trials.thisTrialN'
p1042
I2
sS'blocks.thisRepN'
p1043
I0
sg17
F0.23493409156799316
sg44
g62
sg20
F0.18517398834228516
sS'blocks.thisN'
p1044
I3
sS'blocks.thisTrialN'
p1045
I3
sa(dp1046
g45
g51
sg976
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1047
I1
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1048
g980
sS'trials.thisRepN'
p1049
I1
sg26
V
sS'trials.thisN'
p1050
I7
sg983
g984
sg32
g12
sS'trials.thisTrialN'
p1051
I3
sS'blocks.thisRepN'
p1052
I0
sg17
F0.11907410621643066
sg44
g62
sS'blocks.thisN'
p1053
I3
sS'blocks.thisTrialN'
p1054
I3
sa(dp1055
g45
g51
sg976
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1056
I2
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1057
g980
sS'trials.thisRepN'
p1058
I2
sg26
V
sS'trials.thisN'
p1059
I8
sg983
g1032
sg32
g12
sS'trials.thisTrialN'
p1060
I0
sS'blocks.thisRepN'
p1061
I0
sg17
F0.20153498649597168
sg44
g62
sS'blocks.thisN'
p1062
I3
sS'blocks.thisTrialN'
p1063
I3
sa(dp1064
g45
g51
sg976
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1065
I2
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1066
g980
sS'trials.thisRepN'
p1067
I2
sg26
V
sS'trials.thisN'
p1068
I9
sg983
g1032
sg32
g12
sS'trials.thisTrialN'
p1069
I1
sS'blocks.thisRepN'
p1070
I0
sg17
F0.13505697250366211
sg44
g62
sS'blocks.thisN'
p1071
I3
sS'blocks.thisTrialN'
p1072
I3
sa(dp1073
g45
g51
sg976
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1074
I2
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1075
g980
sS'trials.thisRepN'
p1076
I2
sg26
V
sS'trials.thisN'
p1077
I10
sg983
g1032
sg32
g12
sS'trials.thisTrialN'
p1078
I2
sS'blocks.thisRepN'
p1079
I0
sg17
F0.15218091011047363
sg44
g62
sS'blocks.thisN'
p1080
I3
sS'blocks.thisTrialN'
p1081
I3
sa(dp1082
g45
g51
sg976
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1083
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1084
g980
sS'trials.thisRepN'
p1085
I2
sg26
V
sS'trials.thisN'
p1086
I11
sg983
g1013
sg32
g12
sS'trials.thisTrialN'
p1087
I3
sS'blocks.thisRepN'
p1088
I0
sg17
F0.18449902534484863
sg44
g62
sg20
F0.11851882934570312
sS'blocks.thisN'
p1089
I3
sS'blocks.thisTrialN'
p1090
I3
sa(dp1091
g45
g51
sg976
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1092
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1093
g980
sS'trials.thisRepN'
p1094
I3
sg26
V
sS'trials.thisN'
p1095
I12
sg983
g1013
sg32
g12
sS'trials.thisTrialN'
p1096
I0
sS'blocks.thisRepN'
p1097
I0
sg17
F0.1350560188293457
sg44
g62
sg20
F0.050734996795654297
sS'blocks.thisN'
p1098
I3
sS'blocks.thisTrialN'
p1099
I3
sa(dp1100
g45
g51
sg976
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1101
I1
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1102
g980
sS'trials.thisRepN'
p1103
I3
sg26
V
sS'trials.thisN'
p1104
I13
sg983
g984
sg32
g12
sS'trials.thisTrialN'
p1105
I1
sS'blocks.thisRepN'
p1106
I0
sg17
F0.084030866622924805
sg44
g62
sS'blocks.thisN'
p1107
I3
sS'blocks.thisTrialN'
p1108
I3
sa(dp1109
g45
g51
sg976
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1110
I0
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1111
g980
sS'trials.thisRepN'
p1112
I3
sg26
V
sS'trials.thisN'
p1113
I14
sg983
g1003
sg32
g12
sS'trials.thisTrialN'
p1114
I2
sS'blocks.thisRepN'
p1115
I0
sg17
F0.23507094383239746
sg44
g62
sg20
F0.16805696487426758
sS'blocks.thisN'
p1116
I3
sS'blocks.thisTrialN'
p1117
I3
sa(dp1118
g45
g51
sg976
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1119
I0
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1120
g980
sS'trials.thisRepN'
p1121
I3
sg26
V
sS'trials.thisN'
p1122
I15
sg983
g1003
sg32
g12
sS'trials.thisTrialN'
p1123
I3
sS'blocks.thisRepN'
p1124
I0
sg17
F0.16817998886108398
sg44
g62
sg20
F0.11730098724365234
sS'blocks.thisN'
p1125
I3
sS'blocks.thisTrialN'
p1126
I3
sa(dp1127
g45
g51
sg976
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1128
I1
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1129
g980
sS'trials.thisRepN'
p1130
I4
sg26
V
sS'trials.thisN'
p1131
I16
sg983
g984
sg32
g12
sS'trials.thisTrialN'
p1132
I0
sS'blocks.thisRepN'
p1133
I0
sg17
F0.15139389038085938
sg44
g62
sS'blocks.thisN'
p1134
I3
sS'blocks.thisTrialN'
p1135
I3
sa(dp1136
g45
g51
sg976
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1137
I3
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1138
g980
sS'trials.thisRepN'
p1139
I4
sg26
V
sS'trials.thisN'
p1140
I17
sg983
g1013
sg32
g12
sS'trials.thisTrialN'
p1141
I1
sS'blocks.thisRepN'
p1142
I0
sg17
F0.21875596046447754
sg44
g62
sg20
F0.18397998809814453
sS'blocks.thisN'
p1143
I3
sS'blocks.thisTrialN'
p1144
I3
sa(dp1145
g45
g51
sg976
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1146
I2
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1147
g980
sS'trials.thisRepN'
p1148
I4
sg26
V
sS'trials.thisN'
p1149
I18
sg983
g1032
sg32
g12
sS'trials.thisTrialN'
p1150
I2
sS'blocks.thisRepN'
p1151
I0
sg17
F0.083894014358520508
sg44
g62
sS'blocks.thisN'
p1152
I3
sS'blocks.thisTrialN'
p1153
I3
sa(dp1154
g45
g51
sg976
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g977
sS'trials.thisIndex'
p1155
I0
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1156
g980
sS'trials.thisRepN'
p1157
I4
sg26
V
sS'trials.thisN'
p1158
I19
sg983
g1003
sg32
g12
sS'trials.thisTrialN'
p1159
I3
sS'blocks.thisRepN'
p1160
I0
sg17
F0.21830296516418457
sg44
g62
sg20
F0.18587708473205566
sS'blocks.thisN'
p1161
I3
sS'blocks.thisTrialN'
p1162
I3
sa(dp1163
g45
g51
sVtrial_type
p1164
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
VThe next phase presents both the orange words and blue statements.\u000a\u000aYou must both respond to the statements in blue AS IF 'I am bad and not good',\u000aand categorise the orange words as referring to TRUE or FALSE.\u000a\u000aGo as quickly as you can while being accurate.\u000aIf you make a mistake, hit the correct key as soon as possible.\u000a\u000aPress E or I to continue.
p1165
sS'trials.thisIndex'
p1166
I5
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1167
g28
(g55
S'\x04\x00\x00\x00'
tRp1168
sS'trials.thisRepN'
p1169
I0
sg26
V
sS'trials.thisN'
p1170
I0
sVdescriptor
p1171
Vtarget_4
p1172
sg32
g12
sS'trials.thisTrialN'
p1173
I0
sS'blocks.thisRepN'
p1174
I0
sg17
F0.1841890811920166
sg44
g62
sg20
F0.13483881950378418
sS'blocks.thisN'
p1175
I4
sS'blocks.thisTrialN'
p1176
I4
sa(dp1177
g45
g51
sg1164
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1178
I4
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1179
g1168
sS'trials.thisRepN'
p1180
I0
sg26
V
sS'trials.thisN'
p1181
I1
sg1171
Vtarget_3
p1182
sg32
g12
sS'trials.thisTrialN'
p1183
I1
sS'blocks.thisRepN'
p1184
I0
sg17
F0.085097074508666992
sg44
g62
sS'blocks.thisN'
p1185
I4
sS'blocks.thisTrialN'
p1186
I4
sa(dp1187
g45
g51
sg1164
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1188
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1189
g1168
sS'trials.thisRepN'
p1190
I0
sg26
V
sS'trials.thisN'
p1191
I2
sg1171
Vinducer_2
p1192
sg32
g12
sS'trials.thisTrialN'
p1193
I2
sS'blocks.thisRepN'
p1194
I0
sg17
F0.20113110542297363
sg44
g62
sg20
F0.13519477844238281
sS'blocks.thisN'
p1195
I4
sS'blocks.thisTrialN'
p1196
I4
sa(dp1197
g45
g51
sg1164
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1198
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1199
g1168
sS'trials.thisRepN'
p1200
I0
sg26
V
sS'trials.thisN'
p1201
I3
sg1171
g1192
sg32
g12
sS'trials.thisTrialN'
p1202
I3
sS'blocks.thisRepN'
p1203
I0
sg17
F0.11779904365539551
sg44
g62
sg20
F0.06753993034362793
sS'blocks.thisN'
p1204
I4
sS'blocks.thisTrialN'
p1205
I4
sa(dp1206
g45
g51
sg1164
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1207
I4
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1208
g1168
sS'trials.thisRepN'
p1209
I0
sg26
V
sS'trials.thisN'
p1210
I4
sg1171
g1182
sg32
g12
sS'trials.thisTrialN'
p1211
I4
sS'blocks.thisRepN'
p1212
I0
sg17
F0.10127496719360352
sg44
g62
sS'blocks.thisN'
p1213
I4
sS'blocks.thisTrialN'
p1214
I4
sa(dp1215
g45
g51
sg1164
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1216
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1217
g1168
sS'trials.thisRepN'
p1218
I0
sg26
V
sS'trials.thisN'
p1219
I5
sg1171
Vtarget_2
p1220
sg32
g12
sS'trials.thisTrialN'
p1221
I5
sS'blocks.thisRepN'
p1222
I0
sg17
F0.15081501007080078
sg44
g62
sS'blocks.thisN'
p1223
I4
sS'blocks.thisTrialN'
p1224
I4
sa(dp1225
g45
g51
sg1164
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1226
I5
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1227
g1168
sS'trials.thisRepN'
p1228
I1
sg26
V
sS'trials.thisN'
p1229
I6
sg1171
g1172
sg32
g12
sS'trials.thisTrialN'
p1230
I0
sS'blocks.thisRepN'
p1231
I0
sg17
F0.16820001602172852
sg44
g62
sg20
F0.1178901195526123
sS'blocks.thisN'
p1232
I4
sS'blocks.thisTrialN'
p1233
I4
sa(dp1234
g45
g51
sg1164
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1235
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1236
g1168
sS'trials.thisRepN'
p1237
I1
sg26
V
sS'trials.thisN'
p1238
I7
sg1171
g1192
sg32
g12
sS'trials.thisTrialN'
p1239
I1
sS'blocks.thisRepN'
p1240
I0
sg17
F0.13470721244812012
sg44
g62
sg20
F0.066895961761474609
sS'blocks.thisN'
p1241
I4
sS'blocks.thisTrialN'
p1242
I4
sa(dp1243
g45
g51
sg1164
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1244
I5
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1245
g1168
sS'trials.thisRepN'
p1246
I1
sg26
V
sS'trials.thisN'
p1247
I8
sg1171
g1172
sg32
g12
sS'trials.thisTrialN'
p1248
I2
sS'blocks.thisRepN'
p1249
I0
sg17
F0.11756992340087891
sg44
g62
sg20
F0.067718029022216797
sS'blocks.thisN'
p1250
I4
sS'blocks.thisTrialN'
p1251
I4
sa(dp1252
g45
g51
sg1164
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1253
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1254
g1168
sS'trials.thisRepN'
p1255
I1
sg26
V
sS'trials.thisN'
p1256
I9
sg1171
Vtarget_1
p1257
sg32
g12
sS'trials.thisTrialN'
p1258
I3
sS'blocks.thisRepN'
p1259
I0
sg17
F0.1180729866027832
sg44
g62
sg20
F0.06694793701171875
sS'blocks.thisN'
p1260
I4
sS'blocks.thisTrialN'
p1261
I4
sa(dp1262
g45
g51
sg1164
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1263
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1264
g1168
sS'trials.thisRepN'
p1265
I1
sg26
V
sS'trials.thisN'
p1266
I10
sg1171
g1257
sg32
g12
sS'trials.thisTrialN'
p1267
I4
sS'blocks.thisRepN'
p1268
I0
sg17
F0.10129499435424805
sg44
g62
sg20
F0.033746004104614258
sS'blocks.thisN'
p1269
I4
sS'blocks.thisTrialN'
p1270
I4
sa(dp1271
g45
g51
sg1164
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1272
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1273
g1168
sS'trials.thisRepN'
p1274
I1
sg26
V
sS'trials.thisN'
p1275
I11
sg1171
g1220
sg32
g12
sS'trials.thisTrialN'
p1276
I5
sS'blocks.thisRepN'
p1277
I0
sg17
F0.067560195922851562
sg44
g62
sS'blocks.thisN'
p1278
I4
sS'blocks.thisTrialN'
p1279
I4
sa(dp1280
g45
g51
sg1164
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1281
I4
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1282
g1168
sS'trials.thisRepN'
p1283
I2
sg26
V
sS'trials.thisN'
p1284
I12
sg1171
g1182
sg32
g12
sS'trials.thisTrialN'
p1285
I0
sS'blocks.thisRepN'
p1286
I0
sg17
F0.11846303939819336
sg44
g62
sS'blocks.thisN'
p1287
I4
sS'blocks.thisTrialN'
p1288
I4
sa(dp1289
g45
g51
sg1164
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1290
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1291
g1168
sS'trials.thisRepN'
p1292
I2
sg26
V
sS'trials.thisN'
p1293
I13
sg1171
g1220
sg32
g12
sS'trials.thisTrialN'
p1294
I1
sS'blocks.thisRepN'
p1295
I0
sg17
F0.10174918174743652
sg44
g62
sS'blocks.thisN'
p1296
I4
sS'blocks.thisTrialN'
p1297
I4
sa(dp1298
g45
g51
sg1164
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1299
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1300
g1168
sS'trials.thisRepN'
p1301
I2
sg26
V
sS'trials.thisN'
p1302
I14
sg1171
g1220
sg32
g12
sS'trials.thisTrialN'
p1303
I2
sS'blocks.thisRepN'
p1304
I0
sg17
F0.10137510299682617
sg44
g62
sS'blocks.thisN'
p1305
I4
sS'blocks.thisTrialN'
p1306
I4
sa(dp1307
g45
g51
sg1164
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1308
I5
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1309
g1168
sS'trials.thisRepN'
p1310
I2
sg26
V
sS'trials.thisN'
p1311
I15
sg1171
g1172
sg32
g12
sS'trials.thisTrialN'
p1312
I3
sS'blocks.thisRepN'
p1313
I0
sg17
F0.21819591522216797
sg44
g62
sg20
F0.15134096145629883
sS'blocks.thisN'
p1314
I4
sS'blocks.thisTrialN'
p1315
I4
sa(dp1316
g45
g51
sg1164
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1317
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1318
g1168
sS'trials.thisRepN'
p1319
I2
sg26
V
sS'trials.thisN'
p1320
I16
sg1171
g1192
sg32
g12
sS'trials.thisTrialN'
p1321
I4
sS'blocks.thisRepN'
p1322
I0
sg17
F0.11859607696533203
sg44
g62
sg20
F0.066300153732299805
sS'blocks.thisN'
p1323
I4
sS'blocks.thisTrialN'
p1324
I4
sa(dp1325
g45
g51
sg1164
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1326
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1327
g1168
sS'trials.thisRepN'
p1328
I2
sg26
V
sS'trials.thisN'
p1329
I17
sg1171
g1192
sg32
g12
sS'trials.thisTrialN'
p1330
I5
sS'blocks.thisRepN'
p1331
I0
sg17
F0.10076808929443359
sg44
g62
sg20
F0.033899068832397461
sS'blocks.thisN'
p1332
I4
sS'blocks.thisTrialN'
p1333
I4
sa(dp1334
g45
g51
sg1164
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1335
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1336
g1168
sS'trials.thisRepN'
p1337
I3
sg26
V
sS'trials.thisN'
p1338
I18
sg1171
Vinducer_1
p1339
sg32
g12
sS'trials.thisTrialN'
p1340
I0
sS'blocks.thisRepN'
p1341
I0
sg17
F0.066822052001953125
sg44
g62
sS'blocks.thisN'
p1342
I4
sS'blocks.thisTrialN'
p1343
I4
sa(dp1344
g45
g51
sg1164
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1345
I4
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1346
g1168
sS'trials.thisRepN'
p1347
I3
sg26
V
sS'trials.thisN'
p1348
I19
sg1171
g1182
sg32
g12
sS'trials.thisTrialN'
p1349
I1
sS'blocks.thisRepN'
p1350
I0
sg17
F0.083899974822998047
sg44
g62
sS'blocks.thisN'
p1351
I4
sS'blocks.thisTrialN'
p1352
I4
sa(dp1353
g45
g51
sg1164
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1354
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1355
g1168
sS'trials.thisRepN'
p1356
I3
sg26
V
sS'trials.thisN'
p1357
I20
sg1171
g1192
sg32
g12
sS'trials.thisTrialN'
p1358
I2
sS'blocks.thisRepN'
p1359
I0
sg17
F0.15093994140625
sg44
g62
sg20
F0.10109496116638184
sS'blocks.thisN'
p1360
I4
sS'blocks.thisTrialN'
p1361
I4
sa(dp1362
g45
g51
sg1164
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1363
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1364
g1168
sS'trials.thisRepN'
p1365
I3
sg26
V
sS'trials.thisN'
p1366
I21
sg1171
g1220
sg32
g12
sS'trials.thisTrialN'
p1367
I3
sS'blocks.thisRepN'
p1368
I0
sg17
F0.052382946014404297
sg44
g62
sS'blocks.thisN'
p1369
I4
sS'blocks.thisTrialN'
p1370
I4
sa(dp1371
g45
g51
sg1164
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1372
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1373
g1168
sS'trials.thisRepN'
p1374
I3
sg26
V
sS'trials.thisN'
p1375
I22
sg1171
g1257
sg32
g12
sS'trials.thisTrialN'
p1376
I4
sS'blocks.thisRepN'
p1377
I0
sg17
F0.15157604217529297
sg44
g62
sg20
F0.10168194770812988
sS'blocks.thisN'
p1378
I4
sS'blocks.thisTrialN'
p1379
I4
sa(dp1380
g45
g51
sg1164
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1381
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1382
g1168
sS'trials.thisRepN'
p1383
I3
sg26
V
sS'trials.thisN'
p1384
I23
sg1171
g1220
sg32
g12
sS'trials.thisTrialN'
p1385
I5
sS'blocks.thisRepN'
p1386
I0
sg17
F0.051545143127441406
sg44
g62
sS'blocks.thisN'
p1387
I4
sS'blocks.thisTrialN'
p1388
I4
sa(dp1389
g45
g51
sg1164
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1390
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1391
g1168
sS'trials.thisRepN'
p1392
I4
sg26
V
sS'trials.thisN'
p1393
I24
sg1171
g1220
sg32
g12
sS'trials.thisTrialN'
p1394
I0
sS'blocks.thisRepN'
p1395
I0
sg17
F0.067651987075805664
sg44
g62
sS'blocks.thisN'
p1396
I4
sS'blocks.thisTrialN'
p1397
I4
sa(dp1398
g45
g51
sg1164
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1399
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1400
g1168
sS'trials.thisRepN'
p1401
I4
sg26
V
sS'trials.thisN'
p1402
I25
sg1171
g1257
sg32
g12
sS'trials.thisTrialN'
p1403
I1
sS'blocks.thisRepN'
p1404
I0
sg17
F0.1516571044921875
sg44
g62
sg20
F0.11738014221191406
sS'blocks.thisN'
p1405
I4
sS'blocks.thisTrialN'
p1406
I4
sa(dp1407
g45
g51
sg1164
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1408
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1409
g1168
sS'trials.thisRepN'
p1410
I4
sg26
V
sS'trials.thisN'
p1411
I26
sg1171
g1192
sg32
g12
sS'trials.thisTrialN'
p1412
I2
sS'blocks.thisRepN'
p1413
I0
sg17
F0.10030198097229004
sg44
g62
sg20
F0.06742405891418457
sS'blocks.thisN'
p1414
I4
sS'blocks.thisTrialN'
p1415
I4
sa(dp1416
g45
g51
sg1164
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1417
I4
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1418
g1168
sS'trials.thisRepN'
p1419
I4
sg26
V
sS'trials.thisN'
p1420
I27
sg1171
g1182
sg32
g12
sS'trials.thisTrialN'
p1421
I3
sS'blocks.thisRepN'
p1422
I0
sg17
F0.018213033676147461
sg44
g62
sS'blocks.thisN'
p1423
I4
sS'blocks.thisTrialN'
p1424
I4
sa(dp1425
g45
g51
sg1164
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1426
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1427
g1168
sS'trials.thisRepN'
p1428
I4
sg26
V
sS'trials.thisN'
p1429
I28
sg1171
g1339
sg32
g12
sS'trials.thisTrialN'
p1430
I4
sS'blocks.thisRepN'
p1431
I0
sg17
F0.10085892677307129
sg44
g62
sS'blocks.thisN'
p1432
I4
sS'blocks.thisTrialN'
p1433
I4
sa(dp1434
g45
g51
sg1164
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1435
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1436
g1168
sS'trials.thisRepN'
p1437
I4
sg26
V
sS'trials.thisN'
p1438
I29
sg1171
g1339
sg32
g12
sS'trials.thisTrialN'
p1439
I5
sS'blocks.thisRepN'
p1440
I0
sg17
F0.08437800407409668
sg44
g62
sS'blocks.thisN'
p1441
I4
sS'blocks.thisTrialN'
p1442
I4
sa(dp1443
g45
g51
sg1164
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1444
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1445
g1168
sS'trials.thisRepN'
p1446
I5
sg26
V
sS'trials.thisN'
p1447
I30
sg1171
g1220
sg32
g12
sS'trials.thisTrialN'
p1448
I0
sS'blocks.thisRepN'
p1449
I0
sg17
F0.10160017013549805
sg44
g62
sS'blocks.thisN'
p1450
I4
sS'blocks.thisTrialN'
p1451
I4
sa(dp1452
g45
g51
sg1164
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1453
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1454
g1168
sS'trials.thisRepN'
p1455
I5
sg26
V
sS'trials.thisN'
p1456
I31
sg1171
g1339
sg32
g12
sS'trials.thisTrialN'
p1457
I1
sS'blocks.thisRepN'
p1458
I0
sg17
F0.11792588233947754
sg44
g62
sS'blocks.thisN'
p1459
I4
sS'blocks.thisTrialN'
p1460
I4
sa(dp1461
g45
g51
sg1164
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1462
I5
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1463
g1168
sS'trials.thisRepN'
p1464
I5
sg26
V
sS'trials.thisN'
p1465
I32
sg1171
g1172
sg32
g12
sS'trials.thisTrialN'
p1466
I2
sS'blocks.thisRepN'
p1467
I0
sg17
F0.18480110168457031
sg44
g62
sg20
F0.11765003204345703
sS'blocks.thisN'
p1468
I4
sS'blocks.thisTrialN'
p1469
I4
sa(dp1470
g45
g51
sg1164
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1471
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1472
g1168
sS'trials.thisRepN'
p1473
I5
sg26
V
sS'trials.thisN'
p1474
I33
sg1171
g1220
sg32
g12
sS'trials.thisTrialN'
p1475
I3
sS'blocks.thisRepN'
p1476
I0
sg17
F0.1177361011505127
sg44
g62
sS'blocks.thisN'
p1477
I4
sS'blocks.thisTrialN'
p1478
I4
sa(dp1479
g45
g51
sg1164
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1480
I5
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1481
g1168
sS'trials.thisRepN'
p1482
I5
sg26
V
sS'trials.thisN'
p1483
I34
sg1171
g1172
sg32
g12
sS'trials.thisTrialN'
p1484
I4
sS'blocks.thisRepN'
p1485
I0
sg17
F0.18484902381896973
sg44
g62
sg20
F0.10011005401611328
sS'blocks.thisN'
p1486
I4
sS'blocks.thisTrialN'
p1487
I4
sa(dp1488
g45
g51
sg1164
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1489
I5
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1490
g1168
sS'trials.thisRepN'
p1491
I5
sg26
V
sS'trials.thisN'
p1492
I35
sg1171
g1172
sg32
g12
sS'trials.thisTrialN'
p1493
I5
sS'blocks.thisRepN'
p1494
I0
sg17
F0.13520503044128418
sg44
g62
sg20
F0.051455974578857422
sS'blocks.thisN'
p1495
I4
sS'blocks.thisTrialN'
p1496
I4
sa(dp1497
g45
g51
sg1164
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1498
I5
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1499
g1168
sS'trials.thisRepN'
p1500
I6
sg26
V
sS'trials.thisN'
p1501
I36
sg1171
g1172
sg32
g12
sS'trials.thisTrialN'
p1502
I0
sS'blocks.thisRepN'
p1503
I0
sg17
F0.10158801078796387
sg44
g62
sg20
F0.033785104751586914
sS'blocks.thisN'
p1504
I4
sS'blocks.thisTrialN'
p1505
I4
sa(dp1506
g45
g51
sg1164
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1507
I0
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1508
g1168
sS'trials.thisRepN'
p1509
I6
sg26
V
sS'trials.thisN'
p1510
I37
sg1171
g1339
sg32
g12
sS'trials.thisTrialN'
p1511
I1
sS'blocks.thisRepN'
p1512
I0
sg17
F0.6707618236541748
sg44
g62
sg20
F0.10058498382568359
sS'blocks.thisN'
p1513
I4
sS'blocks.thisTrialN'
p1514
I4
sa(dp1515
g45
g51
sg1164
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1516
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1517
g1168
sS'trials.thisRepN'
p1518
I6
sg26
V
sS'trials.thisN'
p1519
I38
sg1171
g1339
sg32
g12
sS'trials.thisTrialN'
p1520
I2
sS'blocks.thisRepN'
p1521
I0
sg17
F0.23473715782165527
sg44
g62
sS'blocks.thisN'
p1522
I4
sS'blocks.thisTrialN'
p1523
I4
sa(dp1524
g45
g51
sg1164
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1525
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1526
g1168
sS'trials.thisRepN'
p1527
I6
sg26
V
sS'trials.thisN'
p1528
I39
sg1171
g1257
sg32
g12
sS'trials.thisTrialN'
p1529
I3
sS'blocks.thisRepN'
p1530
I0
sg17
F0.18606996536254883
sg44
g62
sg20
F0.13622593879699707
sS'blocks.thisN'
p1531
I4
sS'blocks.thisTrialN'
p1532
I4
sa(dp1533
g45
g51
sg1164
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1534
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1535
g1168
sS'trials.thisRepN'
p1536
I6
sg26
V
sS'trials.thisN'
p1537
I40
sg1171
g1339
sg32
g12
sS'trials.thisTrialN'
p1538
I4
sS'blocks.thisRepN'
p1539
I0
sg17
F0.05070185661315918
sg44
g62
sS'blocks.thisN'
p1540
I4
sS'blocks.thisTrialN'
p1541
I4
sa(dp1542
g45
g51
sg1164
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1543
I5
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1544
g1168
sS'trials.thisRepN'
p1545
I6
sg26
V
sS'trials.thisN'
p1546
I41
sg1171
g1172
sg32
g12
sS'trials.thisTrialN'
p1547
I5
sS'blocks.thisRepN'
p1548
I0
sg17
F0.16695022583007812
sg44
g62
sg20
F0.083625078201293945
sS'blocks.thisN'
p1549
I4
sS'blocks.thisTrialN'
p1550
I4
sa(dp1551
g45
g51
sg1164
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1552
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1553
g1168
sS'trials.thisRepN'
p1554
I7
sg26
V
sS'trials.thisN'
p1555
I42
sg1171
g1339
sg32
g12
sS'trials.thisTrialN'
p1556
I0
sS'blocks.thisRepN'
p1557
I0
sg17
F0.03528904914855957
sg44
g62
sS'blocks.thisN'
p1558
I4
sS'blocks.thisTrialN'
p1559
I4
sa(dp1560
g45
g51
sg1164
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1561
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1562
g1168
sS'trials.thisRepN'
p1563
I7
sg26
V
sS'trials.thisN'
p1564
I43
sg1171
g1192
sg32
g12
sS'trials.thisTrialN'
p1565
I1
sS'blocks.thisRepN'
p1566
I0
sg17
F0.18515181541442871
sg44
g62
sg20
F0.11767005920410156
sS'blocks.thisN'
p1567
I4
sS'blocks.thisTrialN'
p1568
I4
sa(dp1569
g45
g51
sg1164
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1570
I4
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1571
g1168
sS'trials.thisRepN'
p1572
I7
sg26
V
sS'trials.thisN'
p1573
I44
sg1171
g1182
sg32
g12
sS'trials.thisTrialN'
p1574
I2
sS'blocks.thisRepN'
p1575
I0
sg17
F0.034312009811401367
sg44
g62
sS'blocks.thisN'
p1576
I4
sS'blocks.thisTrialN'
p1577
I4
sa(dp1578
g45
g51
sg1164
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1579
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1580
g1168
sS'trials.thisRepN'
p1581
I7
sg26
V
sS'trials.thisN'
p1582
I45
sg1171
g1257
sg32
g12
sS'trials.thisTrialN'
p1583
I3
sS'blocks.thisRepN'
p1584
I0
sg17
F0.1514439582824707
sg44
g62
sg20
F0.1000819206237793
sS'blocks.thisN'
p1585
I4
sS'blocks.thisTrialN'
p1586
I4
sa(dp1587
g45
g51
sg1164
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1588
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1589
g1168
sS'trials.thisRepN'
p1590
I7
sg26
V
sS'trials.thisN'
p1591
I46
sg1171
g1257
sg32
g12
sS'trials.thisTrialN'
p1592
I4
sS'blocks.thisRepN'
p1593
I0
sg17
F0.083339929580688477
sg44
g62
sg20
F0.050973892211914062
sS'blocks.thisN'
p1594
I4
sS'blocks.thisTrialN'
p1595
I4
sa(dp1596
g45
g51
sg1164
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1597
I4
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1598
g1168
sS'trials.thisRepN'
p1599
I7
sg26
V
sS'trials.thisN'
p1600
I47
sg1171
g1182
sg32
g12
sS'trials.thisTrialN'
p1601
I5
sS'blocks.thisRepN'
p1602
I0
sg17
F0.10112595558166504
sg44
g62
sS'blocks.thisN'
p1603
I4
sS'blocks.thisTrialN'
p1604
I4
sa(dp1605
g45
g51
sg1164
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1606
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1607
g1168
sS'trials.thisRepN'
p1608
I8
sg26
V
sS'trials.thisN'
p1609
I48
sg1171
g1192
sg32
g12
sS'trials.thisTrialN'
p1610
I0
sS'blocks.thisRepN'
p1611
I0
sg17
F0.13536500930786133
sg44
g62
sg20
F0.10190701484680176
sS'blocks.thisN'
p1612
I4
sS'blocks.thisTrialN'
p1613
I4
sa(dp1614
g45
g51
sg1164
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1615
I1
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1616
g1168
sS'trials.thisRepN'
p1617
I8
sg26
V
sS'trials.thisN'
p1618
I49
sg1171
g1192
sg32
g12
sS'trials.thisTrialN'
p1619
I1
sS'blocks.thisRepN'
p1620
I0
sg17
F0.1681671142578125
sg44
g62
sg20
F0.086147069931030273
sS'blocks.thisN'
p1621
I4
sS'blocks.thisTrialN'
p1622
I4
sa(dp1623
g45
g51
sg1164
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1624
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1625
g1168
sS'trials.thisRepN'
p1626
I8
sg26
V
sS'trials.thisN'
p1627
I50
sg1171
g1339
sg32
g12
sS'trials.thisTrialN'
p1628
I2
sS'blocks.thisRepN'
p1629
I0
sg17
F0.033967018127441406
sg44
g62
sS'blocks.thisN'
p1630
I4
sS'blocks.thisTrialN'
p1631
I4
sa(dp1632
g45
g51
sg1164
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1633
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1634
g1168
sS'trials.thisRepN'
p1635
I8
sg26
V
sS'trials.thisN'
p1636
I51
sg1171
g1257
sg32
g12
sS'trials.thisTrialN'
p1637
I3
sS'blocks.thisRepN'
p1638
I0
sg17
F0.15161490440368652
sg44
g62
sg20
F0.084455013275146484
sS'blocks.thisN'
p1639
I4
sS'blocks.thisTrialN'
p1640
I4
sa(dp1641
g45
g51
sg1164
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1642
I4
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1643
g1168
sS'trials.thisRepN'
p1644
I8
sg26
V
sS'trials.thisN'
p1645
I52
sg1171
g1182
sg32
g12
sS'trials.thisTrialN'
p1646
I4
sS'blocks.thisRepN'
p1647
I0
sg17
F0.067914009094238281
sg44
g62
sS'blocks.thisN'
p1648
I4
sS'blocks.thisTrialN'
p1649
I4
sa(dp1650
g45
g51
sg1164
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1651
I3
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1652
g1168
sS'trials.thisRepN'
p1653
I8
sg26
V
sS'trials.thisN'
p1654
I53
sg1171
g1220
sg32
g12
sS'trials.thisTrialN'
p1655
I5
sS'blocks.thisRepN'
p1656
I0
sg17
F0.084220170974731445
sg44
g62
sS'blocks.thisN'
p1657
I4
sS'blocks.thisTrialN'
p1658
I4
sa(dp1659
g45
g51
sg1164
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1660
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1661
g1168
sS'trials.thisRepN'
p1662
I9
sg26
V
sS'trials.thisN'
p1663
I54
sg1171
g1257
sg32
g12
sS'trials.thisTrialN'
p1664
I0
sS'blocks.thisRepN'
p1665
I0
sg17
F0.11700105667114258
sg44
g62
sg20
F0.08410191535949707
sS'blocks.thisN'
p1666
I4
sS'blocks.thisTrialN'
p1667
I4
sa(dp1668
g45
g51
sg1164
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1669
I5
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1670
g1168
sS'trials.thisRepN'
p1671
I9
sg26
V
sS'trials.thisN'
p1672
I55
sg1171
g1172
sg32
g12
sS'trials.thisTrialN'
p1673
I1
sS'blocks.thisRepN'
p1674
I0
sg17
F0.11736607551574707
sg44
g62
sg20
F0.067761898040771484
sS'blocks.thisN'
p1675
I4
sS'blocks.thisTrialN'
p1676
I4
sa(dp1677
g45
g51
sg1164
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1678
I2
sg24
V
sg19
I1
sS'blocks.thisIndex'
p1679
g1168
sS'trials.thisRepN'
p1680
I9
sg26
V
sS'trials.thisN'
p1681
I56
sg1171
g1257
sg32
g12
sS'trials.thisTrialN'
p1682
I2
sS'blocks.thisRepN'
p1683
I0
sg17
F0.085587978363037109
sg44
g62
sg20
F0.035007953643798828
sS'blocks.thisN'
p1684
I4
sS'blocks.thisTrialN'
p1685
I4
sa(dp1686
g45
g51
sg1164
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1687
I4
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1688
g1168
sS'trials.thisRepN'
p1689
I9
sg26
V
sS'trials.thisN'
p1690
I57
sg1171
g1182
sg32
g12
sS'trials.thisTrialN'
p1691
I3
sS'blocks.thisRepN'
p1692
I0
sg17
F0.068768978118896484
sg44
g62
sS'blocks.thisN'
p1693
I4
sS'blocks.thisTrialN'
p1694
I4
sa(dp1695
g45
g51
sg1164
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1696
I0
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1697
g1168
sS'trials.thisRepN'
p1698
I9
sg26
V
sS'trials.thisN'
p1699
I58
sg1171
g1339
sg32
g12
sS'trials.thisTrialN'
p1700
I4
sS'blocks.thisRepN'
p1701
I0
sg17
F0.10233211517333984
sg44
g62
sS'blocks.thisN'
p1702
I4
sS'blocks.thisTrialN'
p1703
I4
sa(dp1704
g45
g51
sg1164
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1165
sS'trials.thisIndex'
p1705
I4
sg24
V
sg19
I0
sS'blocks.thisIndex'
p1706
g1168
sS'trials.thisRepN'
p1707
I9
sg26
V
sS'trials.thisN'
p1708
I59
sg1171
g1182
sg32
g12
sS'trials.thisTrialN'
p1709
I5
sS'blocks.thisRepN'
p1710
I0
sg17
F0.10220909118652344
sg44
g62
sS'blocks.thisN'
p1711
I4
sS'blocks.thisTrialN'
p1712
I4
sasS'loops'
p1713
(lp1714
g1
(cpsychopy.data
TrialHandler
p1715
g3
NtRp1716
(dp1717
S'origin'
p1718
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="RRT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    stimulus = trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    stimulus = trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    stimulus = trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    stimulus = trial_type_4_trials.pop()&#10;elif trial_type == 5:&#10;    stimulus = trial_type_5_trials.pop()&#10;elif trial_type == 6:&#10;    stimulus = trial_type_6_trials.pop()&#10;&#10;# stimulus colors &#10;if trial_type == 1 or trial_type == 2:&#10;     stimulus_color = &quot;orange&quot; &#10;elif trial_type &gt;2:&#10;     stimulus_color = &quot;cyan&quot;&#10;&#10;# correct and incorrect answers for each trialtype in each block&#10;if trial_type == 1: #true&#10;    required_allowed = &quot;i&quot;&#10;    required_correct = &quot;i&quot;&#10;    feedback_allowed = &quot;e&quot;&#10;    feedback_correct = &quot;e&quot;&#10;elif trial_type == 2: #false&#10;    required_allowed = &quot;e&quot;&#10;    required_correct = &quot;e&quot;&#10;    feedback_allowed = &quot;i&quot;&#10;    feedback_correct = &quot;i&quot;&#10;if blocks.thisN &lt;= 2:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;elif blocks.thisN &gt;= 3:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedback_response.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="required_response">\u000a        <Param name="correctAns" val="$required_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response">\u000a        <Param name="correctAns" val="$feedback_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="stimulus_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulus_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="true_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="true_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$true_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="false_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="false_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$false_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;import math  # for math.ceil() rounding up&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine rows of examplars (i.e., max number of rows)&#10;&quot;&quot;&quot;&#10;This method creates a fully counterbalanced presentation of exemplars when there are 5&#10;of them, but it will not present each one an equal number of times it the n diverges from 5.&#10;&quot;&quot;&quot;&#10;n_exemplars = len(exemplars)&#10;list_multiplier = int(math.ceil(10/n_exemplars))  # math.ceil() rounds up. 10 is the derived from way block lengths are calculated&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Determine block repeats and which trial rows are used in each block&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;&#10;# Generate list of stimuli for the block&#10;trial_type_1_trials = generate_trials('trial_type_1_exemplars', list_multiplier)  # function and variable determined at begin exp.&#10;trial_type_2_trials = generate_trials('trial_type_2_exemplars', list_multiplier)&#10;trial_type_3_trials = generate_trials('trial_type_3_exemplars', list_multiplier)&#10;trial_type_4_trials = generate_trials('trial_type_4_exemplars', list_multiplier)&#10;trial_type_5_trials = generate_trials('trial_type_5_exemplars', list_multiplier)&#10;trial_type_6_trials = generate_trials('trial_type_6_exemplars', list_multiplier)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructions_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructions_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructions_key">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructions_key" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="2" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trial_type': 1, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 2, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 3, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 4, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 5, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 6, u'true_label': u'TRUE', u'false_label': u'FALSE'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1719
sS'thisTrial'
p1720
(lp1721
sS'_exp'
p1722
I216937648
sg11
S'blocks'
p1723
sg6
g7
sS'thisRepN'
p1724
I1
sg21
I01
sg22
g23
sS'data'
p1725
g1
(cpsychopy.data
DataHandler
p1726
c__builtin__
dict
p1727
(dp1728
S'ran'
p1729
cnumpy.ma.core
_mareconstruct
p1730
(cnumpy.ma.core
MaskedArray
p1731
cnumpy
ndarray
p1732
(I0
tp1733
S'b'
tRp1734
(I1
(I5
I1
tg29
(S'f4'
I0
I1
tRp1735
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00'
NtbsS'order'
p1736
g1730
(g1731
g1732
g1733
S'b'
tRp1737
(I1
(I5
I1
tg1735
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@'
S'\x00\x00\x00\x00\x00'
NtbstRp1738
(dp1739
S'isNumeric'
p1740
(dp1741
g1729
I01
sg1736
I01
ssS'trials'
p1742
g1716
sS'dataTypes'
p1743
(lp1744
g1729
ag1736
asS'dataShape'
p1745
(lp1746
I5
aI1
asbsS'method'
p1747
S'sequential'
p1748
sS'sequenceIndices'
p1749
cnumpy.core.multiarray
_reconstruct
p1750
(g1732
(I0
tS'b'
tRp1751
(I1
(I5
I1
tg55
I00
S'\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00'
tbsS'finished'
p1752
I01
sS'nReps'
p1753
I1
sS'nRemaining'
p1754
I-1
sS'trialList'
p1755
(lp1756
g1
(cpsychopy.data
TrialType
p1757
g1727
(dp1758
g44
g62
sg45
g51
sg43
g52
stRp1759
ag1
(g1757
g1727
(dp1760
g44
g62
sg45
g51
sg43
g239
stRp1761
ag1
(g1757
g1727
(dp1762
g44
g62
sg45
g51
sg43
g427
stRp1763
ag1
(g1757
g1727
(dp1764
g44
g62
sg45
g51
sg43
g977
stRp1765
ag1
(g1757
g1727
(dp1766
g44
g62
sg45
g51
sg43
g1165
stRp1767
asS'seed'
p1768
NsS'thisIndex'
p1769
g1168
sS'thisN'
p1770
I5
sS'thisTrialN'
p1771
I0
sS'nTotal'
p1772
I5
sS'_warnUseOfNext'
p1773
I01
sbag1
(g1715
g3
NtRp1774
(dp1775
g1718
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="RRT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    stimulus = trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    stimulus = trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    stimulus = trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    stimulus = trial_type_4_trials.pop()&#10;elif trial_type == 5:&#10;    stimulus = trial_type_5_trials.pop()&#10;elif trial_type == 6:&#10;    stimulus = trial_type_6_trials.pop()&#10;&#10;# stimulus colors &#10;if trial_type == 1 or trial_type == 2:&#10;     stimulus_color = &quot;orange&quot; &#10;elif trial_type &gt;2:&#10;     stimulus_color = &quot;cyan&quot;&#10;&#10;# correct and incorrect answers for each trialtype in each block&#10;if trial_type == 1: #true&#10;    required_allowed = &quot;i&quot;&#10;    required_correct = &quot;i&quot;&#10;    feedback_allowed = &quot;e&quot;&#10;    feedback_correct = &quot;e&quot;&#10;elif trial_type == 2: #false&#10;    required_allowed = &quot;e&quot;&#10;    required_correct = &quot;e&quot;&#10;    feedback_allowed = &quot;i&quot;&#10;    feedback_correct = &quot;i&quot;&#10;if blocks.thisN &lt;= 2:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;elif blocks.thisN &gt;= 3:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedback_response.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="required_response">\u000a        <Param name="correctAns" val="$required_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response">\u000a        <Param name="correctAns" val="$feedback_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="stimulus_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulus_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="true_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="true_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$true_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="false_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="false_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$false_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;import math  # for math.ceil() rounding up&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine rows of examplars (i.e., max number of rows)&#10;&quot;&quot;&quot;&#10;This method creates a fully counterbalanced presentation of exemplars when there are 5&#10;of them, but it will not present each one an equal number of times it the n diverges from 5.&#10;&quot;&quot;&quot;&#10;n_exemplars = len(exemplars)&#10;list_multiplier = int(math.ceil(10/n_exemplars))  # math.ceil() rounds up. 10 is the derived from way block lengths are calculated&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Determine block repeats and which trial rows are used in each block&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;&#10;# Generate list of stimuli for the block&#10;trial_type_1_trials = generate_trials('trial_type_1_exemplars', list_multiplier)  # function and variable determined at begin exp.&#10;trial_type_2_trials = generate_trials('trial_type_2_exemplars', list_multiplier)&#10;trial_type_3_trials = generate_trials('trial_type_3_exemplars', list_multiplier)&#10;trial_type_4_trials = generate_trials('trial_type_4_exemplars', list_multiplier)&#10;trial_type_5_trials = generate_trials('trial_type_5_exemplars', list_multiplier)&#10;trial_type_6_trials = generate_trials('trial_type_6_exemplars', list_multiplier)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructions_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructions_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructions_key">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructions_key" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="2" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trial_type': 1, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 2, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 3, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 4, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 5, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 6, u'true_label': u'TRUE', u'false_label': u'FALSE'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1776
sg1720
(lp1777
sg1722
I216937648
sg11
g1742
sg6
g7
sg1724
I10
sg21
I01
sg22
g23
sg1725
g1
(g1726
g1727
(dp1778
g1729
g1730
(g1731
g1732
g1733
S'b'
tRp1779
(I1
(I2
I10
tg1735
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g1730
(g1731
g1732
g1733
S'b'
tRp1780
(I1
(I2
I10
tg1735
I00
S"\x80\xfc,>\x80\xff=>\x88\xc5\x80>\xd0ap>Pn=>\xd0\x84O>p\xe0N>\x10X+> 6\n>\xc0\x80`>0j#?\x10\x12\x89>p\x0c\x81>\xc0\xe2\x91>\xe0'`>\x80aN>\xe0\xe2\x80>\x08/\x89>\x00\xcd\x80>\x10OO>"
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1750
(g1732
(I0
tS'b'
tRp1781
(I1
(I2
I10
tg29
(S'O4'
I0
I1
tRp1782
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp1783
S'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
atbsg16
g1730
(g1731
g1732
g1733
S'b'
tRp1784
(I1
(I2
I10
tg1735
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1730
(g1731
g1732
g1733
S'b'
tRp1785
(I1
(I2
I10
tg1735
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1750
(g1732
(I0
tS'b'
tRp1786
(I1
(I2
I10
tg1782
I00
(lp1787
NaNaNaNaNaNaNaNaNaNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
atbsg20
g1730
(g1731
g1732
g1733
S'b'
tRp1788
(I1
(I2
I10
tg1735
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x94E\r?\xc0\x17_>\x00\xea_>`\x05O>P_=>\x90\xe6*>\x90\xc3`>\xf0\xa7_>\xe0\x8b=>\xc0\xb2\xf2='
S'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg1736
g1730
(g1731
g1732
g1733
S'b'
tRp1789
(I1
(I2
I10
tg1735
I00
S'\x00\x00\x00@\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x00 A\x00\x000A\x00\x00@A\x00\x00`A\x00\x00\x90A\x00\x00\x98A\x00\x00\x00\x00\x00\x00\x80?\x00\x00@@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00PA\x00\x00pA\x00\x00\x80A\x00\x00\x88A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp1790
(dp1791
g1740
(dp1792
g1729
I01
sg17
I01
sg15
I00
sg16
I01
sg19
I01
sg18
I00
sg20
I01
sg1736
I01
ssg1742
g1774
sg1743
(lp1793
g1729
ag1736
ag15
ag16
ag17
ag18
ag19
ag20
asg1745
(lp1794
I2
aI10
asbsg1747
S'fullRandom'
p1795
sg1749
g1750
(g1732
(I0
tS'b'
tRp1796
(I1
(I2
I10
tg1782
I00
(lp1797
I1
aI0
aI0
aI0
aI1
aI0
aI0
aI0
aI1
aI0
aI1
aI1
aI0
aI1
aI1
aI0
aI1
aI1
aI1
aI0
atbsg1752
I01
sg1753
I10
sg1754
I-1
sg1755
(lp1798
g1
(g1757
g1727
(dp1799
g46
I1
sg47
g79
stRp1800
ag1
(g1757
g1727
(dp1801
g46
I2
sg47
g59
stRp1802
asg1768
Nsg1769
I0
sg1770
I20
sg1771
I0
sg1772
I20
sg1773
I01
sbag1
(g1715
g3
NtRp1803
(dp1804
g1718
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="RRT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    stimulus = trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    stimulus = trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    stimulus = trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    stimulus = trial_type_4_trials.pop()&#10;elif trial_type == 5:&#10;    stimulus = trial_type_5_trials.pop()&#10;elif trial_type == 6:&#10;    stimulus = trial_type_6_trials.pop()&#10;&#10;# stimulus colors &#10;if trial_type == 1 or trial_type == 2:&#10;     stimulus_color = &quot;orange&quot; &#10;elif trial_type &gt;2:&#10;     stimulus_color = &quot;cyan&quot;&#10;&#10;# correct and incorrect answers for each trialtype in each block&#10;if trial_type == 1: #true&#10;    required_allowed = &quot;i&quot;&#10;    required_correct = &quot;i&quot;&#10;    feedback_allowed = &quot;e&quot;&#10;    feedback_correct = &quot;e&quot;&#10;elif trial_type == 2: #false&#10;    required_allowed = &quot;e&quot;&#10;    required_correct = &quot;e&quot;&#10;    feedback_allowed = &quot;i&quot;&#10;    feedback_correct = &quot;i&quot;&#10;if blocks.thisN &lt;= 2:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;elif blocks.thisN &gt;= 3:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedback_response.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="required_response">\u000a        <Param name="correctAns" val="$required_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response">\u000a        <Param name="correctAns" val="$feedback_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="stimulus_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulus_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="true_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="true_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$true_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="false_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="false_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$false_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;import math  # for math.ceil() rounding up&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine rows of examplars (i.e., max number of rows)&#10;&quot;&quot;&quot;&#10;This method creates a fully counterbalanced presentation of exemplars when there are 5&#10;of them, but it will not present each one an equal number of times it the n diverges from 5.&#10;&quot;&quot;&quot;&#10;n_exemplars = len(exemplars)&#10;list_multiplier = int(math.ceil(10/n_exemplars))  # math.ceil() rounds up. 10 is the derived from way block lengths are calculated&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Determine block repeats and which trial rows are used in each block&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;&#10;# Generate list of stimuli for the block&#10;trial_type_1_trials = generate_trials('trial_type_1_exemplars', list_multiplier)  # function and variable determined at begin exp.&#10;trial_type_2_trials = generate_trials('trial_type_2_exemplars', list_multiplier)&#10;trial_type_3_trials = generate_trials('trial_type_3_exemplars', list_multiplier)&#10;trial_type_4_trials = generate_trials('trial_type_4_exemplars', list_multiplier)&#10;trial_type_5_trials = generate_trials('trial_type_5_exemplars', list_multiplier)&#10;trial_type_6_trials = generate_trials('trial_type_6_exemplars', list_multiplier)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructions_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructions_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructions_key">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructions_key" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="2" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trial_type': 1, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 2, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 3, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 4, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 5, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 6, u'true_label': u'TRUE', u'false_label': u'FALSE'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1805
sg1720
(lp1806
sg1722
I216937648
sg11
g1742
sg6
g7
sg1724
I5
sg21
I01
sg22
g23
sg1725
g1
(g1726
g1727
(dp1807
g1729
g1730
(g1731
g1732
g1733
S'b'
tRp1808
(I1
(I4
I5
tg1735
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g1730
(g1731
g1732
g1733
S'b'
tRp1809
(I1
(I4
I5
tg1735
I00
S'@\xa0\xf3=\xd0SM>\xa0\x07\xd3=\xc0z,>\x90k\x1a>\x08\x88\x92>\x10\x85q>\xf0\xbe*>\x00r\x92>x\xf0\x9a>\xd0I=>PMp>\xb0\x91=>\xe8\xd2\x88>\x98\xfc\x88>`\xb5\x19>\x00\x9c\x8c=`=\xae=\xa0\x13\xac=0\xfeo>'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1750
(g1732
(I0
tS'b'
tRp1810
(I1
(I4
I5
tg1782
I00
(lp1811
S'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
atbsg16
g1730
(g1731
g1732
g1733
S'b'
tRp1812
(I1
(I4
I5
tg1735
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1730
(g1731
g1732
g1733
S'b'
tRp1813
(I1
(I4
I5
tg1735
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1750
(g1732
(I0
tS'b'
tRp1814
(I1
(I4
I5
tg1782
I00
(lp1815
NaNaNaNaNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aNaNaNaNaNatbsg20
g1730
(g1731
g1732
g1733
S'b'
tRp1816
(I1
(I4
I5
tg1735
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x84\x81>\x10\x12\x1b>@\xd6\xd0=p\xe3=>@=_>\xa0\xe2\xf1=0R->\x00\x91\xcf=\xc0\x8d=>\xb0\x99N>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01'
Ntbsg1736
g1730
(g1731
g1732
g1733
S'b'
tRp1817
(I1
(I4
I5
tg1735
I00
S'\x00\x00\x80?\x00\x00\xc0@\x00\x00PA\x00\x00`A\x00\x00\x90A\x00\x00\x00\x00\x00\x00\x00@\x00\x00@@\x00\x00 A\x00\x00pA\x00\x00\x80@\x00\x00\xe0@\x00\x00\x00A\x00\x00@A\x00\x00\x98A\x00\x00\xa0@\x00\x00\x10A\x00\x000A\x00\x00\x80A\x00\x00\x88A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp1818
(dp1819
g1740
(dp1820
g1729
I01
sg17
I01
sg15
I00
sg16
I01
sg19
I01
sg18
I00
sg20
I01
sg1736
I01
ssg1742
g1803
sg1743
(lp1821
g1729
ag1736
ag15
ag16
ag17
ag18
ag19
ag20
asg1745
(lp1822
I4
aI5
asbsg1747
g1795
sg1749
g1750
(g1732
(I0
tS'b'
tRp1823
(I1
(I4
I5
tg1782
I00
(lp1824
I1
aI2
aI2
aI2
aI3
aI0
aI3
aI3
aI0
aI3
aI1
aI0
aI1
aI0
aI0
aI1
aI2
aI3
aI1
aI2
atbsg1752
I01
sg1753
I5
sg1754
I-1
sg1755
(lp1825
g1
(g1757
g1727
(dp1826
g238
I3
sg245
g256
stRp1827
ag1
(g1757
g1727
(dp1828
g238
I4
sg245
g246
stRp1829
ag1
(g1757
g1727
(dp1830
g238
I5
sg245
g284
stRp1831
ag1
(g1757
g1727
(dp1832
g238
I6
sg245
g294
stRp1833
asg1768
Nsg1769
I2
sg1770
I20
sg1771
I0
sg1772
I20
sg1773
I01
sbag1
(g1715
g3
NtRp1834
(dp1835
g1718
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="RRT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    stimulus = trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    stimulus = trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    stimulus = trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    stimulus = trial_type_4_trials.pop()&#10;elif trial_type == 5:&#10;    stimulus = trial_type_5_trials.pop()&#10;elif trial_type == 6:&#10;    stimulus = trial_type_6_trials.pop()&#10;&#10;# stimulus colors &#10;if trial_type == 1 or trial_type == 2:&#10;     stimulus_color = &quot;orange&quot; &#10;elif trial_type &gt;2:&#10;     stimulus_color = &quot;cyan&quot;&#10;&#10;# correct and incorrect answers for each trialtype in each block&#10;if trial_type == 1: #true&#10;    required_allowed = &quot;i&quot;&#10;    required_correct = &quot;i&quot;&#10;    feedback_allowed = &quot;e&quot;&#10;    feedback_correct = &quot;e&quot;&#10;elif trial_type == 2: #false&#10;    required_allowed = &quot;e&quot;&#10;    required_correct = &quot;e&quot;&#10;    feedback_allowed = &quot;i&quot;&#10;    feedback_correct = &quot;i&quot;&#10;if blocks.thisN &lt;= 2:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;elif blocks.thisN &gt;= 3:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedback_response.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="required_response">\u000a        <Param name="correctAns" val="$required_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response">\u000a        <Param name="correctAns" val="$feedback_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="stimulus_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulus_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="true_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="true_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$true_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="false_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="false_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$false_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;import math  # for math.ceil() rounding up&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine rows of examplars (i.e., max number of rows)&#10;&quot;&quot;&quot;&#10;This method creates a fully counterbalanced presentation of exemplars when there are 5&#10;of them, but it will not present each one an equal number of times it the n diverges from 5.&#10;&quot;&quot;&quot;&#10;n_exemplars = len(exemplars)&#10;list_multiplier = int(math.ceil(10/n_exemplars))  # math.ceil() rounds up. 10 is the derived from way block lengths are calculated&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Determine block repeats and which trial rows are used in each block&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;&#10;# Generate list of stimuli for the block&#10;trial_type_1_trials = generate_trials('trial_type_1_exemplars', list_multiplier)  # function and variable determined at begin exp.&#10;trial_type_2_trials = generate_trials('trial_type_2_exemplars', list_multiplier)&#10;trial_type_3_trials = generate_trials('trial_type_3_exemplars', list_multiplier)&#10;trial_type_4_trials = generate_trials('trial_type_4_exemplars', list_multiplier)&#10;trial_type_5_trials = generate_trials('trial_type_5_exemplars', list_multiplier)&#10;trial_type_6_trials = generate_trials('trial_type_6_exemplars', list_multiplier)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructions_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructions_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructions_key">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructions_key" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="2" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trial_type': 1, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 2, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 3, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 4, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 5, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 6, u'true_label': u'TRUE', u'false_label': u'FALSE'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1836
sg1720
(lp1837
sg1722
I216937648
sg11
g1742
sg6
g7
sg1724
I10
sg21
I01
sg22
g23
sg1725
g1
(g1726
g1727
(dp1838
g1729
g1730
(g1731
g1732
g1733
S'b'
tRp1839
(I1
(I6
I10
tg1735
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g1730
(g1731
g1732
g1733
S'b'
tRp1840
(I1
(I6
I10
tg1735
I00
S'\xf0\xba,>p\x14`>\xa0\xf3\xf3=\x10H\x1b> \x14\x1b>\x00`\xf2=\xf0\xec+>\xd0\xe7\x1a> \xe5\xf2=PZ\n>@+p>\xa8\x92\x89>P\xbc<>\xa0\x9f\x81>h\xe3\x88>`ip>P\xb0\x80>p\x14`>\xc8Q\x89>\xa0\xcap>\x90u_> k\xf1=@\xb8\x1b>\xc0\xbc\xce=P\x88>>\x00\x8a\x1a>0\xe1\t>\xa0.\x0b>\x80\rV=\x10\xc9+>\xf0\xb0\x80>\x10X\x1b>p\x80+>\x00\xf7<>\x90\x8b\x89>\xb0\xc9\x1a>p\xb9_>P\xf7<>\x10\x8aM>\xd0O\x81>\x90E\xa3> \t=>\xf06a>\x10QN>\xd0\x82p>\xe8\xe2\x80>\x98\xd2\x91>\xd8\xd9\x89>`Aa>\x18A\x9b>\xc0\xcb\n>\xa0\x1ba>@\xde+>\x80/\xf3=\xc0y\xce=\xc0u\xcf=\xa0\x8f\x1b>0<->\xc0\xdbL>\xd0\x98\t>'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1750
(g1732
(I0
tS'b'
tRp1841
(I1
(I6
I10
tg1782
I00
(lp1842
S'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
atbsg16
g1730
(g1731
g1732
g1733
S'b'
tRp1843
(I1
(I6
I10
tg1735
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1730
(g1731
g1732
g1733
S'b'
tRp1844
(I1
(I6
I10
tg1735
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1750
(g1732
(I0
tS'b'
tRp1845
(I1
(I6
I10
tg1782
I00
(lp1846
NaNaNaNaNaNaNaNaNaNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aNaNaNaNaS'e'
aNaNaNaNaNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aNaNaNaNaNaNaNaNaNaNatbsg20
g1730
(g1731
g1732
g1733
S'b'
tRp1847
(I1
(I6
I10
tg1735
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000\xdc^>\xb0(N>\x80\xe8\xf0=\x10l,>\x90K,>\xf0b\x1a>\xb0\xdfN>\xc0\xac\x19>\x00\x0fN>0l=>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@A>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \xe3\x1a>\xe0\xb5\x8b=@S\xcf=\xc0\x15\xd0=\x00kN>`[\xd1=\xf0\x93,>\xb0n\x0c>\x009\xcc=\xb0\x12>>\xc0]_>\xa0y\xf2=0\xce->0\x1d\n>P\xd7\x1a>\xf0|\x1b>\x80\xa1N>\x90\xad^>\xa0F,>\xf09>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
Ntbsg1736
g1730
(g1731
g1732
g1733
S'b'
tRp1848
(I1
(I6
I10
tg1735
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\xa0A\x00\x00\xf8A\x00\x00\x0cB\x00\x00\x14B\x00\x008B\x00\x00@B\x00\x00dB\x00\x00hB\x00\x000A\x00\x00`A\x00\x00pA\x00\x00\xa8A\x00\x00\xc8A\x00\x00\xf0A\x00\x00\x04B\x00\x000B\x00\x00DB\x00\x00LB\x00\x00 A\x00\x00PA\x00\x00\xd8A\x00\x00\x00B\x00\x00$B\x00\x00(B\x00\x00,B\x00\x00HB\x00\x00XB\x00\x00\\B\x00\x00\xc0@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x80A\x00\x00\x90A\x00\x00\xb0A\x00\x00\xe0A\x00\x00PB\x00\x00TB\x00\x00lB\x00\x00\x00@\x00\x00@A\x00\x00\x98A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xd0A\x00\x00\x10B\x00\x00 B\x00\x00<B\x00\x00`B\x00\x00@@\x00\x00\x80@\x00\x00\xa0@\x00\x00\x10A\x00\x00\x88A\x00\x00\xe8A\x00\x00\x08B\x00\x00\x18B\x00\x00\x1cB\x00\x004B'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp1849
(dp1850
g1740
(dp1851
g1729
I01
sg17
I01
sg15
I00
sg16
I01
sg19
I01
sg18
I00
sg20
I01
sg1736
I01
ssg1742
g1834
sg1743
(lp1852
g1729
ag1736
ag15
ag16
ag17
ag18
ag19
ag20
asg1745
(lp1853
I6
aI10
asbsg1747
g1795
sg1749
g1750
(g1732
(I0
tS'b'
tRp1854
(I1
(I6
I10
tg1782
I00
(lp1855
I0
aI3
aI4
aI3
aI4
aI1
aI4
aI2
aI0
aI2
aI0
aI3
aI2
aI4
aI1
aI0
aI0
aI2
aI1
aI2
aI4
aI3
aI1
aI0
aI4
aI2
aI5
aI1
aI2
aI4
aI5
aI5
aI1
aI1
aI2
aI1
aI5
aI5
aI1
aI0
aI5
aI2
aI3
aI3
aI3
aI5
aI4
aI0
aI3
aI0
aI5
aI1
aI5
aI4
aI5
aI0
aI2
aI4
aI3
aI3
atbsg1752
I01
sg1753
I10
sg1754
I-1
sg1755
(lp1856
g1
(g1757
g1727
(dp1857
g426
I1
sg433
g434
stRp1858
ag1
(g1757
g1727
(dp1859
g426
I2
sg433
g538
stRp1860
ag1
(g1757
g1727
(dp1861
g426
I3
sg433
g528
stRp1862
ag1
(g1757
g1727
(dp1863
g426
I4
sg433
g491
stRp1864
ag1
(g1757
g1727
(dp1865
g426
I5
sg433
g453
stRp1866
ag1
(g1757
g1727
(dp1867
g426
I6
sg433
g463
stRp1868
asg1768
Nsg1769
I3
sg1770
I60
sg1771
I0
sg1772
I60
sg1773
I01
sbag1
(g1715
g3
NtRp1869
(dp1870
g1718
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="RRT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    stimulus = trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    stimulus = trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    stimulus = trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    stimulus = trial_type_4_trials.pop()&#10;elif trial_type == 5:&#10;    stimulus = trial_type_5_trials.pop()&#10;elif trial_type == 6:&#10;    stimulus = trial_type_6_trials.pop()&#10;&#10;# stimulus colors &#10;if trial_type == 1 or trial_type == 2:&#10;     stimulus_color = &quot;orange&quot; &#10;elif trial_type &gt;2:&#10;     stimulus_color = &quot;cyan&quot;&#10;&#10;# correct and incorrect answers for each trialtype in each block&#10;if trial_type == 1: #true&#10;    required_allowed = &quot;i&quot;&#10;    required_correct = &quot;i&quot;&#10;    feedback_allowed = &quot;e&quot;&#10;    feedback_correct = &quot;e&quot;&#10;elif trial_type == 2: #false&#10;    required_allowed = &quot;e&quot;&#10;    required_correct = &quot;e&quot;&#10;    feedback_allowed = &quot;i&quot;&#10;    feedback_correct = &quot;i&quot;&#10;if blocks.thisN &lt;= 2:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;elif blocks.thisN &gt;= 3:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedback_response.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="required_response">\u000a        <Param name="correctAns" val="$required_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response">\u000a        <Param name="correctAns" val="$feedback_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="stimulus_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulus_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="true_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="true_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$true_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="false_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="false_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$false_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;import math  # for math.ceil() rounding up&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine rows of examplars (i.e., max number of rows)&#10;&quot;&quot;&quot;&#10;This method creates a fully counterbalanced presentation of exemplars when there are 5&#10;of them, but it will not present each one an equal number of times it the n diverges from 5.&#10;&quot;&quot;&quot;&#10;n_exemplars = len(exemplars)&#10;list_multiplier = int(math.ceil(10/n_exemplars))  # math.ceil() rounds up. 10 is the derived from way block lengths are calculated&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Determine block repeats and which trial rows are used in each block&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;&#10;# Generate list of stimuli for the block&#10;trial_type_1_trials = generate_trials('trial_type_1_exemplars', list_multiplier)  # function and variable determined at begin exp.&#10;trial_type_2_trials = generate_trials('trial_type_2_exemplars', list_multiplier)&#10;trial_type_3_trials = generate_trials('trial_type_3_exemplars', list_multiplier)&#10;trial_type_4_trials = generate_trials('trial_type_4_exemplars', list_multiplier)&#10;trial_type_5_trials = generate_trials('trial_type_5_exemplars', list_multiplier)&#10;trial_type_6_trials = generate_trials('trial_type_6_exemplars', list_multiplier)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructions_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructions_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructions_key">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructions_key" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="2" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trial_type': 1, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 2, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 3, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 4, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 5, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 6, u'true_label': u'TRUE', u'false_label': u'FALSE'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1871
sg1720
(lp1872
sg1722
I216937648
sg11
g1742
sg6
g7
sg1724
I5
sg21
I01
sg22
g23
sg1725
g1
(g1726
g1727
(dp1873
g1729
g1730
(g1731
g1732
g1733
S'b'
tRp1874
(I1
(I4
I5
tg1735
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g1730
(g1731
g1732
g1733
S'b'
tRp1875
(I1
(I4
I5
tg1735
I00
S'\xc0\x84_>\x90\x92p>p\xb6p>`7,>\xd0\x8a_>P<N>\x80\xac+> \xdd\xf3=`\x18\xac=\x00\x07\x1b>\x10\xae\t>0_N>`L\n>P\xd5\x1b>\xa0\xd0\xab=\x00\xc2\xf2=\x80\xc1N>P\xed<> L\n>\x90\x01`>'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1750
(g1732
(I0
tS'b'
tRp1876
(I1
(I4
I5
tg1782
I00
(lp1877
S'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
atbsg16
g1730
(g1731
g1732
g1733
S'b'
tRp1878
(I1
(I4
I5
tg1735
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1730
(g1731
g1732
g1733
S'b'
tRp1879
(I1
(I4
I5
tg1735
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1750
(g1732
(I0
tS'b'
tRp1880
(I1
(I4
I5
tg1782
I00
(lp1881
S'i'
aS'i'
aS'i'
aS'i'
aS'i'
aNaNaNaNaNaNaNaNaNaNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
atbsg20
g1730
(g1731
g1732
g1733
S'b'
tRp1882
(I1
(I4
I5
tg1735
I00
S'\xe0\xc0+>@\x9e=> \x17,>\x80;\xf0=\x90V>>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x15\xce=0L\x1b>\x00\xba\xf2=\x80\xcfO=@e<>'
S'\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00'
Ntbsg1736
g1730
(g1731
g1732
g1733
S'b'
tRp1883
(I1
(I4
I5
tg1735
I00
S'\x00\x00\x00@\x00\x00\xc0@\x00\x00`A\x00\x00pA\x00\x00\x98A\x00\x00\x00\x00\x00\x00\x80?\x00\x00\xe0@\x00\x00PA\x00\x00\x80A\x00\x00\xa0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x00\x90A\x00\x00@@\x00\x00\x80@\x00\x000A\x00\x00@A\x00\x00\x88A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp1884
(dp1885
g1740
(dp1886
g1729
I01
sg17
I01
sg15
I00
sg16
I01
sg19
I01
sg18
I00
sg20
I01
sg1736
I01
ssg1742
g1869
sg1743
(lp1887
g1729
ag1736
ag15
ag16
ag17
ag18
ag19
ag20
asg1745
(lp1888
I4
aI5
asbsg1747
g1795
sg1749
g1750
(g1732
(I0
tS'b'
tRp1889
(I1
(I4
I5
tg1782
I00
(lp1890
I1
aI3
aI2
aI3
aI1
aI1
aI2
aI2
aI1
aI3
aI0
aI0
aI2
aI0
aI2
aI3
aI1
aI3
aI0
aI0
atbsg1752
I01
sg1753
I5
sg1754
I-1
sg1755
(lp1891
g1
(g1757
g1727
(dp1892
g976
I3
sg983
g1003
stRp1893
ag1
(g1757
g1727
(dp1894
g976
I4
sg983
g984
stRp1895
ag1
(g1757
g1727
(dp1896
g976
I5
sg983
g1032
stRp1897
ag1
(g1757
g1727
(dp1898
g976
I6
sg983
g1013
stRp1899
asg1768
Nsg1769
I0
sg1770
I20
sg1771
I0
sg1772
I20
sg1773
I01
sbag1
(g1715
g3
NtRp1900
(dp1901
g1718
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="RRT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    stimulus = trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    stimulus = trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    stimulus = trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    stimulus = trial_type_4_trials.pop()&#10;elif trial_type == 5:&#10;    stimulus = trial_type_5_trials.pop()&#10;elif trial_type == 6:&#10;    stimulus = trial_type_6_trials.pop()&#10;&#10;# stimulus colors &#10;if trial_type == 1 or trial_type == 2:&#10;     stimulus_color = &quot;orange&quot; &#10;elif trial_type &gt;2:&#10;     stimulus_color = &quot;cyan&quot;&#10;&#10;# correct and incorrect answers for each trialtype in each block&#10;if trial_type == 1: #true&#10;    required_allowed = &quot;i&quot;&#10;    required_correct = &quot;i&quot;&#10;    feedback_allowed = &quot;e&quot;&#10;    feedback_correct = &quot;e&quot;&#10;elif trial_type == 2: #false&#10;    required_allowed = &quot;e&quot;&#10;    required_correct = &quot;e&quot;&#10;    feedback_allowed = &quot;i&quot;&#10;    feedback_correct = &quot;i&quot;&#10;if blocks.thisN &lt;= 2:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;elif blocks.thisN &gt;= 3:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedback_response.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="required_response">\u000a        <Param name="correctAns" val="$required_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response">\u000a        <Param name="correctAns" val="$feedback_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="stimulus_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulus_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="true_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="true_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$true_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="false_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="false_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$false_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;import math  # for math.ceil() rounding up&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Determine rows of examplars (i.e., max number of rows)&#10;&quot;&quot;&quot;&#10;This method creates a fully counterbalanced presentation of exemplars when there are 5&#10;of them, but it will not present each one an equal number of times it the n diverges from 5.&#10;&quot;&quot;&quot;&#10;n_exemplars = len(exemplars)&#10;list_multiplier = int(math.ceil(10/n_exemplars))  # math.ceil() rounds up. 10 is the derived from way block lengths are calculated&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Determine block repeats and which trial rows are used in each block&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;&#10;# Generate list of stimuli for the block&#10;trial_type_1_trials = generate_trials('trial_type_1_exemplars', list_multiplier)  # function and variable determined at begin exp.&#10;trial_type_2_trials = generate_trials('trial_type_2_exemplars', list_multiplier)&#10;trial_type_3_trials = generate_trials('trial_type_3_exemplars', list_multiplier)&#10;trial_type_4_trials = generate_trials('trial_type_4_exemplars', list_multiplier)&#10;trial_type_5_trials = generate_trials('trial_type_5_exemplars', list_multiplier)&#10;trial_type_6_trials = generate_trials('trial_type_6_exemplars', list_multiplier)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructions_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructions_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructions_key">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructions_key" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="2" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trial_type': 1, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 2, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 3, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 4, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 5, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 6, u'true_label': u'TRUE', u'false_label': u'FALSE'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1902
sg1720
(lp1903
sg1722
I216937648
sg11
g1742
sg6
g7
sg1724
I10
sg21
I01
sg22
g23
sg1725
g1
(g1726
g1727
(dp1904
g1729
g1730
(g1731
g1732
g1733
S'b'
tRp1905
(I1
(I6
I10
tg1735
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g1730
(g1731
g1732
g1733
S'b'
tRp1906
(I1
(I6
I10
tg1735
I00
S'\x00\xda\x88= \x8f\xce=`\xce\xac= \x83\xf1=\x0c\xb7+?\xf0^p>\xc0\xacO=@\x8b\x10=\x00!\x0b=\x80\x93\xd1=P\xf5M>\xa0@\xf1=\xb0\xf0\t>\x80\xe2\xf2=\x80_\xce=\x00\x90\x1a> k\xcd=p\x98=> \x9d\n>\x004,>@\xd0\xf1=\xc0s\xcf=\xc06\x1b>\x00L\x1b> \x89>> \x14\x1b> \xae\xaa=\xf0@\x1b>@\x9e\xef=\xc0H\xaf=@o\x1a>\x00]\x8a=\xe0a\xd0=\xc0\x9d\xcf=\x80\x8fV=\x00!S= \x8d\x8a=\xc0\x13\xd0=\xa0\x1f\xf1=\xa0{\xac=`G\xae=@i\xcf=\xc0\x9c\xf2=\xc0\xd3\xab=\x803\x95<\xc0\x8a\x0c= \x1b\xcf=\x80\x16\x8b=\xc0\xd6\x8c=\x00S\xd1=\x10\x9c<>\xa0<,>\x80\xc8\xf0=\xc0n_>\x80<=>\x10I=>0s\n>`\r\xd0=\x00\xf5*>\xa0]\xf0='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1750
(g1732
(I0
tS'b'
tRp1907
(I1
(I6
I10
tg1782
I00
(lp1908
S'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
atbsg16
g1730
(g1731
g1732
g1733
S'b'
tRp1909
(I1
(I6
I10
tg1735
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1730
(g1731
g1732
g1733
S'b'
tRp1910
(I1
(I6
I10
tg1735
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1750
(g1732
(I0
tS'b'
tRp1911
(I1
(I6
I10
tg1782
I00
(lp1912
NaNaNaNaS'e'
aNaNaNaNaNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
atbsg20
g1730
(g1731
g1732
g1733
S'b'
tRp1913
(I1
(I6
I10
tg1735
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\xff\xcd=\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80p\n>`R\x8a=\xc0\x00\x89=`\xc8\x87=\xc0\xd9\n=\xe0\n\xcf=\xa0\x15\x8a=\x00\xfd\xf0=\xa0\xb4\xd0=\xe0m\xb0=\x00\x1c\x89=@9\n=\xa0>\xd0=\x00e\xf0=\xd0~\x0b>\xc0\xf7\xcc=\x00\xcaP=\xc0\xf6\xac=\xa0=\xac=\x80d\x0f=\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x000\x13\n>`p\xf1=\xc0\xaf\x8a= \xf9\x1a>\x80\xf2\xf0=\x80\x06\xcd=\x80\xc3R=@b\n=\xa0C\xab=\xc0\xc6\x8a='
S'\x01\x01\x01\x01\x00\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg1736
g1730
(g1731
g1732
g1733
S'b'
tRp1914
(I1
(I6
I10
tg1735
I00
S'\x00\x00\x90A\x00\x00\xe0A\x00\x00\xe8A\x00\x00\xf8A\x00\x00\x14B\x00\x00\x18B\x00\x00 B\x00\x00(B\x00\x00HB\x00\x00hB\x00\x00\x00@\x00\x00@@\x00\x00\xe0@\x00\x00\x80A\x00\x00\x88A\x00\x00\xa0A\x00\x00\xd0A\x00\x00,B\x00\x00@B\x00\x00DB\x00\x00\x10A\x00\x00 A\x00\x00\xb0A\x00\x00\xc8A\x00\x00\x1cB\x00\x004B\x00\x008B\x00\x00LB\x00\x00XB\x00\x00`B\x00\x00\xa0@\x00\x000A\x00\x00PA\x00\x00`A\x00\x00\xa8A\x00\x00\xb8A\x00\x00\xc0A\x00\x00\xf0A\x00\x00\x04B\x00\x00TB\x00\x00\x80?\x00\x00\x80@\x00\x00@A\x00\x00\x98A\x00\x00\xd8A\x00\x000B\x00\x00<B\x00\x00PB\x00\x00dB\x00\x00lB\x00\x00\x00\x00\x00\x00\xc0@\x00\x00\x00A\x00\x00pA\x00\x00\x00B\x00\x00\x08B\x00\x00\x0cB\x00\x00\x10B\x00\x00$B\x00\x00\\B'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp1915
(dp1916
g1740
(dp1917
g1729
I01
sg17
I01
sg15
I00
sg16
I01
sg19
I01
sg18
I00
sg20
I01
sg1736
I01
ssg1742
g1900
sg1743
(lp1918
g1729
ag1736
ag15
ag16
ag17
ag18
ag19
ag20
asg1745
(lp1919
I6
aI10
asbsg1747
g1795
sg1749
g1750
(g1732
(I0
tS'b'
tRp1920
(I1
(I6
I10
tg1782
I00
(lp1921
I5
aI5
aI4
aI0
aI3
aI3
aI5
aI0
aI1
aI2
aI4
aI1
aI3
aI4
aI2
aI0
aI0
aI1
aI1
aI5
aI1
aI5
aI3
aI1
aI1
aI5
aI0
aI4
aI0
aI2
aI1
aI2
aI5
aI3
aI4
aI3
aI2
aI2
aI2
aI4
aI4
aI2
aI1
aI2
aI0
aI5
aI0
aI2
aI4
aI0
aI3
aI3
aI1
aI3
aI0
aI5
aI5
aI4
aI3
aI4
atbsg1752
I01
sg1753
I10
sg1754
I-1
sg1755
(lp1922
g1
(g1757
g1727
(dp1923
g1164
I1
sg1171
g1339
stRp1924
ag1
(g1757
g1727
(dp1925
g1164
I2
sg1171
g1192
stRp1926
ag1
(g1757
g1727
(dp1927
g1164
I3
sg1171
g1257
stRp1928
ag1
(g1757
g1727
(dp1929
g1164
I4
sg1171
g1220
stRp1930
ag1
(g1757
g1727
(dp1931
g1164
I5
sg1171
g1182
stRp1932
ag1
(g1757
g1727
(dp1933
g1164
I6
sg1171
g1172
stRp1934
asg1768
Nsg1769
I4
sg1770
I60
sg1771
I0
sg1772
I60
sg1773
I01
sbasS'savePickle'
p1935
I00
sb.