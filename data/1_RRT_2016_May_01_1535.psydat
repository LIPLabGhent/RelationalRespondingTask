ccopy_reg
_reconstructor
p1
(cpsychopy.data
ExperimentHandler
p2
c__builtin__
object
p3
NtRp4
(dp5
S'originPath'
p6
V/Users/Ian/git/RRT/RRT.psyexp
p7
sS'dataFileName'
p8
V/Users/Ian/git/RRT/data/1_RRT_2016_May_01_1535
p9
sS'runtimeInfo'
p10
NsS'name'
p11
S'RRT'
p12
sS'dataNames'
p13
(lp14
S'required_response.keys'
p15
aS'required_response.corr'
p16
aS'required_response.rt'
p17
aS'feedback_response.keys'
p18
aS'feedback_response.corr'
p19
aS'feedback_response.rt'
p20
asS'autoLog'
p21
I01
sS'extraInfo'
p22
(dp23
Vparticipant
p24
V1
sVgender
p25
V
sVage
p26
V
sS'frameRate'
p27
cnumpy.core.multiarray
scalar
p28
(cnumpy
dtype
p29
(S'f8'
I0
I1
tRp30
(I3
S'<'
NNNI-1
I-1
I0
tbS'\xaaY\xfd\xa2\x06\x9bM@'
tRp31
sS'expName'
p32
g12
sS'date'
p33
V2016_May_01_1535
p34
ssS'loopsUnfinished'
p35
(lp36
sS'saveWideText'
p37
I01
sS'thisEntry'
p38
(dp39
sS'version'
p40
S''
sS'_paramNamesSoFar'
p41
(lp42
Vinstructions
p43
aVtrial_type
p44
aVtrue_label
p45
aVfalse_label
p46
asS'entries'
p47
(lp48
(dp49
g45
VTRUE
p50
sg44
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
VIn this reaction time task will you have to respond to words and statements that are presented on screen. \u000a\u000aThe first phase presents both words in orange.\u000a\u000aYour job is to categorise these words as referring to TRUE or FALSE.\u000a\u000aGo as quickly as you can while being accurate.\u000aIf you make a mistake, hit the correct key as soon as possible.\u000a\u000aPut your two index fingers on the E and I keys. Press either one to start.
p51
sS'trials.thisIndex'
p52
I1
sg24
V1
sS'blocks.thisIndex'
p53
g28
(g29
(S'i4'
I0
I1
tRp54
(I3
S'<'
NNNI-1
I-1
I0
tbS'\x00\x00\x00\x00'
tRp55
sS'trials.thisRepN'
p56
I0
sg26
V
sS'trials.thisN'
p57
I0
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p58
I0
sS'blocks.thisRepN'
p59
I0
sg17
F0.92196798324584961
sg46
VFALSE
p60
sg20
F0.48574304580688477
sS'blocks.thisN'
p61
I0
sS'blocks.thisTrialN'
p62
I0
sa(dp63
g45
g50
sg44
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p64
I0
sg24
V1
sS'blocks.thisIndex'
p65
g55
sS'trials.thisRepN'
p66
I0
sg26
V
sS'trials.thisN'
p67
I1
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p68
I1
sS'blocks.thisRepN'
p69
I0
sg17
F0.28567981719970703
sg46
g60
sS'blocks.thisN'
p70
I0
sS'blocks.thisTrialN'
p71
I0
sa(dp72
g45
g50
sg44
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p73
I0
sg24
V1
sS'blocks.thisIndex'
p74
g55
sS'trials.thisRepN'
p75
I1
sg26
V
sS'trials.thisN'
p76
I2
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p77
I0
sS'blocks.thisRepN'
p78
I0
sg17
F0.25181198120117188
sg46
g60
sS'blocks.thisN'
p79
I0
sS'blocks.thisTrialN'
p80
I0
sa(dp81
g45
g50
sg44
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p82
I0
sg24
V1
sS'blocks.thisIndex'
p83
g55
sS'trials.thisRepN'
p84
I1
sg26
V
sS'trials.thisN'
p85
I3
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p86
I1
sS'blocks.thisRepN'
p87
I0
sg17
F0.2864081859588623
sg46
g60
sg20
F0.28607892990112305
sS'blocks.thisN'
p88
I0
sS'blocks.thisTrialN'
p89
I0
sa(dp90
g45
g50
sg44
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p91
I1
sg24
V1
sS'blocks.thisIndex'
p92
g55
sS'trials.thisRepN'
p93
I2
sg26
V
sS'trials.thisN'
p94
I4
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p95
I0
sS'blocks.thisRepN'
p96
I0
sg17
F0.30599403381347656
sg46
g60
sg20
F0.30570316314697266
sS'blocks.thisN'
p97
I0
sS'blocks.thisTrialN'
p98
I0
sa(dp99
g45
g50
sg44
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p100
I1
sg24
V1
sS'blocks.thisIndex'
p101
g55
sS'trials.thisRepN'
p102
I2
sg26
V
sS'trials.thisN'
p103
I5
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p104
I1
sS'blocks.thisRepN'
p105
I0
sg17
F0.41792488098144531
sg46
g60
sg20
F0.40105104446411133
sS'blocks.thisN'
p106
I0
sS'blocks.thisTrialN'
p107
I0
sa(dp108
g45
g50
sg44
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p109
I1
sg24
V1
sS'blocks.thisIndex'
p110
g55
sS'trials.thisRepN'
p111
I3
sg26
V
sS'trials.thisN'
p112
I6
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p113
I0
sS'blocks.thisRepN'
p114
I0
sg17
F0.31837606430053711
sg46
g60
sg20
F0.28556394577026367
sS'blocks.thisN'
p115
I0
sS'blocks.thisTrialN'
p116
I0
sa(dp117
g45
g50
sg44
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p118
I0
sg24
V1
sS'blocks.thisIndex'
p119
g55
sS'trials.thisRepN'
p120
I3
sg26
V
sS'trials.thisN'
p121
I7
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p122
I1
sS'blocks.thisRepN'
p123
I0
sg17
F0.30208015441894531
sg46
g60
sS'blocks.thisN'
p124
I0
sS'blocks.thisTrialN'
p125
I0
sa(dp126
g45
g50
sg44
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p127
I0
sg24
V1
sS'blocks.thisIndex'
p128
g55
sS'trials.thisRepN'
p129
I4
sg26
V
sS'trials.thisN'
p130
I8
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p131
I0
sS'blocks.thisRepN'
p132
I0
sg17
F0.30207610130310059
sg46
g60
sS'blocks.thisN'
p133
I0
sS'blocks.thisTrialN'
p134
I0
sa(dp135
g45
g50
sg44
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p136
I0
sg24
V1
sS'blocks.thisIndex'
p137
g55
sS'trials.thisRepN'
p138
I4
sg26
V
sS'trials.thisN'
p139
I9
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p140
I1
sS'blocks.thisRepN'
p141
I0
sg17
F0.33521604537963867
sg46
g60
sg20
F0.33472704887390137
sS'blocks.thisN'
p142
I0
sS'blocks.thisTrialN'
p143
I0
sa(dp144
g45
g50
sg44
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p145
I0
sg24
V1
sS'blocks.thisIndex'
p146
g55
sS'trials.thisRepN'
p147
I5
sg26
V
sS'trials.thisN'
p148
I10
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p149
I0
sS'blocks.thisRepN'
p150
I0
sg17
F0.23579907417297363
sg46
g60
sg20
F0.23550105094909668
sS'blocks.thisN'
p151
I0
sS'blocks.thisTrialN'
p152
I0
sa(dp153
g45
g50
sg44
I2
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p154
I1
sg24
V1
sS'blocks.thisIndex'
p155
g55
sS'trials.thisRepN'
p156
I5
sg26
V
sS'trials.thisN'
p157
I11
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p158
I1
sS'blocks.thisRepN'
p159
I0
sg17
F0.25187492370605469
sg46
g60
sS'blocks.thisN'
p160
I0
sS'blocks.thisTrialN'
p161
I0
sa(dp162
g45
g50
sg44
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p163
I1
sg24
V1
sS'blocks.thisIndex'
p164
g55
sS'trials.thisRepN'
p165
I6
sg26
V
sS'trials.thisN'
p166
I12
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p167
I0
sS'blocks.thisRepN'
p168
I0
sg17
F0.2516019344329834
sg46
g60
sg20
F0.25147914886474609
sS'blocks.thisN'
p169
I0
sS'blocks.thisTrialN'
p170
I0
sa(dp171
g45
g50
sg44
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p172
I1
sg24
V1
sS'blocks.thisIndex'
p173
g55
sS'trials.thisRepN'
p174
I6
sg26
V
sS'trials.thisN'
p175
I13
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p176
I1
sS'blocks.thisRepN'
p177
I0
sg17
F0.31903409957885742
sg46
g60
sg20
F0.30090498924255371
sS'blocks.thisN'
p178
I0
sS'blocks.thisTrialN'
p179
I0
sa(dp180
g45
g50
sg44
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p181
I0
sg24
V1
sS'blocks.thisIndex'
p182
g55
sS'trials.thisRepN'
p183
I7
sg26
V
sS'trials.thisN'
p184
I14
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p185
I0
sS'blocks.thisRepN'
p186
I0
sg17
F0.28655600547790527
sg46
g60
sg20
F0.28635501861572266
sS'blocks.thisN'
p187
I0
sS'blocks.thisTrialN'
p188
I0
sa(dp189
g45
g50
sg44
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p190
I0
sg24
V1
sS'blocks.thisIndex'
p191
g55
sS'trials.thisRepN'
p192
I7
sg26
V
sS'trials.thisN'
p193
I15
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p194
I1
sS'blocks.thisRepN'
p195
I0
sg17
F0.30246305465698242
sg46
g60
sS'blocks.thisN'
p196
I0
sS'blocks.thisTrialN'
p197
I0
sa(dp198
g45
g50
sg44
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p199
I0
sg24
V1
sS'blocks.thisIndex'
p200
g55
sS'trials.thisRepN'
p201
I8
sg26
V
sS'trials.thisN'
p202
I16
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p203
I0
sS'blocks.thisRepN'
p204
I0
sg17
F0.25129890441894531
sg46
g60
sS'blocks.thisN'
p205
I0
sS'blocks.thisTrialN'
p206
I0
sa(dp207
g45
g50
sg44
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p208
I1
sg24
V1
sS'blocks.thisIndex'
p209
g55
sS'trials.thisRepN'
p210
I8
sg26
V
sS'trials.thisN'
p211
I17
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p212
I1
sS'blocks.thisRepN'
p213
I0
sg17
F0.25247097015380859
sg46
g60
sg20
F0.23525500297546387
sS'blocks.thisN'
p214
I0
sS'blocks.thisTrialN'
p215
I0
sa(dp216
g45
g50
sg44
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p217
I1
sg24
V1
sS'blocks.thisIndex'
p218
g55
sS'trials.thisRepN'
p219
I9
sg26
V
sS'trials.thisN'
p220
I18
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p221
I0
sS'blocks.thisRepN'
p222
I0
sg17
F0.28553581237792969
sg46
g60
sg20
F0.26828813552856445
sS'blocks.thisN'
p223
I0
sS'blocks.thisTrialN'
p224
I0
sa(dp225
g45
g50
sg44
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g51
sS'trials.thisIndex'
p226
I1
sg24
V1
sS'blocks.thisIndex'
p227
g55
sS'trials.thisRepN'
p228
I9
sg26
V
sS'trials.thisN'
p229
I19
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p230
I1
sS'blocks.thisRepN'
p231
I0
sg17
F0.25308799743652344
sg46
g60
sg20
F0.25279092788696289
sS'blocks.thisN'
p232
I0
sS'blocks.thisTrialN'
p233
I0
sa(dp234
Vtrue_label
p235
VTRUE
p236
sVtrial_type
p237
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
VThe next phase presents statements about self esteem in blue.\u000a\u000aYou must respond AS IF 'I am good and not bad'.\u000a\u000aFor example:\u000aWhen 'I am valuable' appears, respond with TRUE.\u000aWhen 'I am worthless' appears, respond with FALSE.\u000a\u000aGo as quickly as you can while being accurate.\u000aIf you make a mistake hit the correct key as soon as possible.\u000a\u000aPress E or I to continue.
p238
sS'trials.thisIndex'
p239
I2
sg24
V1
sS'blocks.thisIndex'
p240
g28
(g54
S'\x01\x00\x00\x00'
tRp241
sS'trials.thisRepN'
p242
I0
sg26
V
sS'trials.thisN'
p243
I0
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p244
I0
sS'blocks.thisRepN'
p245
I0
sg17
F0.27009797096252441
sVfalse_label
p246
VFALSE
p247
sg20
F0.26987600326538086
sS'blocks.thisN'
p248
I1
sS'blocks.thisTrialN'
p249
I1
sa(dp250
g235
g236
sg237
I3
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p251
I0
sg24
V1
sS'blocks.thisIndex'
p252
g241
sS'trials.thisRepN'
p253
I0
sg26
V
sS'trials.thisN'
p254
I1
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p255
I1
sS'blocks.thisRepN'
p256
I0
sg17
F0.21756100654602051
sg246
g247
sg20
F0.1841580867767334
sS'blocks.thisN'
p257
I1
sS'blocks.thisTrialN'
p258
I1
sa(dp259
g235
g236
sg237
I6
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p260
I3
sg24
V1
sS'blocks.thisIndex'
p261
g241
sS'trials.thisRepN'
p262
I0
sg26
V
sS'trials.thisN'
p263
I2
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p264
I2
sS'blocks.thisRepN'
p265
I0
sg17
F0.15125107765197754
sg246
g247
sg20
F0.15084195137023926
sS'blocks.thisN'
p266
I1
sS'blocks.thisTrialN'
p267
I1
sa(dp268
g235
g236
sg237
I3
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p269
I0
sg24
V1
sS'blocks.thisIndex'
p270
g241
sS'trials.thisRepN'
p271
I0
sg26
V
sS'trials.thisN'
p272
I3
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p273
I3
sS'blocks.thisRepN'
p274
I0
sg17
F0.15269899368286133
sg246
g247
sg20
F0.15242910385131836
sS'blocks.thisN'
p275
I1
sS'blocks.thisTrialN'
p276
I1
sa(dp277
g235
g236
sg237
I6
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p278
I3
sg24
V1
sS'blocks.thisIndex'
p279
g241
sS'trials.thisRepN'
p280
I1
sg26
V
sS'trials.thisN'
p281
I4
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p282
I0
sS'blocks.thisRepN'
p283
I0
sg17
F0.16803121566772461
sg246
g247
sg20
F0.16769003868103027
sS'blocks.thisN'
p284
I1
sS'blocks.thisTrialN'
p285
I1
sa(dp286
g235
g236
sg237
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p287
I2
sg24
V1
sS'blocks.thisIndex'
p288
g241
sS'trials.thisRepN'
p289
I1
sg26
V
sS'trials.thisN'
p290
I5
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p291
I1
sS'blocks.thisRepN'
p292
I0
sg17
F279.21303391456604
sg246
g247
sg20
F279.01202988624573
sS'blocks.thisN'
p293
I1
sS'blocks.thisTrialN'
p294
I1
sa(dp295
g235
g236
sg237
I3
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p296
I0
sg24
V1
sS'blocks.thisIndex'
p297
g241
sS'trials.thisRepN'
p298
I1
sg26
V
sS'trials.thisN'
p299
I6
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p300
I2
sS'blocks.thisRepN'
p301
I0
sg17
F0.20113015174865723
sg246
g247
sg20
F0.1849820613861084
sS'blocks.thisN'
p302
I1
sS'blocks.thisTrialN'
p303
I1
sa(dp304
g235
g236
sg237
I4
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p305
I1
sg24
V1
sS'blocks.thisIndex'
p306
g241
sS'trials.thisRepN'
p307
I1
sg26
V
sS'trials.thisN'
p308
I7
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p309
I3
sS'blocks.thisRepN'
p310
I0
sg17
F0.084702968597412109
sg246
g247
sS'blocks.thisN'
p311
I1
sS'blocks.thisTrialN'
p312
I1
sa(dp313
g235
g236
sg237
I4
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p314
I1
sg24
V1
sS'blocks.thisIndex'
p315
g241
sS'trials.thisRepN'
p316
I2
sg26
V
sS'trials.thisN'
p317
I8
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p318
I0
sS'blocks.thisRepN'
p319
I0
sg17
F0.15144586563110352
sg246
g247
sS'blocks.thisN'
p320
I1
sS'blocks.thisTrialN'
p321
I1
sa(dp322
g235
g236
sg237
I3
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p323
I0
sg24
V1
sS'blocks.thisIndex'
p324
g241
sS'trials.thisRepN'
p325
I2
sg26
V
sS'trials.thisN'
p326
I9
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p327
I1
sS'blocks.thisRepN'
p328
I0
sg17
F0.1849360466003418
sg246
g247
sg20
F0.16752409934997559
sS'blocks.thisN'
p329
I1
sS'blocks.thisTrialN'
p330
I1
sa(dp331
g235
g236
sg237
I3
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p332
I0
sg24
V1
sS'blocks.thisIndex'
p333
g241
sS'trials.thisRepN'
p334
I2
sg26
V
sS'trials.thisN'
p335
I10
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p336
I2
sS'blocks.thisRepN'
p337
I0
sg17
F0.1353919506072998
sg246
g247
sg20
F0.13525009155273438
sS'blocks.thisN'
p338
I1
sS'blocks.thisTrialN'
p339
I1
sa(dp340
g235
g236
sg237
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p341
I2
sg24
V1
sS'blocks.thisIndex'
p342
g241
sS'trials.thisRepN'
p343
I2
sg26
V
sS'trials.thisN'
p344
I11
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p345
I3
sS'blocks.thisRepN'
p346
I0
sg17
F0.16870880126953125
sg246
g247
sg20
F0.1685640811920166
sS'blocks.thisN'
p347
I1
sS'blocks.thisTrialN'
p348
I1
sa(dp349
g235
g236
sg237
I6
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p350
I3
sg24
V1
sS'blocks.thisIndex'
p351
g241
sS'trials.thisRepN'
p352
I3
sg26
V
sS'trials.thisN'
p353
I12
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p354
I0
sS'blocks.thisRepN'
p355
I0
sg17
F0.16823410987854004
sg246
g247
sg20
F0.15146493911743164
sS'blocks.thisN'
p356
I1
sS'blocks.thisTrialN'
p357
I1
sa(dp358
g235
g236
sg237
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p359
I3
sg24
V1
sS'blocks.thisIndex'
p360
g241
sS'trials.thisRepN'
p361
I3
sg26
V
sS'trials.thisN'
p362
I13
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p363
I1
sS'blocks.thisRepN'
p364
I0
sg17
F0.1509861946105957
sg246
g247
sS'blocks.thisN'
p365
I1
sS'blocks.thisTrialN'
p366
I1
sa(dp367
g235
g236
sg237
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p368
I2
sg24
V1
sS'blocks.thisIndex'
p369
g241
sS'trials.thisRepN'
p370
I3
sg26
V
sS'trials.thisN'
p371
I14
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p372
I2
sS'blocks.thisRepN'
p373
I0
sg17
F0.13512611389160156
sg246
g247
sg20
F0.13496899604797363
sS'blocks.thisN'
p374
I1
sS'blocks.thisTrialN'
p375
I1
sa(dp376
g235
g236
sg237
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p377
I2
sg24
V1
sS'blocks.thisIndex'
p378
g241
sS'trials.thisRepN'
p379
I3
sg26
V
sS'trials.thisN'
p380
I15
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p381
I3
sS'blocks.thisRepN'
p382
I0
sg17
F0.13445591926574707
sg246
g247
sg20
F0.13428902626037598
sS'blocks.thisN'
p383
I1
sS'blocks.thisTrialN'
p384
I1
sa(dp385
g235
g236
sg237
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p386
I1
sg24
V1
sS'blocks.thisIndex'
p387
g241
sS'trials.thisRepN'
p388
I4
sg26
V
sS'trials.thisN'
p389
I16
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p390
I0
sS'blocks.thisRepN'
p391
I0
sg17
F0.11858391761779785
sg246
g247
sg20
F0.1184380054473877
sS'blocks.thisN'
p392
I1
sS'blocks.thisTrialN'
p393
I1
sa(dp394
g235
g236
sg237
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p395
I1
sg24
V1
sS'blocks.thisIndex'
p396
g241
sS'trials.thisRepN'
p397
I4
sg26
V
sS'trials.thisN'
p398
I17
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p399
I1
sS'blocks.thisRepN'
p400
I0
sg17
F0.1343691349029541
sg246
g247
sg20
F0.13420891761779785
sS'blocks.thisN'
p401
I1
sS'blocks.thisTrialN'
p402
I1
sa(dp403
g235
g236
sg237
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p404
I3
sg24
V1
sS'blocks.thisIndex'
p405
g241
sS'trials.thisRepN'
p406
I4
sg26
V
sS'trials.thisN'
p407
I18
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p408
I2
sS'blocks.thisRepN'
p409
I0
sg17
F0.13460707664489746
sg246
g247
sS'blocks.thisN'
p410
I1
sS'blocks.thisTrialN'
p411
I1
sa(dp412
g235
g236
sg237
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g238
sS'trials.thisIndex'
p413
I1
sg24
V1
sS'blocks.thisIndex'
p414
g241
sS'trials.thisRepN'
p415
I4
sg26
V
sS'trials.thisN'
p416
I19
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p417
I3
sS'blocks.thisRepN'
p418
I0
sg17
F0.11709690093994141
sg246
g247
sg20
F0.083374977111816406
sS'blocks.thisN'
p419
I1
sS'blocks.thisTrialN'
p420
I1
sa(dp421
Vtrue_label
p422
VTRUE
p423
sVtrial_type
p424
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
VThe next phase presents both the orange words and blue statements.\u000a\u000aYou must both respond to the statements in blue AS IF 'I am good and not bad',\u000aand categorise the orange words as referring to TRUE or FALSE.\u000a\u000aGo as quickly as you can while being accurate.\u000aIf you make a mistake hit the correct key as soon as possible.\u000a\u000aPress E or I to continue.
p425
sS'trials.thisIndex'
p426
I2
sg24
V1
sS'blocks.thisIndex'
p427
g28
(g54
S'\x02\x00\x00\x00'
tRp428
sS'trials.thisRepN'
p429
I0
sg26
V
sS'trials.thisN'
p430
I0
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p431
I0
sS'blocks.thisRepN'
p432
I0
sg17
F0.16792821884155273
sVfalse_label
p433
VFALSE
p434
sS'blocks.thisN'
p435
I2
sS'blocks.thisTrialN'
p436
I2
sa(dp437
g422
g423
sg424
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p438
I0
sg24
V1
sS'blocks.thisIndex'
p439
g428
sS'trials.thisRepN'
p440
I0
sg26
V
sS'trials.thisN'
p441
I1
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p442
I1
sS'blocks.thisRepN'
p443
I0
sg17
F0.11998701095581055
sg433
g434
sg20
F0.11950802803039551
sS'blocks.thisN'
p444
I2
sS'blocks.thisTrialN'
p445
I2
sa(dp446
g422
g423
sg424
I4
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p447
I3
sg24
V1
sS'blocks.thisIndex'
p448
g428
sS'trials.thisRepN'
p449
I0
sg26
V
sS'trials.thisN'
p450
I2
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p451
I2
sS'blocks.thisRepN'
p452
I0
sg17
F0.033775091171264648
sg433
g434
sS'blocks.thisN'
p453
I2
sS'blocks.thisTrialN'
p454
I2
sa(dp455
g422
g423
sg424
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p456
I0
sg24
V1
sS'blocks.thisIndex'
p457
g428
sS'trials.thisRepN'
p458
I0
sg26
V
sS'trials.thisN'
p459
I3
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p460
I3
sS'blocks.thisRepN'
p461
I0
sg17
F0.11740994453430176
sg433
g434
sg20
F0.10103011131286621
sS'blocks.thisN'
p462
I2
sS'blocks.thisTrialN'
p463
I2
sa(dp464
g422
g423
sg424
I6
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p465
I5
sg24
V1
sS'blocks.thisIndex'
p466
g428
sS'trials.thisRepN'
p467
I0
sg26
V
sS'trials.thisN'
p468
I4
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p469
I4
sS'blocks.thisRepN'
p470
I0
sg17
F0.085944175720214844
sg433
g434
sg20
F0.085651874542236328
sS'blocks.thisN'
p471
I2
sS'blocks.thisTrialN'
p472
I2
sa(dp473
g422
g423
sg424
I3
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p474
I2
sg24
V1
sS'blocks.thisIndex'
p475
g428
sS'trials.thisRepN'
p476
I0
sg26
V
sS'trials.thisN'
p477
I5
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p478
I5
sS'blocks.thisRepN'
p479
I0
sg17
F0.084184885025024414
sg433
g434
sg20
F0.066364049911499023
sS'blocks.thisN'
p480
I2
sS'blocks.thisTrialN'
p481
I2
sa(dp482
g422
g423
sg424
I4
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p483
I3
sg24
V1
sS'blocks.thisIndex'
p484
g428
sS'trials.thisRepN'
p485
I1
sg26
V
sS'trials.thisN'
p486
I6
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p487
I0
sS'blocks.thisRepN'
p488
I0
sg17
F0.01626896858215332
sg433
g434
sS'blocks.thisN'
p489
I2
sS'blocks.thisTrialN'
p490
I2
sa(dp491
g422
g423
sg424
I5
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p492
I4
sg24
V1
sS'blocks.thisIndex'
p493
g428
sS'trials.thisRepN'
p494
I1
sg26
V
sS'trials.thisN'
p495
I7
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p496
I1
sS'blocks.thisRepN'
p497
I0
sg17
F0.067821025848388672
sg433
g434
sS'blocks.thisN'
p498
I2
sS'blocks.thisTrialN'
p499
I2
sa(dp500
g422
g423
sg424
I2
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p501
I1
sg24
V1
sS'blocks.thisIndex'
p502
g428
sS'trials.thisRepN'
p503
I1
sg26
V
sS'trials.thisN'
p504
I8
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p505
I2
sS'blocks.thisRepN'
p506
I0
sg17
F0.035155057907104492
sg433
g434
sS'blocks.thisN'
p507
I2
sS'blocks.thisTrialN'
p508
I2
sa(dp509
g422
g423
sg424
I5
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p510
I4
sg24
V1
sS'blocks.thisIndex'
p511
g428
sS'trials.thisRepN'
p512
I1
sg26
V
sS'trials.thisN'
p513
I9
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p514
I3
sS'blocks.thisRepN'
p515
I0
sg17
F0.051310062408447266
sg433
g434
sS'blocks.thisN'
p516
I2
sS'blocks.thisTrialN'
p517
I2
sa(dp518
g422
g423
sg424
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p519
I1
sg24
V1
sS'blocks.thisIndex'
p520
g428
sS'trials.thisRepN'
p521
I1
sg26
V
sS'trials.thisN'
p522
I10
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p523
I4
sS'blocks.thisRepN'
p524
I0
sg17
F0.1339111328125
sg433
g434
sg20
F0.11879682540893555
sS'blocks.thisN'
p525
I2
sS'blocks.thisTrialN'
p526
I2
sa(dp527
g422
g423
sg424
I4
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p528
I3
sg24
V1
sS'blocks.thisIndex'
p529
g428
sS'trials.thisRepN'
p530
I1
sg26
V
sS'trials.thisN'
p531
I11
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p532
I5
sS'blocks.thisRepN'
p533
I0
sg17
F0.033649921417236328
sg433
g434
sS'blocks.thisN'
p534
I2
sS'blocks.thisTrialN'
p535
I2
sa(dp536
g422
g423
sg424
I2
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p537
I1
sg24
V1
sS'blocks.thisIndex'
p538
g428
sS'trials.thisRepN'
p539
I2
sg26
V
sS'trials.thisN'
p540
I12
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p541
I0
sS'blocks.thisRepN'
p542
I0
sg17
F0.051870107650756836
sg433
g434
sS'blocks.thisN'
p543
I2
sS'blocks.thisTrialN'
p544
I2
sa(dp545
g422
g423
sg424
I6
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p546
I5
sg24
V1
sS'blocks.thisIndex'
p547
g428
sS'trials.thisRepN'
p548
I2
sg26
V
sS'trials.thisN'
p549
I13
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p550
I1
sS'blocks.thisRepN'
p551
I0
sg17
F0.050649881362915039
sg433
g434
sg20
F0.032793045043945312
sS'blocks.thisN'
p552
I2
sS'blocks.thisTrialN'
p553
I2
sa(dp554
g422
g423
sg424
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p555
I1
sg24
V1
sS'blocks.thisIndex'
p556
g428
sS'trials.thisRepN'
p557
I2
sg26
V
sS'trials.thisN'
p558
I14
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p559
I2
sS'blocks.thisRepN'
p560
I0
sg17
F0.3695981502532959
sg433
g434
sg20
F0.032367944717407227
sS'blocks.thisN'
p561
I2
sS'blocks.thisTrialN'
p562
I2
sa(dp563
g422
g423
sg424
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p564
I5
sg24
V1
sS'blocks.thisIndex'
p565
g428
sS'trials.thisRepN'
p566
I2
sg26
V
sS'trials.thisN'
p567
I15
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p568
I3
sS'blocks.thisRepN'
p569
I0
sg17
F0.10154008865356445
sg433
g434
sS'blocks.thisN'
p570
I2
sS'blocks.thisTrialN'
p571
I2
sa(dp572
g422
g423
sg424
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p573
I0
sg24
V1
sS'blocks.thisIndex'
p574
g428
sS'trials.thisRepN'
p575
I2
sg26
V
sS'trials.thisN'
p576
I16
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p577
I4
sS'blocks.thisRepN'
p578
I0
sg17
F0.035006046295166016
sg433
g434
sS'blocks.thisN'
p579
I2
sS'blocks.thisTrialN'
p580
I2
sa(dp581
g422
g423
sg424
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p582
I1
sg24
V1
sS'blocks.thisIndex'
p583
g428
sS'trials.thisRepN'
p584
I2
sg26
V
sS'trials.thisN'
p585
I17
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p586
I5
sS'blocks.thisRepN'
p587
I0
sg17
F0.16811704635620117
sg433
g434
sg20
F0.11857891082763672
sS'blocks.thisN'
p588
I2
sS'blocks.thisTrialN'
p589
I2
sa(dp590
g422
g423
sg424
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p591
I0
sg24
V1
sS'blocks.thisIndex'
p592
g428
sS'trials.thisRepN'
p593
I3
sg26
V
sS'trials.thisN'
p594
I18
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p595
I0
sS'blocks.thisRepN'
p596
I0
sg17
F0.017458915710449219
sg433
g434
sS'blocks.thisN'
p597
I2
sS'blocks.thisTrialN'
p598
I2
sa(dp599
g422
g423
sg424
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p600
I4
sg24
V1
sS'blocks.thisIndex'
p601
g428
sS'trials.thisRepN'
p602
I3
sg26
V
sS'trials.thisN'
p603
I19
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p604
I1
sS'blocks.thisRepN'
p605
I0
sg17
F0.15260720252990723
sg433
g434
sg20
F0.050413131713867188
sS'blocks.thisN'
p606
I2
sS'blocks.thisTrialN'
p607
I2
sa(dp608
g422
g423
sg424
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p609
I1
sg24
V1
sS'blocks.thisIndex'
p610
g428
sS'trials.thisRepN'
p611
I3
sg26
V
sS'trials.thisN'
p612
I20
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p613
I2
sS'blocks.thisRepN'
p614
I0
sg17
F0.11858510971069336
sg433
g434
sg20
F0.034387111663818359
sS'blocks.thisN'
p615
I2
sS'blocks.thisTrialN'
p616
I2
sa(dp617
g422
g423
sg424
I6
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p618
I5
sg24
V1
sS'blocks.thisIndex'
p619
g428
sS'trials.thisRepN'
p620
I3
sg26
V
sS'trials.thisN'
p621
I21
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p622
I3
sS'blocks.thisRepN'
p623
I0
sg17
F0.4030001163482666
sg433
g434
sg20
F0.10196518898010254
sS'blocks.thisN'
p624
I2
sS'blocks.thisTrialN'
p625
I2
sa(dp626
g422
g423
sg424
I3
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p627
I2
sg24
V1
sS'blocks.thisIndex'
p628
g428
sS'trials.thisRepN'
p629
I3
sg26
V
sS'trials.thisN'
p630
I22
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p631
I4
sS'blocks.thisRepN'
p632
I0
sg17
F0.20240688323974609
sg433
g434
sg20
F0.2020869255065918
sS'blocks.thisN'
p633
I2
sS'blocks.thisTrialN'
p634
I2
sa(dp635
g422
g423
sg424
I5
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p636
I4
sg24
V1
sS'blocks.thisIndex'
p637
g428
sS'trials.thisRepN'
p638
I3
sg26
V
sS'trials.thisN'
p639
I23
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p640
I5
sS'blocks.thisRepN'
p641
I0
sg17
F0.1008000373840332
sg433
g434
sS'blocks.thisN'
p642
I2
sS'blocks.thisTrialN'
p643
I2
sa(dp644
g422
g423
sg424
I3
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p645
I2
sg24
V1
sS'blocks.thisIndex'
p646
g428
sS'trials.thisRepN'
p647
I4
sg26
V
sS'trials.thisN'
p648
I24
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p649
I0
sS'blocks.thisRepN'
p650
I0
sg17
F0.085834026336669922
sg433
g434
sg20
F0.08567500114440918
sS'blocks.thisN'
p651
I2
sS'blocks.thisTrialN'
p652
I2
sa(dp653
g422
g423
sg424
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p654
I1
sg24
V1
sS'blocks.thisIndex'
p655
g428
sS'trials.thisRepN'
p656
I4
sg26
V
sS'trials.thisN'
p657
I25
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p658
I1
sS'blocks.thisRepN'
p659
I0
sg17
F0.23633503913879395
sg433
g434
sg20
F0.21901798248291016
sS'blocks.thisN'
p660
I2
sS'blocks.thisTrialN'
p661
I2
sa(dp662
g422
g423
sg424
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p663
I5
sg24
V1
sS'blocks.thisIndex'
p664
g428
sS'trials.thisRepN'
p665
I4
sg26
V
sS'trials.thisN'
p666
I26
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p667
I2
sS'blocks.thisRepN'
p668
I0
sg17
F0.085378170013427734
sg433
g434
sS'blocks.thisN'
p669
I2
sS'blocks.thisTrialN'
p670
I2
sa(dp671
g422
g423
sg424
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p672
I0
sg24
V1
sS'blocks.thisIndex'
p673
g428
sS'trials.thisRepN'
p674
I4
sg26
V
sS'trials.thisN'
p675
I27
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p676
I3
sS'blocks.thisRepN'
p677
I0
sg17
F0.1008760929107666
sg433
g434
sg20
F0.10047101974487305
sS'blocks.thisN'
p678
I2
sS'blocks.thisTrialN'
p679
I2
sa(dp680
g422
g423
sg424
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p681
I1
sg24
V1
sS'blocks.thisIndex'
p682
g428
sS'trials.thisRepN'
p683
I4
sg26
V
sS'trials.thisN'
p684
I28
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p685
I4
sS'blocks.thisRepN'
p686
I0
sg17
F0.067117929458618164
sg433
g434
sg20
F0.066597938537597656
sS'blocks.thisN'
p687
I2
sS'blocks.thisTrialN'
p688
I2
sa(dp689
g422
g423
sg424
I4
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p690
I3
sg24
V1
sS'blocks.thisIndex'
p691
g428
sS'trials.thisRepN'
p692
I4
sg26
V
sS'trials.thisN'
p693
I29
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p694
I5
sS'blocks.thisRepN'
p695
I0
sg17
F0.052089929580688477
sg433
g434
sS'blocks.thisN'
p696
I2
sS'blocks.thisTrialN'
p697
I2
sa(dp698
g422
g423
sg424
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p699
I2
sg24
V1
sS'blocks.thisIndex'
p700
g428
sS'trials.thisRepN'
p701
I5
sg26
V
sS'trials.thisN'
p702
I30
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p703
I0
sS'blocks.thisRepN'
p704
I0
sg17
F0.10088992118835449
sg433
g434
sS'blocks.thisN'
p705
I2
sS'blocks.thisTrialN'
p706
I2
sa(dp707
g422
g423
sg424
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p708
I4
sg24
V1
sS'blocks.thisIndex'
p709
g428
sS'trials.thisRepN'
p710
I5
sg26
V
sS'trials.thisN'
p711
I31
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p712
I1
sS'blocks.thisRepN'
p713
I0
sg17
F0.068593978881835938
sg433
g434
sg20
F0.067815065383911133
sS'blocks.thisN'
p714
I2
sS'blocks.thisTrialN'
p715
I2
sa(dp716
g422
g423
sg424
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p717
I3
sg24
V1
sS'blocks.thisIndex'
p718
g428
sS'trials.thisRepN'
p719
I5
sg26
V
sS'trials.thisN'
p720
I32
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p721
I2
sS'blocks.thisRepN'
p722
I0
sg17
F0.068150997161865234
sg433
g434
sg20
F0.067766904830932617
sS'blocks.thisN'
p723
I2
sS'blocks.thisTrialN'
p724
I2
sa(dp725
g422
g423
sg424
I2
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p726
I1
sg24
V1
sS'blocks.thisIndex'
p727
g428
sS'trials.thisRepN'
p728
I5
sg26
V
sS'trials.thisN'
p729
I33
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p730
I3
sS'blocks.thisRepN'
p731
I0
sg17
F0.032466888427734375
sg433
g434
sS'blocks.thisN'
p732
I2
sS'blocks.thisTrialN'
p733
I2
sa(dp734
g422
g423
sg424
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p735
I5
sg24
V1
sS'blocks.thisIndex'
p736
g428
sS'trials.thisRepN'
p737
I5
sg26
V
sS'trials.thisN'
p738
I34
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p739
I4
sS'blocks.thisRepN'
p740
I0
sg17
F0.051622867584228516
sg433
g434
sS'blocks.thisN'
p741
I2
sS'blocks.thisTrialN'
p742
I2
sa(dp743
g422
g423
sg424
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p744
I0
sg24
V1
sS'blocks.thisIndex'
p745
g428
sS'trials.thisRepN'
p746
I5
sg26
V
sS'trials.thisN'
p747
I35
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p748
I5
sS'blocks.thisRepN'
p749
I0
sg17
F0.067354917526245117
sg433
g434
sS'blocks.thisN'
p750
I2
sS'blocks.thisTrialN'
p751
I2
sa(dp752
g422
g423
sg424
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p753
I1
sg24
V1
sS'blocks.thisIndex'
p754
g428
sS'trials.thisRepN'
p755
I6
sg26
V
sS'trials.thisN'
p756
I36
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p757
I0
sS'blocks.thisRepN'
p758
I0
sg17
F0.068616867065429688
sg433
g434
sg20
F0.068042993545532227
sS'blocks.thisN'
p759
I2
sS'blocks.thisTrialN'
p760
I2
sa(dp761
g422
g423
sg424
I4
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p762
I3
sg24
V1
sS'blocks.thisIndex'
p763
g428
sS'trials.thisRepN'
p764
I6
sg26
V
sS'trials.thisN'
p765
I37
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p766
I1
sS'blocks.thisRepN'
p767
I0
sg17
F0.017476081848144531
sg433
g434
sS'blocks.thisN'
p768
I2
sS'blocks.thisTrialN'
p769
I2
sa(dp770
g422
g423
sg424
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p771
I2
sg24
V1
sS'blocks.thisIndex'
p772
g428
sS'trials.thisRepN'
p773
I6
sg26
V
sS'trials.thisN'
p774
I38
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p775
I2
sS'blocks.thisRepN'
p776
I0
sg17
F0.085048913955688477
sg433
g434
sS'blocks.thisN'
p777
I2
sS'blocks.thisTrialN'
p778
I2
sa(dp779
g422
g423
sg424
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p780
I4
sg24
V1
sS'blocks.thisIndex'
p781
g428
sS'trials.thisRepN'
p782
I6
sg26
V
sS'trials.thisN'
p783
I39
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p784
I3
sS'blocks.thisRepN'
p785
I0
sg17
F0.067793130874633789
sg433
g434
sg20
F0.067502021789550781
sS'blocks.thisN'
p786
I2
sS'blocks.thisTrialN'
p787
I2
sa(dp788
g422
g423
sg424
I6
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p789
I5
sg24
V1
sS'blocks.thisIndex'
p790
g428
sS'trials.thisRepN'
p791
I6
sg26
V
sS'trials.thisN'
p792
I40
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p793
I4
sS'blocks.thisRepN'
p794
I0
sg17
F0.051687002182006836
sg433
g434
sg20
F0.051542997360229492
sS'blocks.thisN'
p795
I2
sS'blocks.thisTrialN'
p796
I2
sa(dp797
g422
g423
sg424
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p798
I4
sg24
V1
sS'blocks.thisIndex'
p799
g428
sS'trials.thisRepN'
p800
I6
sg26
V
sS'trials.thisN'
p801
I41
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p802
I5
sS'blocks.thisRepN'
p803
I0
sg17
F0.08414006233215332
sg433
g434
sg20
F0.05233001708984375
sS'blocks.thisN'
p804
I2
sS'blocks.thisTrialN'
p805
I2
sa(dp806
g422
g423
sg424
I3
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p807
I2
sg24
V1
sS'blocks.thisIndex'
p808
g428
sS'trials.thisRepN'
p809
I7
sg26
V
sS'trials.thisN'
p810
I42
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p811
I0
sS'blocks.thisRepN'
p812
I0
sg17
F0.034607887268066406
sg433
g434
sS'blocks.thisN'
p813
I2
sS'blocks.thisTrialN'
p814
I2
sa(dp815
g422
g423
sg424
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p816
I0
sg24
V1
sS'blocks.thisIndex'
p817
g428
sS'trials.thisRepN'
p818
I7
sg26
V
sS'trials.thisN'
p819
I43
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p820
I1
sS'blocks.thisRepN'
p821
I0
sg17
F0.083516120910644531
sg433
g434
sg20
F0.082906961441040039
sS'blocks.thisN'
p822
I2
sS'blocks.thisTrialN'
p823
I2
sa(dp824
g422
g423
sg424
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p825
I4
sg24
V1
sS'blocks.thisIndex'
p826
g428
sS'trials.thisRepN'
p827
I7
sg26
V
sS'trials.thisN'
p828
I44
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p829
I2
sS'blocks.thisRepN'
p830
I0
sg17
F0.068310976028442383
sg433
g434
sg20
F0.067703962326049805
sS'blocks.thisN'
p831
I2
sS'blocks.thisTrialN'
p832
I2
sa(dp833
g422
g423
sg424
I6
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p834
I5
sg24
V1
sS'blocks.thisIndex'
p835
g428
sS'trials.thisRepN'
p836
I7
sg26
V
sS'trials.thisN'
p837
I45
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p838
I3
sS'blocks.thisRepN'
p839
I0
sg17
F0.034060955047607422
sg433
g434
sS'blocks.thisN'
p840
I2
sS'blocks.thisTrialN'
p841
I2
sa(dp842
g422
g423
sg424
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p843
I0
sg24
V1
sS'blocks.thisIndex'
p844
g428
sS'trials.thisRepN'
p845
I7
sg26
V
sS'trials.thisN'
p846
I46
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p847
I4
sS'blocks.thisRepN'
p848
I0
sg17
F0.051656007766723633
sg433
g434
sg20
F0.018384933471679688
sS'blocks.thisN'
p849
I2
sS'blocks.thisTrialN'
p850
I2
sa(dp851
g422
g423
sg424
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p852
I3
sg24
V1
sS'blocks.thisIndex'
p853
g428
sS'trials.thisRepN'
p854
I7
sg26
V
sS'trials.thisN'
p855
I47
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p856
I5
sS'blocks.thisRepN'
p857
I0
sg17
F0.10111784934997559
sg433
g434
sg20
F0.051589012145996094
sS'blocks.thisN'
p858
I2
sS'blocks.thisTrialN'
p859
I2
sa(dp860
g422
g423
sg424
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p861
I3
sg24
V1
sS'blocks.thisIndex'
p862
g428
sS'trials.thisRepN'
p863
I8
sg26
V
sS'trials.thisN'
p864
I48
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p865
I0
sS'blocks.thisRepN'
p866
I0
sg17
F0.050334930419921875
sg433
g434
sg20
F0.016927957534790039
sS'blocks.thisN'
p867
I2
sS'blocks.thisTrialN'
p868
I2
sa(dp869
g422
g423
sg424
I3
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p870
I2
sg24
V1
sS'blocks.thisIndex'
p871
g428
sS'trials.thisRepN'
p872
I8
sg26
V
sS'trials.thisN'
p873
I49
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p874
I1
sS'blocks.thisRepN'
p875
I0
sg17
F0.5366370677947998
sg433
g434
sg20
F0.085448980331420898
sS'blocks.thisN'
p876
I2
sS'blocks.thisTrialN'
p877
I2
sa(dp878
g422
g423
sg424
I4
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p879
I3
sg24
V1
sS'blocks.thisIndex'
p880
g428
sS'trials.thisRepN'
p881
I8
sg26
V
sS'trials.thisN'
p882
I50
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p883
I2
sS'blocks.thisRepN'
p884
I0
sg17
F0.068029880523681641
sg433
g434
sg20
F0.067692995071411133
sS'blocks.thisN'
p885
I2
sS'blocks.thisTrialN'
p886
I2
sa(dp887
g422
g423
sg424
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p888
I4
sg24
V1
sS'blocks.thisIndex'
p889
g428
sS'trials.thisRepN'
p890
I8
sg26
V
sS'trials.thisN'
p891
I51
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p892
I3
sS'blocks.thisRepN'
p893
I0
sg17
F0.083554983139038086
sg433
g434
sg20
F0.050482988357543945
sS'blocks.thisN'
p894
I2
sS'blocks.thisTrialN'
p895
I2
sa(dp896
g422
g423
sg424
I3
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p897
I2
sg24
V1
sS'blocks.thisIndex'
p898
g428
sS'trials.thisRepN'
p899
I8
sg26
V
sS'trials.thisN'
p900
I52
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p901
I4
sS'blocks.thisRepN'
p902
I0
sg17
F0.40170097351074219
sg433
g434
sg20
F0.016914844512939453
sS'blocks.thisN'
p903
I2
sS'blocks.thisTrialN'
p904
I2
sa(dp905
g422
g423
sg424
I5
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p906
I4
sg24
V1
sS'blocks.thisIndex'
p907
g428
sS'trials.thisRepN'
p908
I8
sg26
V
sS'trials.thisN'
p909
I53
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p910
I5
sS'blocks.thisRepN'
p911
I0
sg17
F0.18634700775146484
sg433
g434
sg20
F0.18625187873840332
sS'blocks.thisN'
p912
I2
sS'blocks.thisTrialN'
p913
I2
sa(dp914
g422
g423
sg424
I6
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p915
I5
sg24
V1
sS'blocks.thisIndex'
p916
g428
sS'trials.thisRepN'
p917
I9
sg26
V
sS'trials.thisN'
p918
I54
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p919
I0
sS'blocks.thisRepN'
p920
I0
sg17
F0.13413190841674805
sg433
g434
sg20
F0.13379597663879395
sS'blocks.thisN'
p921
I2
sS'blocks.thisTrialN'
p922
I2
sa(dp923
g422
g423
sg424
I6
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p924
I5
sg24
V1
sS'blocks.thisIndex'
p925
g428
sS'trials.thisRepN'
p926
I9
sg26
V
sS'trials.thisN'
p927
I55
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p928
I1
sS'blocks.thisRepN'
p929
I0
sg17
F0.10170292854309082
sg433
g434
sg20
F0.084573984146118164
sS'blocks.thisN'
p930
I2
sS'blocks.thisTrialN'
p931
I2
sa(dp932
g422
g423
sg424
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p933
I0
sg24
V1
sS'blocks.thisIndex'
p934
g428
sS'trials.thisRepN'
p935
I9
sg26
V
sS'trials.thisN'
p936
I56
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p937
I2
sS'blocks.thisRepN'
p938
I0
sg17
F0.11980509757995605
sg433
g434
sg20
F0.11955595016479492
sS'blocks.thisN'
p939
I2
sS'blocks.thisTrialN'
p940
I2
sa(dp941
g422
g423
sg424
I3
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p942
I2
sg24
V1
sS'blocks.thisIndex'
p943
g428
sS'trials.thisRepN'
p944
I9
sg26
V
sS'trials.thisN'
p945
I57
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p946
I3
sS'blocks.thisRepN'
p947
I0
sg17
F0.11798906326293945
sg433
g434
sg20
F0.10018205642700195
sS'blocks.thisN'
p948
I2
sS'blocks.thisTrialN'
p949
I2
sa(dp950
g422
g423
sg424
I4
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p951
I3
sg24
V1
sS'blocks.thisIndex'
p952
g428
sS'trials.thisRepN'
p953
I9
sg26
V
sS'trials.thisN'
p954
I58
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p955
I4
sS'blocks.thisRepN'
p956
I0
sg17
F0.051609039306640625
sg433
g434
sS'blocks.thisN'
p957
I2
sS'blocks.thisTrialN'
p958
I2
sa(dp959
g422
g423
sg424
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g425
sS'trials.thisIndex'
p960
I0
sg24
V1
sS'blocks.thisIndex'
p961
g428
sS'trials.thisRepN'
p962
I9
sg26
V
sS'trials.thisN'
p963
I59
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p964
I5
sS'blocks.thisRepN'
p965
I0
sg17
F0.067909002304077148
sg433
g434
sS'blocks.thisN'
p966
I2
sS'blocks.thisTrialN'
p967
I2
sa(dp968
Vtrue_label
p969
VTRUE
p970
sVtrial_type
p971
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
VThe next phase presents only the blue statements.\u000a\u000aIMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u000a\u000aYou must respond AS IF 'I am bad and not good'.\u000a\u000aFor example:\u000aWhen 'I am valuable' appears, respond with FALSE.\u000aWhen 'I am worthless' appears, respond with TRUE.\u000a\u000aGo as quickly as you can while being accurate.\u000aIf you make a mistake, hit the correct key as soon as possible.\u000a\u000aPress E or I to continue.
p972
sS'trials.thisIndex'
p973
I2
sg24
V1
sS'blocks.thisIndex'
p974
g28
(g54
S'\x03\x00\x00\x00'
tRp975
sS'trials.thisRepN'
p976
I0
sg26
V
sS'trials.thisN'
p977
I0
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p978
I0
sS'blocks.thisRepN'
p979
I0
sg17
F0.15174412727355957
sVfalse_label
p980
VFALSE
p981
sS'blocks.thisN'
p982
I3
sS'blocks.thisTrialN'
p983
I3
sa(dp984
g969
g970
sg971
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p985
I3
sg24
V1
sS'blocks.thisIndex'
p986
g975
sS'trials.thisRepN'
p987
I0
sg26
V
sS'trials.thisN'
p988
I1
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p989
I1
sS'blocks.thisRepN'
p990
I0
sg17
F0.084532976150512695
sg980
g981
sg20
F0.084192037582397461
sS'blocks.thisN'
p991
I3
sS'blocks.thisTrialN'
p992
I3
sa(dp993
g969
g970
sg971
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p994
I0
sg24
V1
sS'blocks.thisIndex'
p995
g975
sS'trials.thisRepN'
p996
I0
sg26
V
sS'trials.thisN'
p997
I2
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p998
I2
sS'blocks.thisRepN'
p999
I0
sg17
F0.06688690185546875
sg980
g981
sg20
F0.051460027694702148
sS'blocks.thisN'
p1000
I3
sS'blocks.thisTrialN'
p1001
I3
sa(dp1002
g969
g970
sg971
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1003
I0
sg24
V1
sS'blocks.thisIndex'
p1004
g975
sS'trials.thisRepN'
p1005
I0
sg26
V
sS'trials.thisN'
p1006
I3
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1007
I3
sS'blocks.thisRepN'
p1008
I0
sg17
F0.034489154815673828
sg980
g981
sg20
F0.034106969833374023
sS'blocks.thisN'
p1009
I3
sS'blocks.thisTrialN'
p1010
I3
sa(dp1011
g969
g970
sg971
I4
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1012
I1
sg24
V1
sS'blocks.thisIndex'
p1013
g975
sS'trials.thisRepN'
p1014
I1
sg26
V
sS'trials.thisN'
p1015
I4
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1016
I0
sS'blocks.thisRepN'
p1017
I0
sg17
F0.068156957626342773
sg980
g981
sg20
F0.067794084548950195
sS'blocks.thisN'
p1018
I3
sS'blocks.thisTrialN'
p1019
I3
sa(dp1020
g969
g970
sg971
I6
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1021
I3
sg24
V1
sS'blocks.thisIndex'
p1022
g975
sS'trials.thisRepN'
p1023
I1
sg26
V
sS'trials.thisN'
p1024
I5
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1025
I1
sS'blocks.thisRepN'
p1026
I0
sg17
F0.068327188491821289
sg980
g981
sS'blocks.thisN'
p1027
I3
sS'blocks.thisTrialN'
p1028
I3
sa(dp1029
g969
g970
sg971
I4
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1030
I1
sg24
V1
sS'blocks.thisIndex'
p1031
g975
sS'trials.thisRepN'
p1032
I1
sg26
V
sS'trials.thisN'
p1033
I6
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1034
I2
sS'blocks.thisRepN'
p1035
I0
sg17
F0.034813880920410156
sg980
g981
sg20
F0.034427881240844727
sS'blocks.thisN'
p1036
I3
sS'blocks.thisTrialN'
p1037
I3
sa(dp1038
g969
g970
sg971
I3
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1039
I0
sg24
V1
sS'blocks.thisIndex'
p1040
g975
sS'trials.thisRepN'
p1041
I1
sg26
V
sS'trials.thisN'
p1042
I7
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1043
I3
sS'blocks.thisRepN'
p1044
I0
sg17
F0.051171064376831055
sg980
g981
sS'blocks.thisN'
p1045
I3
sS'blocks.thisTrialN'
p1046
I3
sa(dp1047
g969
g970
sg971
I4
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1048
I1
sg24
V1
sS'blocks.thisIndex'
p1049
g975
sS'trials.thisRepN'
p1050
I2
sg26
V
sS'trials.thisN'
p1051
I8
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1052
I0
sS'blocks.thisRepN'
p1053
I0
sg17
F0.035212039947509766
sg980
g981
sg20
F0.016828060150146484
sS'blocks.thisN'
p1054
I3
sS'blocks.thisTrialN'
p1055
I3
sa(dp1056
g969
g970
sg971
I4
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1057
I1
sg24
V1
sS'blocks.thisIndex'
p1058
g975
sS'trials.thisRepN'
p1059
I2
sg26
V
sS'trials.thisN'
p1060
I9
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1061
I1
sS'blocks.thisRepN'
p1062
I0
sg17
F0.084186792373657227
sg980
g981
sg20
F0.06730198860168457
sS'blocks.thisN'
p1063
I3
sS'blocks.thisTrialN'
p1064
I3
sa(dp1065
g969
g970
sg971
I5
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1066
I2
sg24
V1
sS'blocks.thisIndex'
p1067
g975
sS'trials.thisRepN'
p1068
I2
sg26
V
sS'trials.thisN'
p1069
I10
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1070
I2
sS'blocks.thisRepN'
p1071
I0
sg17
F0.034765005111694336
sg980
g981
sg20
F0.018083095550537109
sS'blocks.thisN'
p1072
I3
sS'blocks.thisTrialN'
p1073
I3
sa(dp1074
g969
g970
sg971
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1075
I3
sg24
V1
sS'blocks.thisIndex'
p1076
g975
sS'trials.thisRepN'
p1077
I2
sg26
V
sS'trials.thisN'
p1078
I11
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1079
I3
sS'blocks.thisRepN'
p1080
I0
sg17
F0.052919864654541016
sg980
g981
sg20
F0.052638053894042969
sS'blocks.thisN'
p1081
I3
sS'blocks.thisTrialN'
p1082
I3
sa(dp1083
g969
g970
sg971
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1084
I0
sg24
V1
sS'blocks.thisIndex'
p1085
g975
sS'trials.thisRepN'
p1086
I3
sg26
V
sS'trials.thisN'
p1087
I12
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1088
I0
sS'blocks.thisRepN'
p1089
I0
sg17
F0.10067296028137207
sg980
g981
sg20
F0.085206985473632812
sS'blocks.thisN'
p1090
I3
sS'blocks.thisTrialN'
p1091
I3
sa(dp1092
g969
g970
sg971
I4
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1093
I1
sg24
V1
sS'blocks.thisIndex'
p1094
g975
sS'trials.thisRepN'
p1095
I3
sg26
V
sS'trials.thisN'
p1096
I13
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1097
I1
sS'blocks.thisRepN'
p1098
I0
sg17
F0.084300041198730469
sg980
g981
sg20
F0.0839691162109375
sS'blocks.thisN'
p1099
I3
sS'blocks.thisTrialN'
p1100
I3
sa(dp1101
g969
g970
sg971
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1102
I2
sg24
V1
sS'blocks.thisIndex'
p1103
g975
sS'trials.thisRepN'
p1104
I3
sg26
V
sS'trials.thisN'
p1105
I14
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1106
I2
sS'blocks.thisRepN'
p1107
I0
sg17
F0.051239967346191406
sg980
g981
sS'blocks.thisN'
p1108
I3
sS'blocks.thisTrialN'
p1109
I3
sa(dp1110
g969
g970
sg971
I5
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1111
I2
sg24
V1
sS'blocks.thisIndex'
p1112
g975
sS'trials.thisRepN'
p1113
I3
sg26
V
sS'trials.thisN'
p1114
I15
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1115
I3
sS'blocks.thisRepN'
p1116
I0
sg17
F0.1677699089050293
sg980
g981
sS'blocks.thisN'
p1117
I3
sS'blocks.thisTrialN'
p1118
I3
sa(dp1119
g969
g970
sg971
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1120
I3
sg24
V1
sS'blocks.thisIndex'
p1121
g975
sS'trials.thisRepN'
p1122
I4
sg26
V
sS'trials.thisN'
p1123
I16
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1124
I0
sS'blocks.thisRepN'
p1125
I0
sg17
F0.11806583404541016
sg980
g981
sg20
F0.10124588012695312
sS'blocks.thisN'
p1126
I3
sS'blocks.thisTrialN'
p1127
I3
sa(dp1128
g969
g970
sg971
I3
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1129
I0
sg24
V1
sS'blocks.thisIndex'
p1130
g975
sS'trials.thisRepN'
p1131
I4
sg26
V
sS'trials.thisN'
p1132
I17
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1133
I1
sS'blocks.thisRepN'
p1134
I0
sg17
F0.068005084991455078
sg980
g981
sS'blocks.thisN'
p1135
I3
sS'blocks.thisTrialN'
p1136
I3
sa(dp1137
g969
g970
sg971
I5
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1138
I2
sg24
V1
sS'blocks.thisIndex'
p1139
g975
sS'trials.thisRepN'
p1140
I4
sg26
V
sS'trials.thisN'
p1141
I18
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1142
I2
sS'blocks.thisRepN'
p1143
I0
sg17
F0.11822104454040527
sg980
g981
sg20
F0.085443019866943359
sS'blocks.thisN'
p1144
I3
sS'blocks.thisTrialN'
p1145
I3
sa(dp1146
g969
g970
sg971
I6
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g972
sS'trials.thisIndex'
p1147
I3
sg24
V1
sS'blocks.thisIndex'
p1148
g975
sS'trials.thisRepN'
p1149
I4
sg26
V
sS'trials.thisN'
p1150
I19
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1151
I3
sS'blocks.thisRepN'
p1152
I0
sg17
F0.051246166229248047
sg980
g981
sS'blocks.thisN'
p1153
I3
sS'blocks.thisTrialN'
p1154
I3
sa(dp1155
Vtrue_label
p1156
VTRUE
p1157
sVtrial_type
p1158
I6
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
VThe next phase presents both the orange words and blue statements.\u000a\u000aYou must both respond to the statements in blue AS IF 'I am bad and not good',\u000aand categorise the orange words as referring to TRUE or FALSE.\u000a\u000aGo as quickly as you can while being accurate.\u000aIf you make a mistake, hit the correct key as soon as possible.\u000a\u000aPress E or I to continue.
p1159
sS'trials.thisIndex'
p1160
I5
sg24
V1
sS'blocks.thisIndex'
p1161
g28
(g54
S'\x04\x00\x00\x00'
tRp1162
sS'trials.thisRepN'
p1163
I0
sg26
V
sS'trials.thisN'
p1164
I0
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1165
I0
sS'blocks.thisRepN'
p1166
I0
sg17
F0.13538503646850586
sVfalse_label
p1167
VFALSE
p1168
sS'blocks.thisN'
p1169
I4
sS'blocks.thisTrialN'
p1170
I4
sa(dp1171
g1156
g1157
sg1158
I3
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1172
I2
sg24
V1
sS'blocks.thisIndex'
p1173
g1162
sS'trials.thisRepN'
p1174
I0
sg26
V
sS'trials.thisN'
p1175
I1
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1176
I1
sS'blocks.thisRepN'
p1177
I0
sg17
F0.18570494651794434
sg1167
g1168
sS'blocks.thisN'
p1178
I4
sS'blocks.thisTrialN'
p1179
I4
sa(dp1180
g1156
g1157
sg1158
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1181
I2
sg24
V1
sS'blocks.thisIndex'
p1182
g1162
sS'trials.thisRepN'
p1183
I0
sg26
V
sS'trials.thisN'
p1184
I2
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1185
I2
sS'blocks.thisRepN'
p1186
I0
sg17
F0.11817598342895508
sg1167
g1168
sg20
F0.11740899085998535
sS'blocks.thisN'
p1187
I4
sS'blocks.thisTrialN'
p1188
I4
sa(dp1189
g1156
g1157
sg1158
I4
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1190
I3
sg24
V1
sS'blocks.thisIndex'
p1191
g1162
sS'trials.thisRepN'
p1192
I0
sg26
V
sS'trials.thisN'
p1193
I3
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1194
I3
sS'blocks.thisRepN'
p1195
I0
sg17
F0.068762779235839844
sg1167
g1168
sg20
F0.068352937698364258
sS'blocks.thisN'
p1196
I4
sS'blocks.thisTrialN'
p1197
I4
sa(dp1198
g1156
g1157
sg1158
I5
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1199
I4
sg24
V1
sS'blocks.thisIndex'
p1200
g1162
sS'trials.thisRepN'
p1201
I0
sg26
V
sS'trials.thisN'
p1202
I4
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1203
I4
sS'blocks.thisRepN'
p1204
I0
sg17
F0.10244607925415039
sg1167
g1168
sg20
F0.051542997360229492
sS'blocks.thisN'
p1205
I4
sS'blocks.thisTrialN'
p1206
I4
sa(dp1207
g1156
g1157
sg1158
I6
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1208
I5
sg24
V1
sS'blocks.thisIndex'
p1209
g1162
sS'trials.thisRepN'
p1210
I0
sg26
V
sS'trials.thisN'
p1211
I5
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1212
I5
sS'blocks.thisRepN'
p1213
I0
sg17
F0.034467935562133789
sg1167
g1168
sS'blocks.thisN'
p1214
I4
sS'blocks.thisTrialN'
p1215
I4
sa(dp1216
g1156
g1157
sg1158
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1217
I1
sg24
V1
sS'blocks.thisIndex'
p1218
g1162
sS'trials.thisRepN'
p1219
I1
sg26
V
sS'trials.thisN'
p1220
I6
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1221
I0
sS'blocks.thisRepN'
p1222
I0
sg17
F0.11753201484680176
sg1167
g1168
sg20
F0.11690902709960938
sS'blocks.thisN'
p1223
I4
sS'blocks.thisTrialN'
p1224
I4
sa(dp1225
g1156
g1157
sg1158
I6
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1226
I5
sg24
V1
sS'blocks.thisIndex'
p1227
g1162
sS'trials.thisRepN'
p1228
I1
sg26
V
sS'trials.thisN'
p1229
I7
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1230
I1
sS'blocks.thisRepN'
p1231
I0
sg17
F0.068135976791381836
sg1167
g1168
sS'blocks.thisN'
p1232
I4
sS'blocks.thisTrialN'
p1233
I4
sa(dp1234
g1156
g1157
sg1158
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1235
I5
sg24
V1
sS'blocks.thisIndex'
p1236
g1162
sS'trials.thisRepN'
p1237
I1
sg26
V
sS'trials.thisN'
p1238
I8
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1239
I2
sS'blocks.thisRepN'
p1240
I0
sg17
F0.10155010223388672
sg1167
g1168
sg20
F0.10125398635864258
sS'blocks.thisN'
p1241
I4
sS'blocks.thisTrialN'
p1242
I4
sa(dp1243
g1156
g1157
sg1158
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1244
I0
sg24
V1
sS'blocks.thisIndex'
p1245
g1162
sS'trials.thisRepN'
p1246
I1
sg26
V
sS'trials.thisN'
p1247
I9
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1248
I3
sS'blocks.thisRepN'
p1249
I0
sg17
F0.069341897964477539
sg1167
g1168
sg20
F0.050370931625366211
sS'blocks.thisN'
p1250
I4
sS'blocks.thisTrialN'
p1251
I4
sa(dp1252
g1156
g1157
sg1158
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1253
I0
sg24
V1
sS'blocks.thisIndex'
p1254
g1162
sS'trials.thisRepN'
p1255
I1
sg26
V
sS'trials.thisN'
p1256
I10
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1257
I4
sS'blocks.thisRepN'
p1258
I0
sg17
F0.067545175552368164
sg1167
g1168
sg20
F0.066859960556030273
sS'blocks.thisN'
p1259
I4
sS'blocks.thisTrialN'
p1260
I4
sa(dp1261
g1156
g1157
sg1158
I2
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1262
I1
sg24
V1
sS'blocks.thisIndex'
p1263
g1162
sS'trials.thisRepN'
p1264
I1
sg26
V
sS'trials.thisN'
p1265
I11
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1266
I5
sS'blocks.thisRepN'
p1267
I0
sg17
F0.052080154418945312
sg1167
g1168
sS'blocks.thisN'
p1268
I4
sS'blocks.thisTrialN'
p1269
I4
sa(dp1270
g1156
g1157
sg1158
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1271
I0
sg24
V1
sS'blocks.thisIndex'
p1272
g1162
sS'trials.thisRepN'
p1273
I2
sg26
V
sS'trials.thisN'
p1274
I12
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1275
I0
sS'blocks.thisRepN'
p1276
I0
sg17
F0.067321062088012695
sg1167
g1168
sS'blocks.thisN'
p1277
I4
sS'blocks.thisTrialN'
p1278
I4
sa(dp1279
g1156
g1157
sg1158
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1280
I2
sg24
V1
sS'blocks.thisIndex'
p1281
g1162
sS'trials.thisRepN'
p1282
I2
sg26
V
sS'trials.thisN'
p1283
I13
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1284
I1
sS'blocks.thisRepN'
p1285
I0
sg17
F0.084953069686889648
sg1167
g1168
sg20
F0.067723989486694336
sS'blocks.thisN'
p1286
I4
sS'blocks.thisTrialN'
p1287
I4
sa(dp1288
g1156
g1157
sg1158
I4
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1289
I3
sg24
V1
sS'blocks.thisIndex'
p1290
g1162
sS'trials.thisRepN'
p1291
I2
sg26
V
sS'trials.thisN'
p1292
I14
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1293
I2
sS'blocks.thisRepN'
p1294
I0
sg17
F0.085564851760864258
sg1167
g1168
sg20
F0.052191972732543945
sS'blocks.thisN'
p1295
I4
sS'blocks.thisTrialN'
p1296
I4
sa(dp1297
g1156
g1157
sg1158
I6
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1298
I5
sg24
V1
sS'blocks.thisIndex'
p1299
g1162
sS'trials.thisRepN'
p1300
I2
sg26
V
sS'trials.thisN'
p1301
I15
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1302
I3
sS'blocks.thisRepN'
p1303
I0
sg17
F0.06855320930480957
sg1167
g1168
sg20
F0.068271160125732422
sS'blocks.thisN'
p1304
I4
sS'blocks.thisTrialN'
p1305
I4
sa(dp1306
g1156
g1157
sg1158
I4
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1307
I3
sg24
V1
sS'blocks.thisIndex'
p1308
g1162
sS'trials.thisRepN'
p1309
I2
sg26
V
sS'trials.thisN'
p1310
I16
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1311
I4
sS'blocks.thisRepN'
p1312
I0
sg17
F0.10094714164733887
sg1167
g1168
sg20
F0.067180156707763672
sS'blocks.thisN'
p1313
I4
sS'blocks.thisTrialN'
p1314
I4
sa(dp1315
g1156
g1157
sg1158
I6
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1316
I5
sg24
V1
sS'blocks.thisIndex'
p1317
g1162
sS'trials.thisRepN'
p1318
I2
sg26
V
sS'trials.thisN'
p1319
I17
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1320
I5
sS'blocks.thisRepN'
p1321
I0
sg17
F0.067000150680541992
sg1167
g1168
sS'blocks.thisN'
p1322
I4
sS'blocks.thisTrialN'
p1323
I4
sa(dp1324
g1156
g1157
sg1158
I3
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1325
I2
sg24
V1
sS'blocks.thisIndex'
p1326
g1162
sS'trials.thisRepN'
p1327
I3
sg26
V
sS'trials.thisN'
p1328
I18
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1329
I0
sS'blocks.thisRepN'
p1330
I0
sg17
F0.06812596321105957
sg1167
g1168
sS'blocks.thisN'
p1331
I4
sS'blocks.thisTrialN'
p1332
I4
sa(dp1333
g1156
g1157
sg1158
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1334
I1
sg24
V1
sS'blocks.thisIndex'
p1335
g1162
sS'trials.thisRepN'
p1336
I3
sg26
V
sS'trials.thisN'
p1337
I19
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1338
I1
sS'blocks.thisRepN'
p1339
I0
sg17
F0.10196399688720703
sg1167
g1168
sg20
F0.083829879760742188
sS'blocks.thisN'
p1340
I4
sS'blocks.thisTrialN'
p1341
I4
sa(dp1342
g1156
g1157
sg1158
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1343
I0
sg24
V1
sS'blocks.thisIndex'
p1344
g1162
sS'trials.thisRepN'
p1345
I3
sg26
V
sS'trials.thisN'
p1346
I20
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1347
I2
sS'blocks.thisRepN'
p1348
I0
sg17
F0.083692073822021484
sg1167
g1168
sg20
F0.051074028015136719
sS'blocks.thisN'
p1349
I4
sS'blocks.thisTrialN'
p1350
I4
sa(dp1351
g1156
g1157
sg1158
I4
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1352
I3
sg24
V1
sS'blocks.thisIndex'
p1353
g1162
sS'trials.thisRepN'
p1354
I3
sg26
V
sS'trials.thisN'
p1355
I21
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1356
I3
sS'blocks.thisRepN'
p1357
I0
sg17
F0.066990852355957031
sg1167
g1168
sg20
F0.051546812057495117
sS'blocks.thisN'
p1358
I4
sS'blocks.thisTrialN'
p1359
I4
sa(dp1360
g1156
g1157
sg1158
I3
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1361
I2
sg24
V1
sS'blocks.thisIndex'
p1362
g1162
sS'trials.thisRepN'
p1363
I3
sg26
V
sS'trials.thisN'
p1364
I22
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1365
I4
sS'blocks.thisRepN'
p1366
I0
sg17
F0.068864107131958008
sg1167
g1168
sS'blocks.thisN'
p1367
I4
sS'blocks.thisTrialN'
p1368
I4
sa(dp1369
g1156
g1157
sg1158
I3
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1370
I2
sg24
V1
sS'blocks.thisIndex'
p1371
g1162
sS'trials.thisRepN'
p1372
I3
sg26
V
sS'trials.thisN'
p1373
I23
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1374
I5
sS'blocks.thisRepN'
p1375
I0
sg17
F0.033619165420532227
sg1167
g1168
sS'blocks.thisN'
p1376
I4
sS'blocks.thisTrialN'
p1377
I4
sa(dp1378
g1156
g1157
sg1158
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1379
I3
sg24
V1
sS'blocks.thisIndex'
p1380
g1162
sS'trials.thisRepN'
p1381
I4
sg26
V
sS'trials.thisN'
p1382
I24
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1383
I0
sS'blocks.thisRepN'
p1384
I0
sg17
F0.085756063461303711
sg1167
g1168
sS'blocks.thisN'
p1385
I4
sS'blocks.thisTrialN'
p1386
I4
sa(dp1387
g1156
g1157
sg1158
I2
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1388
I1
sg24
V1
sS'blocks.thisIndex'
p1389
g1162
sS'trials.thisRepN'
p1390
I4
sg26
V
sS'trials.thisN'
p1391
I25
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1392
I1
sS'blocks.thisRepN'
p1393
I0
sg17
F0.084475040435791016
sg1167
g1168
sS'blocks.thisN'
p1394
I4
sS'blocks.thisTrialN'
p1395
I4
sa(dp1396
g1156
g1157
sg1158
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1397
I1
sg24
V1
sS'blocks.thisIndex'
p1398
g1162
sS'trials.thisRepN'
p1399
I4
sg26
V
sS'trials.thisN'
p1400
I26
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1401
I2
sS'blocks.thisRepN'
p1402
I0
sg17
F0.084684133529663086
sg1167
g1168
sg20
F0.084270000457763672
sS'blocks.thisN'
p1403
I4
sS'blocks.thisTrialN'
p1404
I4
sa(dp1405
g1156
g1157
sg1158
I5
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1406
I4
sg24
V1
sS'blocks.thisIndex'
p1407
g1162
sS'trials.thisRepN'
p1408
I4
sg26
V
sS'trials.thisN'
p1409
I27
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1410
I3
sS'blocks.thisRepN'
p1411
I0
sg17
F0.084306955337524414
sg1167
g1168
sg20
F0.066829919815063477
sS'blocks.thisN'
p1412
I4
sS'blocks.thisTrialN'
p1413
I4
sa(dp1414
g1156
g1157
sg1158
I3
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1415
I2
sg24
V1
sS'blocks.thisIndex'
p1416
g1162
sS'trials.thisRepN'
p1417
I4
sg26
V
sS'trials.thisN'
p1418
I28
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1419
I4
sS'blocks.thisRepN'
p1420
I0
sg17
F0.051535844802856445
sg1167
g1168
sS'blocks.thisN'
p1421
I4
sS'blocks.thisTrialN'
p1422
I4
sa(dp1423
g1156
g1157
sg1158
I6
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1424
I5
sg24
V1
sS'blocks.thisIndex'
p1425
g1162
sS'trials.thisRepN'
p1426
I4
sg26
V
sS'trials.thisN'
p1427
I29
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1428
I5
sS'blocks.thisRepN'
p1429
I0
sg17
F0.3858029842376709
sg1167
g1168
sS'blocks.thisN'
p1430
I4
sS'blocks.thisTrialN'
p1431
I4
sa(dp1432
g1156
g1157
sg1158
I4
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1433
I3
sg24
V1
sS'blocks.thisIndex'
p1434
g1162
sS'trials.thisRepN'
p1435
I5
sg26
V
sS'trials.thisN'
p1436
I30
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1437
I0
sS'blocks.thisRepN'
p1438
I0
sg17
F0.11845493316650391
sg1167
g1168
sS'blocks.thisN'
p1439
I4
sS'blocks.thisTrialN'
p1440
I4
sa(dp1441
g1156
g1157
sg1158
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1442
I0
sg24
V1
sS'blocks.thisIndex'
p1443
g1162
sS'trials.thisRepN'
p1444
I5
sg26
V
sS'trials.thisN'
p1445
I31
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1446
I1
sS'blocks.thisRepN'
p1447
I0
sg17
F0.083794832229614258
sg1167
g1168
sg20
F0.067344903945922852
sS'blocks.thisN'
p1448
I4
sS'blocks.thisTrialN'
p1449
I4
sa(dp1450
g1156
g1157
sg1158
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1451
I0
sg24
V1
sS'blocks.thisIndex'
p1452
g1162
sS'trials.thisRepN'
p1453
I5
sg26
V
sS'trials.thisN'
p1454
I32
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1455
I2
sS'blocks.thisRepN'
p1456
I0
sg17
F0.068777084350585938
sg1167
g1168
sg20
F0.068539142608642578
sS'blocks.thisN'
p1457
I4
sS'blocks.thisTrialN'
p1458
I4
sa(dp1459
g1156
g1157
sg1158
I5
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1460
I4
sg24
V1
sS'blocks.thisIndex'
p1461
g1162
sS'trials.thisRepN'
p1462
I5
sg26
V
sS'trials.thisN'
p1463
I33
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1464
I3
sS'blocks.thisRepN'
p1465
I0
sg17
F0.085314035415649414
sg1167
g1168
sg20
F0.067237138748168945
sS'blocks.thisN'
p1466
I4
sS'blocks.thisTrialN'
p1467
I4
sa(dp1468
g1156
g1157
sg1158
I2
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1469
I1
sg24
V1
sS'blocks.thisIndex'
p1470
g1162
sS'trials.thisRepN'
p1471
I5
sg26
V
sS'trials.thisN'
p1472
I34
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1473
I4
sS'blocks.thisRepN'
p1474
I0
sg17
F0.050673007965087891
sg1167
g1168
sS'blocks.thisN'
p1475
I4
sS'blocks.thisTrialN'
p1476
I4
sa(dp1477
g1156
g1157
sg1158
I5
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1478
I4
sg24
V1
sS'blocks.thisIndex'
p1479
g1162
sS'trials.thisRepN'
p1480
I5
sg26
V
sS'trials.thisN'
p1481
I35
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1482
I5
sS'blocks.thisRepN'
p1483
I0
sg17
F0.084602117538452148
sg1167
g1168
sg20
F0.067805051803588867
sS'blocks.thisN'
p1484
I4
sS'blocks.thisTrialN'
p1485
I4
sa(dp1486
g1156
g1157
sg1158
I2
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1487
I1
sg24
V1
sS'blocks.thisIndex'
p1488
g1162
sS'trials.thisRepN'
p1489
I6
sg26
V
sS'trials.thisN'
p1490
I36
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1491
I0
sS'blocks.thisRepN'
p1492
I0
sg17
F0.03493499755859375
sg1167
g1168
sS'blocks.thisN'
p1493
I4
sS'blocks.thisTrialN'
p1494
I4
sa(dp1495
g1156
g1157
sg1158
I4
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1496
I3
sg24
V1
sS'blocks.thisIndex'
p1497
g1162
sS'trials.thisRepN'
p1498
I6
sg26
V
sS'trials.thisN'
p1499
I37
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1500
I1
sS'blocks.thisRepN'
p1501
I0
sg17
F0.13411688804626465
sg1167
g1168
sg20
F0.11794400215148926
sS'blocks.thisN'
p1502
I4
sS'blocks.thisTrialN'
p1503
I4
sa(dp1504
g1156
g1157
sg1158
I2
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1505
I1
sg24
V1
sS'blocks.thisIndex'
p1506
g1162
sS'trials.thisRepN'
p1507
I6
sg26
V
sS'trials.thisN'
p1508
I38
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1509
I2
sS'blocks.thisRepN'
p1510
I0
sg17
F0.035134792327880859
sg1167
g1168
sS'blocks.thisN'
p1511
I4
sS'blocks.thisTrialN'
p1512
I4
sa(dp1513
g1156
g1157
sg1158
I5
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1514
I4
sg24
V1
sS'blocks.thisIndex'
p1515
g1162
sS'trials.thisRepN'
p1516
I6
sg26
V
sS'trials.thisN'
p1517
I39
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1518
I3
sS'blocks.thisRepN'
p1519
I0
sg17
F0.085842132568359375
sg1167
g1168
sg20
F0.085483074188232422
sS'blocks.thisN'
p1520
I4
sS'blocks.thisTrialN'
p1521
I4
sa(dp1522
g1156
g1157
sg1158
I4
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1523
I3
sg24
V1
sS'blocks.thisIndex'
p1524
g1162
sS'trials.thisRepN'
p1525
I6
sg26
V
sS'trials.thisN'
p1526
I40
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1527
I4
sS'blocks.thisRepN'
p1528
I0
sg17
F0.083654165267944336
sg1167
g1168
sg20
F0.049923181533813477
sS'blocks.thisN'
p1529
I4
sS'blocks.thisTrialN'
p1530
I4
sa(dp1531
g1156
g1157
sg1158
I2
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1532
I1
sg24
V1
sS'blocks.thisIndex'
p1533
g1162
sS'trials.thisRepN'
p1534
I6
sg26
V
sS'trials.thisN'
p1535
I41
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1536
I5
sS'blocks.thisRepN'
p1537
I0
sg17
F0.08382415771484375
sg1167
g1168
sg20
F0.051454782485961914
sS'blocks.thisN'
p1538
I4
sS'blocks.thisTrialN'
p1539
I4
sa(dp1540
g1156
g1157
sg1158
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1541
I2
sg24
V1
sS'blocks.thisIndex'
p1542
g1162
sS'trials.thisRepN'
p1543
I7
sg26
V
sS'trials.thisN'
p1544
I42
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1545
I0
sS'blocks.thisRepN'
p1546
I0
sg17
F0.083959102630615234
sg1167
g1168
sg20
F0.017490863800048828
sS'blocks.thisN'
p1547
I4
sS'blocks.thisTrialN'
p1548
I4
sa(dp1549
g1156
g1157
sg1158
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1550
I0
sg24
V1
sS'blocks.thisIndex'
p1551
g1162
sS'trials.thisRepN'
p1552
I7
sg26
V
sS'trials.thisN'
p1553
I43
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1554
I1
sS'blocks.thisRepN'
p1555
I0
sg17
F0.61991405487060547
sg1167
g1168
sg20
F0.10104990005493164
sS'blocks.thisN'
p1556
I4
sS'blocks.thisTrialN'
p1557
I4
sa(dp1558
g1156
g1157
sg1158
I3
sg18
S'i'
sg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1559
I2
sg24
V1
sS'blocks.thisIndex'
p1560
g1162
sS'trials.thisRepN'
p1561
I7
sg26
V
sS'trials.thisN'
p1562
I44
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1563
I2
sS'blocks.thisRepN'
p1564
I0
sg17
F0.085402011871337891
sg1167
g1168
sg20
F0.085134029388427734
sS'blocks.thisN'
p1565
I4
sS'blocks.thisTrialN'
p1566
I4
sa(dp1567
g1156
g1157
sg1158
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1568
I0
sg24
V1
sS'blocks.thisIndex'
p1569
g1162
sS'trials.thisRepN'
p1570
I7
sg26
V
sS'trials.thisN'
p1571
I45
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1572
I3
sS'blocks.thisRepN'
p1573
I0
sg17
F0.1172029972076416
sg1167
g1168
sg20
F0.084844827651977539
sS'blocks.thisN'
p1574
I4
sS'blocks.thisTrialN'
p1575
I4
sa(dp1576
g1156
g1157
sg1158
I5
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1577
I4
sg24
V1
sS'blocks.thisIndex'
p1578
g1162
sS'trials.thisRepN'
p1579
I7
sg26
V
sS'trials.thisN'
p1580
I46
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1581
I4
sS'blocks.thisRepN'
p1582
I0
sg17
F0.068097829818725586
sg1167
g1168
sg20
F0.051730155944824219
sS'blocks.thisN'
p1583
I4
sS'blocks.thisTrialN'
p1584
I4
sa(dp1585
g1156
g1157
sg1158
I6
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1586
I5
sg24
V1
sS'blocks.thisIndex'
p1587
g1162
sS'trials.thisRepN'
p1588
I7
sg26
V
sS'trials.thisN'
p1589
I47
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1590
I5
sS'blocks.thisRepN'
p1591
I0
sg17
F0.084394931793212891
sg1167
g1168
sS'blocks.thisN'
p1592
I4
sS'blocks.thisTrialN'
p1593
I4
sa(dp1594
g1156
g1157
sg1158
I6
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1595
I5
sg24
V1
sS'blocks.thisIndex'
p1596
g1162
sS'trials.thisRepN'
p1597
I8
sg26
V
sS'trials.thisN'
p1598
I48
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1599
I0
sS'blocks.thisRepN'
p1600
I0
sg17
F0.06770014762878418
sg1167
g1168
sS'blocks.thisN'
p1601
I4
sS'blocks.thisTrialN'
p1602
I4
sa(dp1603
g1156
g1157
sg1158
I5
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1604
I4
sg24
V1
sS'blocks.thisIndex'
p1605
g1162
sS'trials.thisRepN'
p1606
I8
sg26
V
sS'trials.thisN'
p1607
I49
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1608
I1
sS'blocks.thisRepN'
p1609
I0
sg17
F0.11862707138061523
sg1167
g1168
sg20
F0.067963123321533203
sS'blocks.thisN'
p1610
I4
sS'blocks.thisTrialN'
p1611
I4
sa(dp1612
g1156
g1157
sg1158
I4
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1613
I3
sg24
V1
sS'blocks.thisIndex'
p1614
g1162
sS'trials.thisRepN'
p1615
I8
sg26
V
sS'trials.thisN'
p1616
I50
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1617
I2
sS'blocks.thisRepN'
p1618
I0
sg17
F0.10126996040344238
sg1167
g1168
sg20
F0.084589958190917969
sS'blocks.thisN'
p1619
I4
sS'blocks.thisTrialN'
p1620
I4
sa(dp1621
g1156
g1157
sg1158
I3
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1622
I2
sg24
V1
sS'blocks.thisIndex'
p1623
g1162
sS'trials.thisRepN'
p1624
I8
sg26
V
sS'trials.thisN'
p1625
I51
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1626
I3
sS'blocks.thisRepN'
p1627
I0
sg17
F0.067669868469238281
sg1167
g1168
sS'blocks.thisN'
p1628
I4
sS'blocks.thisTrialN'
p1629
I4
sa(dp1630
g1156
g1157
sg1158
I5
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1631
I4
sg24
V1
sS'blocks.thisIndex'
p1632
g1162
sS'trials.thisRepN'
p1633
I8
sg26
V
sS'trials.thisN'
p1634
I52
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1635
I4
sS'blocks.thisRepN'
p1636
I0
sg17
F0.11758518218994141
sg1167
g1168
sg20
F0.067261934280395508
sS'blocks.thisN'
p1637
I4
sS'blocks.thisTrialN'
p1638
I4
sa(dp1639
g1156
g1157
sg1158
I4
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1640
I3
sg24
V1
sS'blocks.thisIndex'
p1641
g1162
sS'trials.thisRepN'
p1642
I8
sg26
V
sS'trials.thisN'
p1643
I53
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1644
I5
sS'blocks.thisRepN'
p1645
I0
sg17
F0.083717107772827148
sg1167
g1168
sg20
F0.083153009414672852
sS'blocks.thisN'
p1646
I4
sS'blocks.thisTrialN'
p1647
I4
sa(dp1648
g1156
g1157
sg1158
I5
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1649
I4
sg24
V1
sS'blocks.thisIndex'
p1650
g1162
sS'trials.thisRepN'
p1651
I9
sg26
V
sS'trials.thisN'
p1652
I54
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1653
I0
sS'blocks.thisRepN'
p1654
I0
sg17
F0.10152006149291992
sg1167
g1168
sg20
F0.083864927291870117
sS'blocks.thisN'
p1655
I4
sS'blocks.thisTrialN'
p1656
I4
sa(dp1657
g1156
g1157
sg1158
I1
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1658
I0
sg24
V1
sS'blocks.thisIndex'
p1659
g1162
sS'trials.thisRepN'
p1660
I9
sg26
V
sS'trials.thisN'
p1661
I55
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1662
I1
sS'blocks.thisRepN'
p1663
I0
sg17
F0.085072040557861328
sg1167
g1168
sg20
F0.067517995834350586
sS'blocks.thisN'
p1664
I4
sS'blocks.thisTrialN'
p1665
I4
sa(dp1666
g1156
g1157
sg1158
I6
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1667
I5
sg24
V1
sS'blocks.thisIndex'
p1668
g1162
sS'trials.thisRepN'
p1669
I9
sg26
V
sS'trials.thisN'
p1670
I56
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1671
I2
sS'blocks.thisRepN'
p1672
I0
sg17
F0.034640073776245117
sg1167
g1168
sS'blocks.thisN'
p1673
I4
sS'blocks.thisTrialN'
p1674
I4
sa(dp1675
g1156
g1157
sg1158
I5
sg18
S'e'
sg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1676
I4
sg24
V1
sS'blocks.thisIndex'
p1677
g1162
sS'trials.thisRepN'
p1678
I9
sg26
V
sS'trials.thisN'
p1679
I57
sg19
I1
sg32
g12
sS'trials.thisTrialN'
p1680
I3
sS'blocks.thisRepN'
p1681
I0
sg17
F0.18394207954406738
sg1167
g1168
sg20
F0.13350486755371094
sS'blocks.thisN'
p1682
I4
sS'blocks.thisTrialN'
p1683
I4
sa(dp1684
g1156
g1157
sg1158
I2
sg18
Nsg27
g31
sg15
S'e'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1685
I1
sg24
V1
sS'blocks.thisIndex'
p1686
g1162
sS'trials.thisRepN'
p1687
I9
sg26
V
sS'trials.thisN'
p1688
I58
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1689
I4
sS'blocks.thisRepN'
p1690
I0
sg17
F0.066524028778076172
sg1167
g1168
sS'blocks.thisN'
p1691
I4
sS'blocks.thisTrialN'
p1692
I4
sa(dp1693
g1156
g1157
sg1158
I1
sg18
Nsg27
g31
sg15
S'i'
sg16
I1
sg25
V
sg33
g34
sg43
g1159
sS'trials.thisIndex'
p1694
I0
sg24
V1
sS'blocks.thisIndex'
p1695
g1162
sS'trials.thisRepN'
p1696
I9
sg26
V
sS'trials.thisN'
p1697
I59
sg19
I0
sg32
g12
sS'trials.thisTrialN'
p1698
I5
sS'blocks.thisRepN'
p1699
I0
sg17
F0.10100412368774414
sg1167
g1168
sS'blocks.thisN'
p1700
I4
sS'blocks.thisTrialN'
p1701
I4
sasS'loops'
p1702
(lp1703
g1
(cpsychopy.data
TrialHandler
p1704
g3
NtRp1705
(dp1706
S'origin'
p1707
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="RRT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    stimulus = trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    stimulus = trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    stimulus = trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    stimulus = trial_type_4_trials.pop()&#10;elif trial_type == 5:&#10;    stimulus = trial_type_5_trials.pop()&#10;elif trial_type == 6:&#10;    stimulus = trial_type_6_trials.pop()&#10;&#10;# stimulus colors &#10;if trial_type == 1 or trial_type == 2:&#10;     stimulus_color = &quot;orange&quot; &#10;elif trial_type &gt;2:&#10;     stimulus_color = &quot;cyan&quot;&#10;&#10;# correct and incorrect answers for each trialtype in each block&#10;if trial_type == 1: #true&#10;    required_allowed = &quot;i&quot;&#10;    required_correct = &quot;i&quot;&#10;    feedback_allowed = &quot;e&quot;&#10;    feedback_correct = &quot;e&quot;&#10;elif trial_type == 2: #false&#10;    required_allowed = &quot;e&quot;&#10;    required_correct = &quot;e&quot;&#10;    feedback_allowed = &quot;i&quot;&#10;    feedback_correct = &quot;i&quot;&#10;if blocks.thisN &lt;= 2:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;elif blocks.thisN &gt;= 3:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedback_response.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="required_response">\u000a        <Param name="correctAns" val="$required_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response">\u000a        <Param name="correctAns" val="$feedback_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="stimulus_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulus_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="true_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="true_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$true_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="false_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="false_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$false_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Determine block repeats and which trial rows are used in each block&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;&#10;# Generate list of stimuli for the block&#10;trial_type_1_trials = generate_trials('trial_type_1_exemplars', 2)&#10;trial_type_2_trials = generate_trials('trial_type_2_exemplars', 2)&#10;trial_type_3_trials = generate_trials('trial_type_3_exemplars', 2)&#10;trial_type_4_trials = generate_trials('trial_type_4_exemplars', 2)&#10;trial_type_5_trials = generate_trials('trial_type_5_exemplars', 2)&#10;trial_type_6_trials = generate_trials('trial_type_6_exemplars', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructions_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructions_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructions_key">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructions_key" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="2" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trial_type': 1, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 2, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 3, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 4, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 5, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 6, u'true_label': u'TRUE', u'false_label': u'FALSE'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1708
sS'thisTrial'
p1709
(lp1710
sS'_exp'
p1711
I213689488
sg11
S'blocks'
p1712
sg6
g7
sS'thisRepN'
p1713
I1
sg21
I01
sg22
g23
sS'data'
p1714
g1
(cpsychopy.data
DataHandler
p1715
c__builtin__
dict
p1716
(dp1717
S'ran'
p1718
cnumpy.ma.core
_mareconstruct
p1719
(cnumpy.ma.core
MaskedArray
p1720
cnumpy
ndarray
p1721
(I0
tp1722
S'b'
tRp1723
(I1
(I5
I1
tg29
(S'f4'
I0
I1
tRp1724
(I3
S'<'
NNNI-1
I-1
I0
tbI00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00'
NtbsS'order'
p1725
g1719
(g1720
g1721
g1722
S'b'
tRp1726
(I1
(I5
I1
tg1724
I00
S'\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\x80@'
S'\x00\x00\x00\x00\x00'
NtbstRp1727
(dp1728
S'isNumeric'
p1729
(dp1730
g1718
I01
sg1725
I01
ssS'trials'
p1731
g1705
sS'dataTypes'
p1732
(lp1733
g1718
ag1725
asS'dataShape'
p1734
(lp1735
I5
aI1
asbsS'method'
p1736
S'sequential'
p1737
sS'sequenceIndices'
p1738
cnumpy.core.multiarray
_reconstruct
p1739
(g1721
(I0
tS'b'
tRp1740
(I1
(I5
I1
tg54
I00
S'\x00\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00'
tbsS'finished'
p1741
I01
sS'nReps'
p1742
I1
sS'nRemaining'
p1743
I-1
sS'trialList'
p1744
(lp1745
g1
(cpsychopy.data
TrialType
p1746
g1716
(dp1747
g43
g51
stRp1748
ag1
(g1746
g1716
(dp1749
g43
g238
stRp1750
ag1
(g1746
g1716
(dp1751
g43
g425
stRp1752
ag1
(g1746
g1716
(dp1753
g43
g972
stRp1754
ag1
(g1746
g1716
(dp1755
g43
g1159
stRp1756
asS'seed'
p1757
NsS'thisIndex'
p1758
g1162
sS'thisN'
p1759
I5
sS'thisTrialN'
p1760
I0
sS'nTotal'
p1761
I5
sS'_warnUseOfNext'
p1762
I01
sbag1
(g1704
g3
NtRp1763
(dp1764
g1707
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="RRT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    stimulus = trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    stimulus = trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    stimulus = trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    stimulus = trial_type_4_trials.pop()&#10;elif trial_type == 5:&#10;    stimulus = trial_type_5_trials.pop()&#10;elif trial_type == 6:&#10;    stimulus = trial_type_6_trials.pop()&#10;&#10;# stimulus colors &#10;if trial_type == 1 or trial_type == 2:&#10;     stimulus_color = &quot;orange&quot; &#10;elif trial_type &gt;2:&#10;     stimulus_color = &quot;cyan&quot;&#10;&#10;# correct and incorrect answers for each trialtype in each block&#10;if trial_type == 1: #true&#10;    required_allowed = &quot;i&quot;&#10;    required_correct = &quot;i&quot;&#10;    feedback_allowed = &quot;e&quot;&#10;    feedback_correct = &quot;e&quot;&#10;elif trial_type == 2: #false&#10;    required_allowed = &quot;e&quot;&#10;    required_correct = &quot;e&quot;&#10;    feedback_allowed = &quot;i&quot;&#10;    feedback_correct = &quot;i&quot;&#10;if blocks.thisN &lt;= 2:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;elif blocks.thisN &gt;= 3:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedback_response.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="required_response">\u000a        <Param name="correctAns" val="$required_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response">\u000a        <Param name="correctAns" val="$feedback_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="stimulus_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulus_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="true_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="true_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$true_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="false_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="false_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$false_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Determine block repeats and which trial rows are used in each block&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;&#10;# Generate list of stimuli for the block&#10;trial_type_1_trials = generate_trials('trial_type_1_exemplars', 2)&#10;trial_type_2_trials = generate_trials('trial_type_2_exemplars', 2)&#10;trial_type_3_trials = generate_trials('trial_type_3_exemplars', 2)&#10;trial_type_4_trials = generate_trials('trial_type_4_exemplars', 2)&#10;trial_type_5_trials = generate_trials('trial_type_5_exemplars', 2)&#10;trial_type_6_trials = generate_trials('trial_type_6_exemplars', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructions_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructions_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructions_key">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructions_key" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="2" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trial_type': 1, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 2, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 3, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 4, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 5, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 6, u'true_label': u'TRUE', u'false_label': u'FALSE'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1765
sg1709
(lp1766
sg1711
I213689488
sg11
g1731
sg6
g7
sg1713
I10
sg21
I01
sg22
g23
sg1714
g1
(g1715
g1716
(dp1767
g1718
g1719
(g1720
g1721
g1722
S'b'
tRp1768
(I1
(I2
I10
tg1724
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g1719
(g1720
g1721
g1722
S'b'
tRp1769
(I1
(I2
I10
tg1724
I00
S'\xa0D\x92>\x80\xed\x80>\x18\xa4\x92>@\xaa\x9a>\xb8\xa9\x9a>p\xa1\xab>Puq>x\xb7\x92>p\xdc\x9a>@\xaa\x80>\x18\x06l?@\xab\x9c>@\xfa\xd5>0\x02\xa3>\xc0\xf5\x80>\xf8\xd1\x80>pX\xa3>\xe0C\x81>\xc01\x92>\xc0\x94\x81>'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1739
(g1721
(I0
tS'b'
tRp1770
(I1
(I2
I10
tg29
(S'O4'
I0
I1
tRp1771
(I3
S'|'
NNNI-1
I-1
I63
tbI00
(lp1772
S'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
atbsg16
g1719
(g1720
g1721
g1722
S'b'
tRp1773
(I1
(I2
I10
tg1724
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1719
(g1720
g1721
g1722
S'b'
tRp1774
(I1
(I2
I10
tg1724
I00
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1739
(g1721
(I0
tS'b'
tRp1775
(I1
(I2
I10
tg1771
I00
(lp1776
NaNaS'e'
aNaNaS'e'
aS'e'
aS'e'
aNaNaS'i'
aS'i'
aS'i'
aS'i'
aNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
atbsg20
g1719
(g1720
g1721
g1722
S'b'
tRp1777
(I1
(I2
I10
tg1724
I00
S"\x00\x00\x00\x00\x00\x00\x00\x00\xf0x\x92>\x00\x00\x00\x00\x00\x00\x00\x00Xa\xab>0'q> \x9d\x92>\x00\x00\x00\x00\x00\x00\x00\x00P\xb3\xf8> \x85\x9c>\x90V\xcd>p5\x92>\x00\x00\x00\x00\xe0\xc1\x80>8\x10\x9a>\xb0\xe6p>\x10]\x89>\xd0m\x81>"
S'\x01\x01\x00\x01\x01\x00\x00\x00\x01\x01\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00'
Ntbsg1725
g1719
(g1720
g1721
g1722
S'b'
tRp1778
(I1
(I2
I10
tg1724
I00
S'\x00\x00\x80?\x00\x00\x00@\x00\x00@@\x00\x00\xe0@\x00\x00\x00A\x00\x00\x10A\x00\x00 A\x00\x00`A\x00\x00pA\x00\x00\x80A\x00\x00\x00\x00\x00\x00\x80@\x00\x00\xa0@\x00\x00\xc0@\x00\x000A\x00\x00@A\x00\x00PA\x00\x00\x88A\x00\x00\x90A\x00\x00\x98A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp1779
(dp1780
g1729
(dp1781
g1718
I01
sg17
I01
sg15
I00
sg16
I01
sg19
I01
sg18
I00
sg20
I01
sg1725
I01
ssg1731
g1763
sg1732
(lp1782
g1718
ag1725
ag15
ag16
ag17
ag18
ag19
ag20
asg1734
(lp1783
I2
aI10
asbsg1736
S'fullRandom'
p1784
sg1738
g1739
(g1721
(I0
tS'b'
tRp1785
(I1
(I2
I10
tg1771
I00
(lp1786
I1
aI0
aI1
aI1
aI0
aI0
aI1
aI0
aI0
aI1
aI0
aI0
aI1
aI0
aI0
aI1
aI1
aI0
aI1
aI1
atbsg1741
I01
sg1742
I10
sg1743
I-1
sg1744
(lp1787
g1
(g1746
g1716
(dp1788
g44
I1
sg45
g50
sg46
g60
stRp1789
ag1
(g1746
g1716
(dp1790
g44
I2
sg45
g50
sg46
g60
stRp1791
asg1757
Nsg1758
I1
sg1759
I20
sg1760
I0
sg1761
I20
sg1762
I01
sbag1
(g1704
g3
NtRp1792
(dp1793
g1707
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="RRT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    stimulus = trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    stimulus = trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    stimulus = trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    stimulus = trial_type_4_trials.pop()&#10;elif trial_type == 5:&#10;    stimulus = trial_type_5_trials.pop()&#10;elif trial_type == 6:&#10;    stimulus = trial_type_6_trials.pop()&#10;&#10;# stimulus colors &#10;if trial_type == 1 or trial_type == 2:&#10;     stimulus_color = &quot;orange&quot; &#10;elif trial_type &gt;2:&#10;     stimulus_color = &quot;cyan&quot;&#10;&#10;# correct and incorrect answers for each trialtype in each block&#10;if trial_type == 1: #true&#10;    required_allowed = &quot;i&quot;&#10;    required_correct = &quot;i&quot;&#10;    feedback_allowed = &quot;e&quot;&#10;    feedback_correct = &quot;e&quot;&#10;elif trial_type == 2: #false&#10;    required_allowed = &quot;e&quot;&#10;    required_correct = &quot;e&quot;&#10;    feedback_allowed = &quot;i&quot;&#10;    feedback_correct = &quot;i&quot;&#10;if blocks.thisN &lt;= 2:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;elif blocks.thisN &gt;= 3:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedback_response.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="required_response">\u000a        <Param name="correctAns" val="$required_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response">\u000a        <Param name="correctAns" val="$feedback_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="stimulus_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulus_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="true_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="true_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$true_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="false_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="false_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$false_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Determine block repeats and which trial rows are used in each block&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;&#10;# Generate list of stimuli for the block&#10;trial_type_1_trials = generate_trials('trial_type_1_exemplars', 2)&#10;trial_type_2_trials = generate_trials('trial_type_2_exemplars', 2)&#10;trial_type_3_trials = generate_trials('trial_type_3_exemplars', 2)&#10;trial_type_4_trials = generate_trials('trial_type_4_exemplars', 2)&#10;trial_type_5_trials = generate_trials('trial_type_5_exemplars', 2)&#10;trial_type_6_trials = generate_trials('trial_type_6_exemplars', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructions_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructions_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructions_key">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructions_key" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="2" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trial_type': 1, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 2, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 3, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 4, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 5, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 6, u'true_label': u'TRUE', u'false_label': u'FALSE'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1794
sg1709
(lp1795
sg1711
I213689488
sg11
g1731
sg6
g7
sg1713
I5
sg21
I01
sg22
g23
sg1714
g1
(g1715
g1716
(dp1796
g1718
g1719
(g1720
g1721
g1722
S'b'
tRp1797
(I1
(I4
I5
tg1724
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g1719
(g1720
g1721
g1722
S'b'
tRp1798
(I1
(I4
I5
tg1724
I00
S'P\xc8^> ]\x1c>\x10\xf5M>\xe0_=>0\xa4\n>\xc0x\xad=\xa0\x14\x1b> \xdc\xf2=\x10\x98\t>\x80\xd0\xef=HJ\x8a>E\x9b\x8bC\x00\xc2,>\x80^\n>\xd0\xae\t>\x90\xe1\x1a>`\x10,>\x90E,> \x9c\x1a>p\xd6\t>'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1739
(g1721
(I0
tS'b'
tRp1799
(I1
(I4
I5
tg1771
I00
(lp1800
S'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
atbsg16
g1719
(g1720
g1721
g1722
S'b'
tRp1801
(I1
(I4
I5
tg1724
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1719
(g1720
g1721
g1722
S'b'
tRp1802
(I1
(I4
I5
tg1724
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1739
(g1721
(I0
tS'b'
tRp1803
(I1
(I4
I5
tg1771
I00
(lp1804
S'e'
aS'e'
aS'e'
aS'e'
aS'e'
aNaNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aNaNatbsg20
g1719
(g1720
g1721
g1722
S'b'
tRp1805
(I1
(I4
I5
tg1724
I00
S'\xf0\x93<>`\x16\x1c>\xf0k=>p\x8b+>\x00\x7f\n>\x00\x00\x00\x00\x00\x00\x00\x00\xa0\x8f\xf2=\x10n\t>\x80\xc0\xaa=0-\x8a>\x8a\x81\x8bC\x10\x9c,>P5\n>\x10\x83\t>Pv\x1a>\xf0\xb6+>\xa0\x19\x1b>\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01'
Ntbsg1725
g1719
(g1720
g1721
g1722
S'b'
tRp1806
(I1
(I4
I5
tg1724
I00
S'\x00\x00\x80?\x00\x00@@\x00\x00\xc0@\x00\x00\x10A\x00\x00 A\x00\x00\xe0@\x00\x00\x00A\x00\x00\x80A\x00\x00\x88A\x00\x00\x98A\x00\x00\x00\x00\x00\x00\xa0@\x00\x000A\x00\x00`A\x00\x00pA\x00\x00\x00@\x00\x00\x80@\x00\x00@A\x00\x00PA\x00\x00\x90A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp1807
(dp1808
g1729
(dp1809
g1718
I01
sg17
I01
sg15
I00
sg16
I01
sg19
I01
sg18
I00
sg20
I01
sg1725
I01
ssg1731
g1792
sg1732
(lp1810
g1718
ag1725
ag15
ag16
ag17
ag18
ag19
ag20
asg1734
(lp1811
I4
aI5
asbsg1736
g1784
sg1738
g1739
(g1721
(I0
tS'b'
tRp1812
(I1
(I4
I5
tg1771
I00
(lp1813
I2
aI3
aI1
aI3
aI1
aI0
aI2
aI0
aI3
aI1
aI3
aI0
aI0
aI2
aI3
aI0
aI1
aI2
aI2
aI1
atbsg1741
I01
sg1742
I5
sg1743
I-1
sg1744
(lp1814
g1
(g1746
g1716
(dp1815
g237
I3
sg235
g236
sg246
g247
stRp1816
ag1
(g1746
g1716
(dp1817
g237
I4
sg235
g236
sg246
g247
stRp1818
ag1
(g1746
g1716
(dp1819
g237
I5
sg235
g236
sg246
g247
stRp1820
ag1
(g1746
g1716
(dp1821
g237
I6
sg235
g236
sg246
g247
stRp1822
asg1757
Nsg1758
I1
sg1759
I20
sg1760
I0
sg1761
I20
sg1762
I01
sbag1
(g1704
g3
NtRp1823
(dp1824
g1707
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="RRT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    stimulus = trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    stimulus = trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    stimulus = trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    stimulus = trial_type_4_trials.pop()&#10;elif trial_type == 5:&#10;    stimulus = trial_type_5_trials.pop()&#10;elif trial_type == 6:&#10;    stimulus = trial_type_6_trials.pop()&#10;&#10;# stimulus colors &#10;if trial_type == 1 or trial_type == 2:&#10;     stimulus_color = &quot;orange&quot; &#10;elif trial_type &gt;2:&#10;     stimulus_color = &quot;cyan&quot;&#10;&#10;# correct and incorrect answers for each trialtype in each block&#10;if trial_type == 1: #true&#10;    required_allowed = &quot;i&quot;&#10;    required_correct = &quot;i&quot;&#10;    feedback_allowed = &quot;e&quot;&#10;    feedback_correct = &quot;e&quot;&#10;elif trial_type == 2: #false&#10;    required_allowed = &quot;e&quot;&#10;    required_correct = &quot;e&quot;&#10;    feedback_allowed = &quot;i&quot;&#10;    feedback_correct = &quot;i&quot;&#10;if blocks.thisN &lt;= 2:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;elif blocks.thisN &gt;= 3:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedback_response.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="required_response">\u000a        <Param name="correctAns" val="$required_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response">\u000a        <Param name="correctAns" val="$feedback_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="stimulus_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulus_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="true_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="true_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$true_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="false_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="false_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$false_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Determine block repeats and which trial rows are used in each block&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;&#10;# Generate list of stimuli for the block&#10;trial_type_1_trials = generate_trials('trial_type_1_exemplars', 2)&#10;trial_type_2_trials = generate_trials('trial_type_2_exemplars', 2)&#10;trial_type_3_trials = generate_trials('trial_type_3_exemplars', 2)&#10;trial_type_4_trials = generate_trials('trial_type_4_exemplars', 2)&#10;trial_type_5_trials = generate_trials('trial_type_5_exemplars', 2)&#10;trial_type_6_trials = generate_trials('trial_type_6_exemplars', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructions_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructions_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructions_key">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructions_key" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="2" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trial_type': 1, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 2, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 3, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 4, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 5, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 6, u'true_label': u'TRUE', u'false_label': u'FALSE'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1825
sg1709
(lp1826
sg1711
I213689488
sg11
g1731
sg6
g7
sg1713
I10
sg21
I01
sg22
g23
sg1714
g1
(g1715
g1716
(dp1827
g1718
g1719
(g1720
g1721
g1722
S'b'
tRp1828
(I1
(I6
I10
tg1724
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g1719
(g1720
g1721
g1722
S'b'
tRp1829
(I1
(I6
I10
tg1724
I00
S'\xc0\xbb\xf5=\xa0t\xf0=\x80b\x0f=\x00\x06\x8f< \x98\xce=`\xf1\x89=\x80\n\xab=@\x95S=`\\\xf5=\xe0\x13\x8b=\xc0\xfe\x0f=\x00 \t>\xc0uT=\xf8;\xbd>\xe0&,>\xc0\xdc\xf2=\xd0\x01r> u\x89=\x00\xfc\x04=\x00\x87\x8c=`\xf5+> i\xac=\xc0CO>\xc0\xc9\xaf=`\x9f\xce= .\xae=\x00\xc1\r=\x0ca\t?\xc0\xab\xcd>@\xa4\xf1=\xc0W\n=\x80F\x85<\x80\xd4\t=@\\U=\xc0\x92\x8b=\x00*\x8f<\xe0\x16\xcf=\x00,N=@S\x8b=\x00dS=\xc0\xe5\x8a=\x80*R=\x10E\x1c>@p\xce=\x00{\x8c= \xd7\x8a=\xa0Q\xac=\xa0\xe6\x8b=\xe0\x1e\xab=\xc0\xd1>>\x80\x03\xb0=@vO=@\xf4\xcf=\x08V\xce>\xc0\xda\xae=\x80rS=\xc0\xb5S=\x80\x83\x0b=\xe0Y\t>\xa0I\xd0='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1739
(g1721
(I0
tS'b'
tRp1830
(I1
(I6
I10
tg1771
I00
(lp1831
S'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
atbsg16
g1719
(g1720
g1721
g1722
S'b'
tRp1832
(I1
(I6
I10
tg1724
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1719
(g1720
g1721
g1722
S'b'
tRp1833
(I1
(I6
I10
tg1724
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1739
(g1721
(I0
tS'b'
tRp1834
(I1
(I6
I10
tg1771
I00
(lp1835
S'e'
aS'e'
aNaNaS'e'
aNaS'e'
aS'e'
aS'e'
aNaNaS'i'
aNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aNaS'i'
aNaS'e'
aS'e'
aS'e'
aNaNaNaS'e'
aS'e'
aS'e'
aNaNaNaNaS'i'
aNaS'i'
aS'i'
aS'i'
aNaNaNaS'i'
aNaS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aNaS'e'
aNaNaS'e'
aNaS'e'
aS'e'
atbsg20
g1719
(g1720
g1721
g1722
S'b'
tRp1836
(I1
(I6
I10
tg1724
I00
S'\xa0\xc0\xf4=\xe0\xe8\xce=\x00\x00\x00\x00\x00\x00\x00\x00\xc0\xc3\xcd=\x00\x00\x00\x00 \xcb\xa9=\x00\x9c\x96<\xc0\xd9\xf4=\x00\x00\x00\x00\x00\x00\x00\x00\xc0K\xf3=\x00\x00\x00\x00@\x94\x04=\x80\xd9\xf2=\x80\xd9\x0c=@F`>\x80d\x88=\x00\x00\x00\x00 Z\x8b=\x00\x00\x00\x00\xe0\xe9\x87=\xe0\xefN>`v\xaf=\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\xff\xae=\x00\x91\x8a<@,\xcd=\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00`\xc9\x8a=\x00\x00\x00\x00\x00OS=\x80\xac\x8a<\xa0\xa2\x8a=\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00~N=\x00\x00\x00\x00\xa0\xe2\x8a=\x80>\x8a=\x00XV=`\xa8\x8a=@\xc7N=\xd0\xb8>>@j\xaf=\x00R\x06=\x00\x00\x00\x00 \xd3\xd0=\x00\x00\x00\x00\x00\x00\x00\x00\xc0\x1eS=\x00\x00\x00\x00\xd0\x01\t> 5\xad='
S'\x00\x00\x01\x01\x00\x01\x00\x00\x00\x01\x01\x00\x01\x00\x00\x00\x00\x00\x01\x00\x01\x00\x00\x00\x01\x01\x01\x00\x00\x00\x01\x01\x01\x01\x00\x01\x00\x00\x00\x01\x01\x01\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x01\x01\x00\x01\x00\x00'
Ntbsg1725
g1719
(g1720
g1721
g1722
S'b'
tRp1837
(I1
(I6
I10
tg1724
I00
S'\x00\x00\x80?\x00\x00@@\x00\x00\x80A\x00\x00\x90A\x00\x00\xd8A\x00\x00\x0cB\x00\x00,B\x00\x008B\x00\x00`B\x00\x00lB\x00\x00\x00A\x00\x00 A\x00\x00@A\x00\x00`A\x00\x00\x88A\x00\x00\xa0A\x00\x00\xc8A\x00\x00\xe0A\x00\x00\x04B\x00\x00\x10B\x00\x00\x00\x00\x00\x00\xa0@\x00\x00\xb0A\x00\x00\xc0A\x00\x00\xf0A\x00\x00\x18B\x00\x00(B\x00\x00DB\x00\x00PB\x00\x00dB\x00\x00\x00@\x00\x00\xc0@\x00\x000A\x00\x00\xe8A\x00\x00\x00B\x00\x00\x14B\x00\x00<B\x00\x00@B\x00\x00HB\x00\x00hB\x00\x00\xe0@\x00\x00\x10A\x00\x00\x98A\x00\x00\xb8A\x00\x00\xf8A\x00\x00\x1cB\x00\x00$B\x00\x000B\x00\x00LB\x00\x00TB\x00\x00\x80@\x00\x00PA\x00\x00pA\x00\x00\xa8A\x00\x00\xd0A\x00\x00\x08B\x00\x00 B\x00\x004B\x00\x00XB\x00\x00\\B'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp1838
(dp1839
g1729
(dp1840
g1718
I01
sg17
I01
sg15
I00
sg16
I01
sg19
I01
sg18
I00
sg20
I01
sg1725
I01
ssg1731
g1823
sg1732
(lp1841
g1718
ag1725
ag15
ag16
ag17
ag18
ag19
ag20
asg1734
(lp1842
I6
aI10
asbsg1736
g1784
sg1738
g1739
(g1721
(I0
tS'b'
tRp1843
(I1
(I6
I10
tg1771
I00
(lp1844
I2
aI3
aI1
aI0
aI2
aI2
aI1
aI2
aI3
aI5
aI0
aI4
aI5
aI4
aI1
aI4
aI3
aI0
aI2
aI5
aI3
aI1
aI1
aI1
aI5
aI3
aI2
aI4
aI3
aI0
aI0
aI4
aI5
aI5
aI0
aI1
aI4
aI5
aI4
aI2
aI5
aI1
aI0
aI2
aI1
aI5
aI5
aI0
aI2
aI3
aI2
aI3
aI1
aI4
aI3
aI0
aI4
aI3
aI4
aI0
atbsg1741
I01
sg1742
I10
sg1743
I-1
sg1744
(lp1845
g1
(g1746
g1716
(dp1846
g424
I1
sg422
g423
sg433
g434
stRp1847
ag1
(g1746
g1716
(dp1848
g424
I2
sg422
g423
sg433
g434
stRp1849
ag1
(g1746
g1716
(dp1850
g424
I3
sg422
g423
sg433
g434
stRp1851
ag1
(g1746
g1716
(dp1852
g424
I4
sg422
g423
sg433
g434
stRp1853
ag1
(g1746
g1716
(dp1854
g424
I5
sg422
g423
sg433
g434
stRp1855
ag1
(g1746
g1716
(dp1856
g424
I6
sg422
g423
sg433
g434
stRp1857
asg1757
Nsg1758
I0
sg1759
I60
sg1760
I0
sg1761
I60
sg1762
I01
sbag1
(g1704
g3
NtRp1858
(dp1859
g1707
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="RRT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    stimulus = trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    stimulus = trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    stimulus = trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    stimulus = trial_type_4_trials.pop()&#10;elif trial_type == 5:&#10;    stimulus = trial_type_5_trials.pop()&#10;elif trial_type == 6:&#10;    stimulus = trial_type_6_trials.pop()&#10;&#10;# stimulus colors &#10;if trial_type == 1 or trial_type == 2:&#10;     stimulus_color = &quot;orange&quot; &#10;elif trial_type &gt;2:&#10;     stimulus_color = &quot;cyan&quot;&#10;&#10;# correct and incorrect answers for each trialtype in each block&#10;if trial_type == 1: #true&#10;    required_allowed = &quot;i&quot;&#10;    required_correct = &quot;i&quot;&#10;    feedback_allowed = &quot;e&quot;&#10;    feedback_correct = &quot;e&quot;&#10;elif trial_type == 2: #false&#10;    required_allowed = &quot;e&quot;&#10;    required_correct = &quot;e&quot;&#10;    feedback_allowed = &quot;i&quot;&#10;    feedback_correct = &quot;i&quot;&#10;if blocks.thisN &lt;= 2:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;elif blocks.thisN &gt;= 3:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedback_response.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="required_response">\u000a        <Param name="correctAns" val="$required_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response">\u000a        <Param name="correctAns" val="$feedback_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="stimulus_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulus_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="true_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="true_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$true_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="false_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="false_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$false_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Determine block repeats and which trial rows are used in each block&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;&#10;# Generate list of stimuli for the block&#10;trial_type_1_trials = generate_trials('trial_type_1_exemplars', 2)&#10;trial_type_2_trials = generate_trials('trial_type_2_exemplars', 2)&#10;trial_type_3_trials = generate_trials('trial_type_3_exemplars', 2)&#10;trial_type_4_trials = generate_trials('trial_type_4_exemplars', 2)&#10;trial_type_5_trials = generate_trials('trial_type_5_exemplars', 2)&#10;trial_type_6_trials = generate_trials('trial_type_6_exemplars', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructions_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructions_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructions_key">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructions_key" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="2" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trial_type': 1, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 2, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 3, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 4, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 5, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 6, u'true_label': u'TRUE', u'false_label': u'FALSE'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1860
sg1709
(lp1861
sg1711
I213689488
sg11
g1731
sg6
g7
sg1713
I5
sg21
I01
sg22
g23
sg1714
g1
(g1715
g1716
(dp1862
g1718
g1719
(g1720
g1721
g1722
S'b'
tRp1863
(I1
(I4
I5
tg1724
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g1719
(g1720
g1721
g1722
S'b'
tRp1864
(I1
(I4
I5
tg1724
I00
S'\x00\xfc\x88=\x80D\r=\xc0\x98Q=\xa0-\xce=@F\x8b=\xe0\x95\x8b=\x00\x99\x0e=\x80:\x10= j\xac=\x80\xa5\xac=\xd0b\x1b>\xc0e\x0e=\x00\xe1Q=\xe0\xcb+>\xe0\x1d\xf2=\xa0\x1f\xad= \xef\x8b=\x80\xc2X=\x80\xcc\xf1=\x80\xe7Q='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1739
(g1721
(I0
tS'b'
tRp1865
(I1
(I4
I5
tg1771
I00
(lp1866
S'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
atbsg16
g1719
(g1720
g1721
g1722
S'b'
tRp1867
(I1
(I4
I5
tg1724
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1719
(g1720
g1721
g1722
S'b'
tRp1868
(I1
(I4
I5
tg1724
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1739
(g1721
(I0
tS'b'
tRp1869
(I1
(I4
I5
tg1771
I00
(lp1870
S'i'
aS'i'
aNaS'i'
aNaS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aNaS'e'
aNaNaS'e'
aS'i'
aNaS'i'
aS'i'
aNatbsg20
g1719
(g1720
g1721
g1722
S'b'
tRp1871
(I1
(I4
I5
tg1724
I00
S'\xc0\xc7R=\xc0\xb3\x0b=\x00\x00\x00\x00\x00\x81\xae=\x00\x00\x00\x00\xa0\xd7\x8a=@\x04\r=\x00\xdb\x89<\xa0\xd5\x89=\x00\xf8\xab=\x00\x00\x00\x00\x00#\x94<\x00\x00\x00\x00\x00\x00\x00\x00\xc0\xfc\xae=\xe0l\xac=\x00\x00\x00\x00\x00\x9bW=\x00Z\xcf=\x00\x00\x00\x00'
S'\x00\x00\x01\x00\x01\x00\x00\x00\x00\x00\x01\x00\x01\x01\x00\x00\x01\x00\x00\x01'
Ntbsg1725
g1719
(g1720
g1721
g1722
S'b'
tRp1872
(I1
(I4
I5
tg1724
I00
S'\x00\x00\x00@\x00\x00@@\x00\x00\xe0@\x00\x00@A\x00\x00\x88A\x00\x00\x80@\x00\x00\xc0@\x00\x00\x00A\x00\x00\x10A\x00\x00PA\x00\x00\x00\x00\x00\x00 A\x00\x00`A\x00\x00pA\x00\x00\x90A\x00\x00\x80?\x00\x00\xa0@\x00\x000A\x00\x00\x80A\x00\x00\x98A'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp1873
(dp1874
g1729
(dp1875
g1718
I01
sg17
I01
sg15
I00
sg16
I01
sg19
I01
sg18
I00
sg20
I01
sg1725
I01
ssg1731
g1858
sg1732
(lp1876
g1718
ag1725
ag15
ag16
ag17
ag18
ag19
ag20
asg1734
(lp1877
I4
aI5
asbsg1736
g1784
sg1738
g1739
(g1721
(I0
tS'b'
tRp1878
(I1
(I4
I5
tg1771
I00
(lp1879
I2
aI1
aI1
aI0
aI3
aI3
aI3
aI1
aI1
aI0
aI0
aI1
aI2
aI2
aI2
aI0
aI0
aI3
aI2
aI3
atbsg1741
I01
sg1742
I5
sg1743
I-1
sg1744
(lp1880
g1
(g1746
g1716
(dp1881
g971
I3
sg969
g970
sg980
g981
stRp1882
ag1
(g1746
g1716
(dp1883
g971
I4
sg969
g970
sg980
g981
stRp1884
ag1
(g1746
g1716
(dp1885
g971
I5
sg969
g970
sg980
g981
stRp1886
ag1
(g1746
g1716
(dp1887
g971
I6
sg969
g970
sg980
g981
stRp1888
asg1757
Nsg1758
I3
sg1759
I20
sg1760
I0
sg1761
I20
sg1762
I01
sbag1
(g1704
g3
NtRp1889
(dp1890
g1707
V<PsychoPy2experiment version="1.82.01" encoding="utf-8">\u000a  <Settings>\u000a    <Param name="Show mouse" val="False" valType="bool" updates="None"/>\u000a    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>\u000a    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>\u000a    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>\u000a    <Param name="color" val="$[-1.000,-1.000,-1.000]" valType="str" updates="None"/>\u000a    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>\u000a    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>\u000a    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>\u000a    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u''}" valType="code" updates="None"/>\u000a    <Param name="Save csv file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>\u000a    <Param name="expName" val="RRT" valType="str" updates="None"/>\u000a    <Param name="logging level" val="warning" valType="code" updates="None"/>\u000a    <Param name="blendMode" val="avg" valType="str" updates="None"/>\u000a    <Param name="Save excel file" val="False" valType="bool" updates="None"/>\u000a    <Param name="Units" val="use prefs" valType="str" updates="None"/>\u000a    <Param name="Save log file" val="True" valType="bool" updates="None"/>\u000a    <Param name="Screen" val="1" valType="num" updates="None"/>\u000a  </Settings>\u000a  <Routines>\u000a    <Routine name="trial">\u000a      <CodeComponent name="trials_code">\u000a        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="trials_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# choose a random exemplar from the appropriate trial type list&#10;if trial_type == 1:&#10;    stimulus = trial_type_1_trials.pop()&#10;elif trial_type == 2:&#10;    stimulus = trial_type_2_trials.pop()&#10;elif trial_type == 3:&#10;    stimulus = trial_type_3_trials.pop()&#10;elif trial_type == 4:&#10;    stimulus = trial_type_4_trials.pop()&#10;elif trial_type == 5:&#10;    stimulus = trial_type_5_trials.pop()&#10;elif trial_type == 6:&#10;    stimulus = trial_type_6_trials.pop()&#10;&#10;# stimulus colors &#10;if trial_type == 1 or trial_type == 2:&#10;     stimulus_color = &quot;orange&quot; &#10;elif trial_type &gt;2:&#10;     stimulus_color = &quot;cyan&quot;&#10;&#10;# correct and incorrect answers for each trialtype in each block&#10;if trial_type == 1: #true&#10;    required_allowed = &quot;i&quot;&#10;    required_correct = &quot;i&quot;&#10;    feedback_allowed = &quot;e&quot;&#10;    feedback_correct = &quot;e&quot;&#10;elif trial_type == 2: #false&#10;    required_allowed = &quot;e&quot;&#10;    required_correct = &quot;e&quot;&#10;    feedback_allowed = &quot;i&quot;&#10;    feedback_correct = &quot;i&quot;&#10;if blocks.thisN &lt;= 2:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;elif blocks.thisN &gt;= 3:&#10;    if trial_type == 3: #self pos&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;&#10;    elif trial_type == 4: #self neg&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 5: #self not pos&#10;        required_allowed = &quot;i&quot;&#10;        required_correct = &quot;i&quot;&#10;        feedback_allowed = &quot;e&quot;&#10;        feedback_correct = &quot;e&quot;&#10;    elif trial_type == 6: #self not neg&#10;        required_allowed = &quot;e&quot;&#10;        required_correct = &quot;e&quot;&#10;        feedback_allowed = &quot;i&quot;&#10;        feedback_correct = &quot;i&quot;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="if len(feedback_response.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <KeyboardComponent name="required_response">\u000a        <Param name="correctAns" val="$required_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="required_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="required_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <KeyboardComponent name="feedback_response">\u000a        <Param name="correctAns" val="$feedback_correct " valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>\u000a        <Param name="name" val="feedback_response" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="feedback_allowed" valType="code" updates="set every repeat"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="store" val="first key" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a      <TextComponent name="stimulus_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="stimulus_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="$stimulus_color" valType="str" updates="set every repeat"/>\u000a        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="feedback">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="feedback" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="red" valType="str" updates="constant"/>\u000a        <Param name="text" val="$msg" valType="str" updates="set every frame"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val=".3" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="true_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="true_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$true_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <TextComponent name="false_text">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="false_text" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$false_label" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.0" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a    <Routine name="instruction">\u000a      <CodeComponent name="block_code">\u000a        <Param name="Begin Experiment" val="# Dependencies&#10;import itertools  # for flattening lists of lists into lists&#10;import random&#10;&#10;# Import stimuli exemplars&#10;exemplars_filename = 'stimuli.xlsx'&#10;exemplars = data.importConditions(exemplars_filename)# Import stimuli exemplars&#10;&#10;# Trial generation function&#10;def generate_trials(trial_type_column, multiplier):&#10;    &quot;&quot;&quot;Generate a shuffled list of stimuli exemplars from a column in an excel stimuli file&quot;&quot;&quot; &#10;    a = dict()  # declare a dict to be populated&#10;    for i in range(len(exemplars)):&#10;        a[i] = [exemplars[i][trial_type_column]] * multiplier  # populate the dict from vertical reads of the conditions&#10;    a = a.values()  # extract only values (and not keys) from the list of dicts&#10;    a = list(itertools.chain(*a))  # flatten the list of dicts into a list&#10;    random.shuffle(a)  # shuffle this list, so that it can be drawn from by the trials&#10;    return a" valType="extendedCode" updates="constant"/>\u000a        <Param name="name" val="block_code" valType="code" updates="None"/>\u000a        <Param name="Begin Routine" val="# Determine block repeats and which trial rows are used in each block&#10;if blocks.thisN == 0:&#10;    trial_rows = &quot;0:2&quot; &#10;    n_block_repeats = 10   #2*10 = 20 trials&#10;elif blocks.thisN == 1:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 2:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;elif blocks.thisN == 3:&#10;    trial_rows = &quot;2:6&quot; &#10;    n_block_repeats = 5   #4*5 = 20 trials&#10;elif blocks.thisN == 4:&#10;    trial_rows = &quot;0:6&quot; &#10;    n_block_repeats = 10   #6*10 = 60 trials&#10;&#10;# Generate list of stimuli for the block&#10;trial_type_1_trials = generate_trials('trial_type_1_exemplars', 2)&#10;trial_type_2_trials = generate_trials('trial_type_2_exemplars', 2)&#10;trial_type_3_trials = generate_trials('trial_type_3_exemplars', 2)&#10;trial_type_4_trials = generate_trials('trial_type_4_exemplars', 2)&#10;trial_type_5_trials = generate_trials('trial_type_5_exemplars', 2)&#10;trial_type_6_trials = generate_trials('trial_type_6_exemplars', 2)&#10;" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>\u000a        <Param name="Each Frame" val="" valType="extendedCode" updates="constant"/>\u000a      </CodeComponent>\u000a      <TextComponent name="instructions_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="instructions_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="$instructions" valType="str" updates="set every repeat"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="1" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.08" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a      <KeyboardComponent name="instructions_key">\u000a        <Param name="correctAns" val="" valType="str" updates="constant"/>\u000a        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>\u000a        <Param name="name" val="instructions_key" valType="code" updates="None"/>\u000a        <Param name="stopVal" val="" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="discard previous" val="True" valType="bool" updates="constant"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="2" valType="code" updates="None"/>\u000a        <Param name="store" val="nothing" valType="str" updates="constant"/>\u000a      </KeyboardComponent>\u000a    </Routine>\u000a    <Routine name="end">\u000a      <TextComponent name="end_box">\u000a        <Param name="opacity" val="1" valType="code" updates="constant"/>\u000a        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>\u000a        <Param name="name" val="end_box" valType="code" updates="None"/>\u000a        <Param name="wrapWidth" val="" valType="code" updates="constant"/>\u000a        <Param name="color" val="white" valType="str" updates="constant"/>\u000a        <Param name="text" val="End of the task" valType="str" updates="constant"/>\u000a        <Param name="stopVal" val="3" valType="code" updates="constant"/>\u000a        <Param name="durationEstim" val="" valType="code" updates="None"/>\u000a        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>\u000a        <Param name="flip" val="" valType="str" updates="constant"/>\u000a        <Param name="startEstim" val="" valType="code" updates="None"/>\u000a        <Param name="units" val="from exp settings" valType="str" updates="None"/>\u000a        <Param name="startType" val="time (s)" valType="str" updates="None"/>\u000a        <Param name="ori" val="0" valType="code" updates="constant"/>\u000a        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>\u000a        <Param name="startVal" val="0.75" valType="code" updates="None"/>\u000a        <Param name="font" val="Arial" valType="str" updates="constant"/>\u000a        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>\u000a      </TextComponent>\u000a    </Routine>\u000a  </Routines>\u000a  <Flow>\u000a    <LoopInitiator loopType="TrialHandler" name="blocks">\u000a      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="blocks" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="False" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="sequential" valType="str" updates="None"/>\u000a      <Param name="nReps" val="1" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'block': 1, u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\u005cn\u005cnIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.'}, {u'block': 2, u'instructions': u&quot;The next phase some propositions will be presented in BLUE.\u005cnThese propositons are always statements about SELF ESTEEM.\u005cn\u005cnYou must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the right response (TRUE).\u005cnWhen the proposition 'I am worthless' appears, respond with the left response (FALSE).\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 3, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\u005cn\u005cnAgain, you must respond AS IF 'I am good and not bad'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cn\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 4, u'instructions': u&quot;IMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\u005cn\u005cnYou must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnFor example:\u005cnWhen the proposition 'I am valuable' appears, respond with the left response (FALSE).\u005cnWhen the proposition 'I am worthless' appears, respond with the right response (TRUE).\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}, {u'block': 5, u'instructions': u&quot;Very good!\u005cn\u005cnThe next phase will again present words in ORANGE and statements in BLUE.\u005cn\u005cnAgain, you must respond AS IF 'I am bad and not good'.\u005cn\u005cnPress the I key when the statement is TRUE according to the above rule.\u005cnPress the E key when the statement is FALSE according to the above rule.\u005cn\u005cnThe rule that you must respond to the orange words does not change:\u005cnPress the I key if the word is synonymous with TRUE.\u005cnPress the E key if the word is a synonym for FALSE.\u005cn\u005cnIf you make a mistake, hit the correct key as soon as possible.\u005cn\u005cnPut your two index fingers on the E and I keys. Press either one to start.&quot;}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="instruction"/>\u000a    <LoopInitiator loopType="TrialHandler" name="trials">\u000a      <Param name="conditionsFile" val="block_layout.xlsx" valType="str" updates="None"/>\u000a      <Param name="name" val="trials" valType="code" updates="None"/>\u000a      <Param name="isTrials" val="True" valType="bool" updates="None"/>\u000a      <Param name="random seed" val="" valType="code" updates="None"/>\u000a      <Param name="loopType" val="fullRandom" valType="str" updates="None"/>\u000a      <Param name="nReps" val="n_block_repeats" valType="code" updates="None"/>\u000a      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>\u000a      <Param name="conditions" val="[{u'trial_type': 1, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 2, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 3, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 4, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 5, u'true_label': u'TRUE', u'false_label': u'FALSE'}, {u'trial_type': 6, u'true_label': u'TRUE', u'false_label': u'FALSE'}]" valType="str" updates="None"/>\u000a      <Param name="Selected rows" val="$trial_rows" valType="str" updates="None"/>\u000a    </LoopInitiator>\u000a    <Routine name="trial"/>\u000a    <LoopTerminator name="trials"/>\u000a    <LoopTerminator name="blocks"/>\u000a    <Routine name="end"/>\u000a  </Flow>\u000a</PsychoPy2experiment>\u000a
p1891
sg1709
(lp1892
sg1711
I213689488
sg11
g1731
sg6
g7
sg1713
I10
sg21
I01
sg22
g23
sg1714
g1
(g1715
g1716
(dp1893
g1718
g1719
(g1720
g1721
g1722
S'b'
tRp1894
(I1
(I6
I10
tg1724
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg17
g1719
(g1720
g1721
g1722
S'b'
tRp1895
(I1
(I6
I10
tg1724
I00
S' \x03\x8e= U\x8a=\xa0\xdf\x89=\xc0f\xab=\xa0\x9c\xab=\x00\xdb\x8c=\xb0\xb2\x1e? \x08\xf0=@:\xae=@\xdb\xce=\xa0\xb4\xf0=\x00RU=\x80\xd2\xd0=@\x01\xad=\xe0n\xad=\x80\x8eO=\x00\x18\x0f=\x80\xe9\x0f=\x00\xac\xab=\xc0=\x88=p)>>@\x06\xf2=\xe0\xfb\xad=\xa0\x85\x8b=\xa0\x08\x8d=@\xb4\t=@\x17S=\xc0\xf2\xab=@\xe7\xae=\x80\x96\x8a=\x80\xd3\x8c=\xa0<\xaf=`\xbd\xce=\x802\x89=\xe0\xa0\xaf=\x80\x98\xf2=\xf0U\t>\xe0R\xab=\xa0f\xcf=\xe0s\xab=@\xcf\xd1= \xa9\xac= \xb9\xae=\xe0C\xad=\x00\xce\xaf=\xe0v\x8b=\xc0\xf2\xf2=\x80\xd0\xf0=\xc0\xe9\xcf=P[<>`\xa2\n>@.\r=\xe0\x8a\x8b=\x80\xf9\xcf=\xa0e\x8c=`7\x89=\xf8\x87\xc5>@\xd7\xac=`\xa6\x8a=\xc0\xe2\r='
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg15
g1739
(g1721
(I0
tS'b'
tRp1896
(I1
(I6
I10
tg1771
I00
(lp1897
S'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'i'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
atbsg16
g1719
(g1720
g1721
g1722
S'b'
tRp1898
(I1
(I6
I10
tg1724
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg19
g1719
(g1720
g1721
g1722
S'b'
tRp1899
(I1
(I6
I10
tg1724
I00
S'\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80?\x00\x00\x80?\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
Ntbsg18
g1739
(g1721
(I0
tS'b'
tRp1900
(I1
(I6
I10
tg1771
I00
(lp1901
S'e'
aS'e'
aNaS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aNaS'i'
aNaS'i'
aNaS'i'
aNaNaNaS'i'
aNaNaS'i'
aS'i'
aNaNaNaNaS'i'
aS'i'
aNaS'e'
aS'e'
aS'e'
aS'e'
aNaNaS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aS'e'
aNaNaNaS'i'
aS'i'
aNaNaNaNaNatbsg20
g1719
(g1720
g1721
g1722
S'b'
tRp1902
(I1
(I6
I10
tg1724
I00
S'\xc0QN=\xe0\xed\x88=\x00\x00\x00\x00\x003Q= \xec\x89=@^\x8c=@\xf3\xce= \xc3\xad=\xe0F\x8a=\x00\x00\x00\x00\x00n\xef=\x00\x00\x00\x00\x00\xaf\xab=\x00\x00\x00\x00\xc0\x95\xac=\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\xc2R=\x00\x00\x00\x00\x00\x00\x00\x00 t\xf0=\xe0\xb2\x8a=\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00I\x8f<\xc0Z\xae=\x00\x00\x00\x00\xa0\xfc\x8b=@\xc7U=\xc0\x95\x89=\xc0"S=\x00\x00\x00\x00\x00\x00\x00\x00\xa0\x8c\xf1=@|L=\x80=\xad= L\xaa=\xc0\x1eS= \xde\x88=\xa0\xb3\x89=`\xdd\x8a=\xc0\x11\xaf=\x00\xe3S=@0\x8b=\xa0\xc0\x89=`\xc1\xab=\x80\xb5\x08>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@^\xcf=\xc0\xd1\x8b=\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
S'\x00\x00\x01\x00\x00\x00\x00\x00\x00\x01\x00\x01\x00\x01\x00\x01\x01\x01\x00\x01\x01\x00\x00\x01\x01\x01\x01\x00\x00\x01\x00\x00\x00\x00\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x01\x01\x00\x00\x01\x01\x01\x01\x01'
Ntbsg1725
g1719
(g1720
g1721
g1722
S'b'
tRp1903
(I1
(I6
I10
tg1724
I00
S'\x00\x00\x10A\x00\x00 A\x00\x00@A\x00\x00\xa0A\x00\x00\xf8A\x00\x00\x00B\x00\x00,B\x00\x004B\x00\x00\\B\x00\x00lB\x00\x00\xc0@\x00\x000A\x00\x00\x98A\x00\x00\xc8A\x00\x00\xd0A\x00\x00\x08B\x00\x00\x10B\x00\x00\x18B\x00\x00$B\x00\x00hB\x00\x00\x80?\x00\x00\x00@\x00\x00PA\x00\x00\x90A\x00\x00\xb0A\x00\x00\xb8A\x00\x00\xe0A\x00\x00(B\x00\x000B\x00\x00LB\x00\x00@@\x00\x00`A\x00\x00\x80A\x00\x00\xa8A\x00\x00\xc0A\x00\x00\xf0A\x00\x00\x14B\x00\x00 B\x00\x00HB\x00\x00TB\x00\x00\x80@\x00\x00\xd8A\x00\x00\x04B\x00\x00\x0cB\x00\x00\x1cB\x00\x008B\x00\x00DB\x00\x00PB\x00\x00XB\x00\x00dB\x00\x00\x00\x00\x00\x00\xa0@\x00\x00\xe0@\x00\x00\x00A\x00\x00pA\x00\x00\x88A\x00\x00\xe8A\x00\x00<B\x00\x00@B\x00\x00`B'
S'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
NtbstRp1904
(dp1905
g1729
(dp1906
g1718
I01
sg17
I01
sg15
I00
sg16
I01
sg19
I01
sg18
I00
sg20
I01
sg1725
I01
ssg1731
g1889
sg1732
(lp1907
g1718
ag1725
ag15
ag16
ag17
ag18
ag19
ag20
asg1734
(lp1908
I6
aI10
asbsg1736
g1784
sg1738
g1739
(g1721
(I0
tS'b'
tRp1909
(I1
(I6
I10
tg1771
I00
(lp1910
I5
aI1
aI0
aI2
aI3
aI3
aI1
aI2
aI5
aI4
aI2
aI5
aI2
aI1
aI1
aI0
aI3
aI0
aI4
aI0
aI2
aI5
aI3
aI0
aI1
aI0
aI1
aI2
aI3
aI5
aI3
aI0
aI5
aI3
aI4
aI4
aI4
aI0
aI2
aI4
aI4
aI0
aI3
aI2
aI2
aI1
aI3
aI4
aI4
aI1
aI5
aI1
aI5
aI2
aI5
aI4
aI1
aI5
aI3
aI0
atbsg1741
I01
sg1742
I10
sg1743
I-1
sg1744
(lp1911
g1
(g1746
g1716
(dp1912
g1158
I1
sg1156
g1157
sg1167
g1168
stRp1913
ag1
(g1746
g1716
(dp1914
g1158
I2
sg1156
g1157
sg1167
g1168
stRp1915
ag1
(g1746
g1716
(dp1916
g1158
I3
sg1156
g1157
sg1167
g1168
stRp1917
ag1
(g1746
g1716
(dp1918
g1158
I4
sg1156
g1157
sg1167
g1168
stRp1919
ag1
(g1746
g1716
(dp1920
g1158
I5
sg1156
g1157
sg1167
g1168
stRp1921
ag1
(g1746
g1716
(dp1922
g1158
I6
sg1156
g1157
sg1167
g1168
stRp1923
asg1757
Nsg1758
I0
sg1759
I60
sg1760
I0
sg1761
I60
sg1762
I01
sbasS'savePickle'
p1924
I00
sb.