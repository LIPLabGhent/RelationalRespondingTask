<PsychoPy2experiment version="1.82.01" encoding="utf-8">
  <Settings>
    <Param name="Show mouse" val="False" valType="bool" updates="None"/>
    <Param name="Data filename" val="'data/%s_%s_%s' %(expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None"/>
    <Param name="Monitor" val="testMonitor" valType="str" updates="None"/>
    <Param name="Enable Escape" val="True" valType="bool" updates="None"/>
    <Param name="color" val="black" valType="str" updates="None"/>
    <Param name="Window size (pixels)" val="[1366, 768]" valType="code" updates="None"/>
    <Param name="Full-screen window" val="True" valType="bool" updates="None"/>
    <Param name="colorSpace" val="rgb" valType="str" updates="None"/>
    <Param name="Experiment info" val="{u'gender': u'', u'age': u'', u'participant': u'', u'condition': u''}" valType="code" updates="None"/>
    <Param name="Save csv file" val="False" valType="bool" updates="None"/>
    <Param name="Show info dlg" val="True" valType="bool" updates="None"/>
    <Param name="Save wide csv file" val="True" valType="bool" updates="None"/>
    <Param name="Save psydat file" val="True" valType="bool" updates="None"/>
    <Param name="expName" val="RRT" valType="str" updates="None"/>
    <Param name="logging level" val="error" valType="code" updates="None"/>
    <Param name="blendMode" val="avg" valType="str" updates="None"/>
    <Param name="Save excel file" val="False" valType="bool" updates="None"/>
    <Param name="Units" val="use prefs" valType="str" updates="None"/>
    <Param name="Save log file" val="False" valType="bool" updates="None"/>
    <Param name="Screen" val="1" valType="num" updates="None"/>
  </Settings>
  <Routines>
    <Routine name="trialsRuleA">
      <TextComponent name="stimulusBoxA">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="stimulusBoxA" valType="code" updates="None"/>
        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>
        <Param name="color" val="$stimulusColour" valType="str" updates="set every repeat"/>
        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="block3">
        <Param name="correctAns" val="$requiredResponseA" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="block3" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="requiredAllowedKeysA" valType="code" updates="set every repeat"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="store" val="first key" valType="str" updates="constant"/>
      </KeyboardComponent>
      <KeyboardComponent name="block3wrong">
        <Param name="correctAns" val="$feedbackResponseA" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="block3wrong" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="False" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="feedbackAllowedKeysA" valType="code" updates="set every repeat"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="store" val="first key" valType="str" updates="constant"/>
      </KeyboardComponent>
      <TextComponent name="correctiveFeedbackA">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="correctiveFeedbackA" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="red" valType="str" updates="constant"/>
        <Param name="text" val="$msg" valType="str" updates="set every frame"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>
      </TextComponent>
      <CodeComponent name="codeA">
        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>
        <Param name="name" val="codeA" valType="code" updates="None"/>
        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="if len(block3wrong.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>
      </CodeComponent>
      <TextComponent name="trueBoxA">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="trueBoxA" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$trueLabel" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="falseBoxA">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="falseBoxA" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$falseLabel" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
    </Routine>
    <Routine name="trialsRuleB">
      <TextComponent name="stimulusBoxB">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="stimulusBoxB" valType="code" updates="None"/>
        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>
        <Param name="color" val="$stimulusColour" valType="str" updates="set every repeat"/>
        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="block5">
        <Param name="correctAns" val="$requiredResponseB" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="block5" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="requiredAllowedKeysB" valType="code" updates="set every repeat"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="store" val="first key" valType="str" updates="constant"/>
      </KeyboardComponent>
      <KeyboardComponent name="block5wrong">
        <Param name="correctAns" val="$feedbackResponseB" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="block5wrong" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="False" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="feedbackAllowedKeysB" valType="code" updates="set every repeat"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="store" val="first key" valType="str" updates="constant"/>
      </KeyboardComponent>
      <TextComponent name="correctiveFeedbackB">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="correctiveFeedbackB" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="red" valType="str" updates="constant"/>
        <Param name="text" val="$msg" valType="str" updates="set every frame"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>
      </TextComponent>
      <CodeComponent name="codeB">
        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>
        <Param name="name" val="codeB" valType="code" updates="None"/>
        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="if len(block5wrong.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>
      </CodeComponent>
      <TextComponent name="trueBoxB">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="trueBoxB" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$trueLabel" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="falseBoxB">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="falseBoxB" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$falseLabel" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
    </Routine>
    <Routine name="inducerTrials">
      <TextComponent name="stimulusBoxInduc">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="stimulusBoxInduc" valType="code" updates="None"/>
        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>
        <Param name="color" val="$stimulusColour" valType="str" updates="set every repeat"/>
        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="block1">
        <Param name="correctAns" val="$requiredResponseA" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="block1" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="requiredAllowedKeysA" valType="code" updates="set every repeat"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="store" val="first key" valType="str" updates="constant"/>
      </KeyboardComponent>
      <KeyboardComponent name="block1wrong">
        <Param name="correctAns" val="$feedbackResponseA" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="block1wrong" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="False" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="feedbackAllowedKeysA" valType="code" updates="set every repeat"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="store" val="first key" valType="str" updates="constant"/>
      </KeyboardComponent>
      <TextComponent name="correctiveFeedbackInduc">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="correctiveFeedbackInduc" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="red" valType="str" updates="constant"/>
        <Param name="text" val="$msg" valType="str" updates="set every frame"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>
      </TextComponent>
      <CodeComponent name="codeInduc">
        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>
        <Param name="name" val="codeInduc" valType="code" updates="None"/>
        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="if len(block1wrong.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>
      </CodeComponent>
      <TextComponent name="trueBoxInduc">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="trueBoxInduc" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$trueLabel" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="falseBoxInduc">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="falseBoxInduc" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$falseLabel" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
    </Routine>
    <Routine name="practiceTrialsRuleA">
      <TextComponent name="stimulusBoxAprac">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="stimulusBoxAprac" valType="code" updates="None"/>
        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>
        <Param name="color" val="$stimulusColour" valType="str" updates="set every repeat"/>
        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="block2">
        <Param name="correctAns" val="$requiredResponseA" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="block2" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="requiredAllowedKeysA" valType="code" updates="set every repeat"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="store" val="first key" valType="str" updates="constant"/>
      </KeyboardComponent>
      <KeyboardComponent name="block2wrong">
        <Param name="correctAns" val="$feedbackResponseA" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="block2wrong" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="False" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="feedbackAllowedKeysA" valType="code" updates="set every repeat"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="store" val="first key" valType="str" updates="constant"/>
      </KeyboardComponent>
      <TextComponent name="correctiveFeedbackAprac">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="correctiveFeedbackAprac" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="red" valType="str" updates="constant"/>
        <Param name="text" val="$msg" valType="str" updates="set every frame"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>
      </TextComponent>
      <CodeComponent name="codeAprac">
        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>
        <Param name="name" val="codeAprac" valType="code" updates="None"/>
        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="if len(block2wrong.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>
      </CodeComponent>
      <TextComponent name="trueBoxAprac">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="trueBoxAprac" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$trueLabel" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="falseBoxAprac">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="falseBoxAprac" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$falseLabel" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
    </Routine>
    <Routine name="practiceTrialsRuleB">
      <TextComponent name="stimulusBoxBprac">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="stimulusBoxBprac" valType="code" updates="None"/>
        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>
        <Param name="color" val="$stimulusColour" valType="str" updates="set every repeat"/>
        <Param name="text" val="$stimulus" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="block4">
        <Param name="correctAns" val="$requiredResponseB" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="block4" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="requiredAllowedKeysB" valType="code" updates="set every repeat"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="store" val="first key" valType="str" updates="constant"/>
      </KeyboardComponent>
      <KeyboardComponent name="block4wrong">
        <Param name="correctAns" val="$feedbackResponseB" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="True" valType="bool" updates="constant"/>
        <Param name="name" val="block4wrong" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="False" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="False" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="feedbackAllowedKeysB" valType="code" updates="set every repeat"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="store" val="first key" valType="str" updates="constant"/>
      </KeyboardComponent>
      <TextComponent name="correctiveFeedbackBprac">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="correctiveFeedbackBprac" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="red" valType="str" updates="constant"/>
        <Param name="text" val="$msg" valType="str" updates="set every frame"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, -.5]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.2" valType="code" updates="constant"/>
      </TextComponent>
      <CodeComponent name="codeBprac">
        <Param name="Begin Experiment" val="msg=&quot;&quot;" valType="extendedCode" updates="constant"/>
        <Param name="name" val="codeBprac" valType="code" updates="None"/>
        <Param name="Begin Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Routine" val="" valType="extendedCode" updates="constant"/>
        <Param name="End Experiment" val="" valType="extendedCode" updates="constant"/>
        <Param name="Each Frame" val="if len(block4wrong.keys)&lt;1:&#10;    msg=&quot;&quot;&#10;else:&#10;    msg=&quot;X&quot;" valType="extendedCode" updates="constant"/>
      </CodeComponent>
      <TextComponent name="trueBoxBprac">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="trueBoxBprac" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$trueLabel" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0.75, 0.75]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
      <TextComponent name="falseBoxBprac">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="falseBoxBprac" valType="code" updates="None"/>
        <Param name="wrapWidth" val="" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$falseLabel" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[-0.75, 0.75]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.1" valType="code" updates="constant"/>
      </TextComponent>
    </Routine>
    <Routine name="instructions">
      <TextComponent name="instructionsBox">
        <Param name="opacity" val="1" valType="code" updates="constant"/>
        <Param name="colorSpace" val="rgb" valType="str" updates="constant"/>
        <Param name="name" val="instructionsBox" valType="code" updates="None"/>
        <Param name="wrapWidth" val="1.6" valType="code" updates="constant"/>
        <Param name="color" val="white" valType="str" updates="constant"/>
        <Param name="text" val="$instructions&#10;" valType="str" updates="set every repeat"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="pos" val="[0, 0]" valType="code" updates="constant"/>
        <Param name="flip" val="" valType="str" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="units" val="from exp settings" valType="str" updates="None"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="ori" val="0" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="0.75" valType="code" updates="None"/>
        <Param name="font" val="Arial" valType="str" updates="constant"/>
        <Param name="letterHeight" val="0.05" valType="code" updates="constant"/>
      </TextComponent>
      <KeyboardComponent name="instructionsKey">
        <Param name="correctAns" val="" valType="str" updates="constant"/>
        <Param name="storeCorrect" val="False" valType="bool" updates="constant"/>
        <Param name="name" val="instructionsKey" valType="code" updates="None"/>
        <Param name="stopVal" val="" valType="code" updates="constant"/>
        <Param name="durationEstim" val="" valType="code" updates="None"/>
        <Param name="forceEndRoutine" val="True" valType="bool" updates="constant"/>
        <Param name="startEstim" val="" valType="code" updates="None"/>
        <Param name="discard previous" val="True" valType="bool" updates="constant"/>
        <Param name="startType" val="time (s)" valType="str" updates="None"/>
        <Param name="allowedKeys" val="'e', 'i'" valType="code" updates="constant"/>
        <Param name="stopType" val="duration (s)" valType="str" updates="None"/>
        <Param name="startVal" val="1.25" valType="code" updates="None"/>
        <Param name="store" val="nothing" valType="str" updates="constant"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <LoopInitiator loopType="TrialHandler" name="inst1">
      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>
      <Param name="name" val="inst1" valType="code" updates="None"/>
      <Param name="isTrials" val="False" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="sequential" valType="str" updates="None"/>
      <Param name="nReps" val="1" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\n\nIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\n\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase some propositions will be presented in BLUE.\nThese propositons are always statements about SELF ESTEEM.\n\nYou must respond AS IF you see yourself as a good person and not a bad person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nFor example:\nWhen the proposition &quot;I am valuable&quot; appears, respond with the right response (TRUE).\nWhen the proposition &quot;I am worthless&quot; appears, respond with the left response (FALSE).\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\n\nYou must respond AS IF you see yourself as a good person and not a bad person.\n\nPress the I key when the statement is TRUE according to the above rule.\n\nPress the E key when the statement is FALSE according to the above rule.\n\nThe rule that you must respond to the orange words does not change:\n\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nIMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\n\nYou must respond AS IF you see yourself as a bad person and not a good person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nFor example:\nWhen the proposition &quot;I am valuable&quot; appears, respond with the left response (FALSE).\nWhen the proposition &quot;I am worthless&quot; appears, respond with the right response (TRUE).\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase will again present words in ORANGE and statements in BLUE.\n\nAgain, you must respond AS IF you see yourself as a bad person and not a good person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nThe rule that you must respond to the orange words does not change:\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Thank you, the task is now complete. Please contact the researcher.'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="0" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="instructions"/>
    <LoopTerminator name="inst1"/>
    <LoopInitiator loopType="TrialHandler" name="inducersLoop">
      <Param name="conditionsFile" val="stimuli.xlsx" valType="str" updates="None"/>
      <Param name="name" val="inducersLoop" valType="code" updates="None"/>
      <Param name="isTrials" val="True" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="random" valType="str" updates="None"/>
      <Param name="nReps" val="2" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'requiredResponseB': u'i', u'requiredResponseA': u'i', u'falseLabel': u'&quot;FALSE&quot;', u'feedbackResponseA': u'e', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'orange', u'stimulus': u'True', u'feedbackAllowedKeysB': u'e', u'trialtype': 0, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'i', u'trueLabel': u'&quot;TRUE&quot;'}, {u'requiredResponseB': u'i', u'requiredResponseA': u'i', u'falseLabel': u'&quot;FALSE&quot;', u'feedbackResponseA': u'e', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'orange', u'stimulus': u'Correct', u'feedbackAllowedKeysB': u'e', u'trialtype': 0, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'i', u'trueLabel': u'&quot;TRUE&quot;'}, {u'requiredResponseB': u'i', u'requiredResponseA': u'i', u'falseLabel': u'&quot;FALSE&quot;', u'feedbackResponseA': u'e', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'orange', u'stimulus': u'Right', u'feedbackAllowedKeysB': u'e', u'trialtype': 0, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'i', u'trueLabel': u'&quot;TRUE&quot;'}, {u'requiredResponseB': u'i', u'requiredResponseA': u'i', u'falseLabel': u'&quot;FALSE&quot;', u'feedbackResponseA': u'e', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'orange', u'stimulus': u'Accurate', u'feedbackAllowedKeysB': u'e', u'trialtype': 0, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'i', u'trueLabel': u'&quot;TRUE&quot;'}, {u'requiredResponseB': u'i', u'requiredResponseA': u'i', u'falseLabel': u'&quot;FALSE&quot;', u'feedbackResponseA': u'e', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'orange', u'stimulus': u'Confirm', u'feedbackAllowedKeysB': u'e', u'trialtype': 0, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'i', u'trueLabel': u'&quot;TRUE&quot;'}, {u'requiredResponseB': u'e', u'requiredResponseA': u'e', u'falseLabel': u'&quot;FALSE&quot;', u'feedbackResponseA': u'i', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'orange', u'stimulus': u'False', u'feedbackAllowedKeysB': u'i', u'trialtype': 0, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'e', u'trueLabel': u'&quot;TRUE&quot;'}, {u'requiredResponseB': u'e', u'requiredResponseA': u'e', u'falseLabel': u'&quot;FALSE&quot;', u'feedbackResponseA': u'i', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'orange', u'stimulus': u'Incorrect', u'feedbackAllowedKeysB': u'i', u'trialtype': 0, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'e', u'trueLabel': u'&quot;TRUE&quot;'}, {u'requiredResponseB': u'e', u'requiredResponseA': u'e', u'falseLabel': u'&quot;FALSE&quot;', u'feedbackResponseA': u'i', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'orange', u'stimulus': u'Wrong', u'feedbackAllowedKeysB': u'i', u'trialtype': 0, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'e', u'trueLabel': u'&quot;TRUE&quot;'}, {u'requiredResponseB': u'e', u'requiredResponseA': u'e', u'falseLabel': u'&quot;FALSE&quot;', u'feedbackResponseA': u'i', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'orange', u'stimulus': u'Inaccurate', u'feedbackAllowedKeysB': u'i', u'trialtype': 0, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'e', u'trueLabel': u'&quot;TRUE&quot;'}, {u'requiredResponseB': u'e', u'requiredResponseA': u'e', u'falseLabel': u'&quot;FALSE&quot;', u'feedbackResponseA': u'i', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'orange', u'stimulus': u'Untrue', u'feedbackAllowedKeysB': u'i', u'trialtype': 0, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'e', u'trueLabel': u'&quot;TRUE&quot;'}, {u'requiredResponseB': u'e', u'requiredResponseA': u'i', u'falseLabel': 0, u'feedbackResponseA': u'e', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'cyan', u'stimulus': u'I am good', u'feedbackAllowedKeysB': u'i', u'trialtype': 1, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'i', u'trueLabel': 1}, {u'requiredResponseB': u'e', u'requiredResponseA': u'i', u'falseLabel': 0, u'feedbackResponseA': u'e', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'cyan', u'stimulus': u'I am valuable', u'feedbackAllowedKeysB': u'i', u'trialtype': 1, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'i', u'trueLabel': 1}, {u'requiredResponseB': u'e', u'requiredResponseA': u'i', u'falseLabel': 0, u'feedbackResponseA': u'e', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'cyan', u'stimulus': u'I am worthwhile', u'feedbackAllowedKeysB': u'i', u'trialtype': 1, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'i', u'trueLabel': 1}, {u'requiredResponseB': u'e', u'requiredResponseA': u'i', u'falseLabel': 0, u'feedbackResponseA': u'e', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'cyan', u'stimulus': u'I am interesting', u'feedbackAllowedKeysB': u'i', u'trialtype': 1, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'i', u'trueLabel': 1}, {u'requiredResponseB': u'e', u'requiredResponseA': u'i', u'falseLabel': 0, u'feedbackResponseA': u'e', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'cyan', u'stimulus': u'I am kind', u'feedbackAllowedKeysB': u'i', u'trialtype': 1, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'i', u'trueLabel': 1}, {u'requiredResponseB': u'i', u'requiredResponseA': u'e', u'falseLabel': 0, u'feedbackResponseA': u'i', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'cyan', u'stimulus': u'I am bad', u'feedbackAllowedKeysB': u'e', u'trialtype': 2, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'e', u'trueLabel': 1}, {u'requiredResponseB': u'i', u'requiredResponseA': u'e', u'falseLabel': 0, u'feedbackResponseA': u'i', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'cyan', u'stimulus': u'I am a failure', u'feedbackAllowedKeysB': u'e', u'trialtype': 2, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'e', u'trueLabel': 1}, {u'requiredResponseB': u'i', u'requiredResponseA': u'e', u'falseLabel': 0, u'feedbackResponseA': u'i', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'cyan', u'stimulus': u'I am worthless', u'feedbackAllowedKeysB': u'e', u'trialtype': 2, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'e', u'trueLabel': 1}, {u'requiredResponseB': u'i', u'requiredResponseA': u'e', u'falseLabel': 0, u'feedbackResponseA': u'i', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'cyan', u'stimulus': u'I am boring', u'feedbackAllowedKeysB': u'e', u'trialtype': 2, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'e', u'trueLabel': 1}, {u'requiredResponseB': u'i', u'requiredResponseA': u'e', u'falseLabel': 0, u'feedbackResponseA': u'i', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'cyan', u'stimulus': u'I am dumb', u'feedbackAllowedKeysB': u'e', u'trialtype': 2, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'e', u'trueLabel': 1}, {u'requiredResponseB': u'i', u'requiredResponseA': u'e', u'falseLabel': 0, u'feedbackResponseA': u'i', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'cyan', u'stimulus': u'I am not good', u'feedbackAllowedKeysB': u'e', u'trialtype': 3, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'e', u'trueLabel': 1}, {u'requiredResponseB': u'i', u'requiredResponseA': u'e', u'falseLabel': 0, u'feedbackResponseA': u'i', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'cyan', u'stimulus': u'I am not valuable', u'feedbackAllowedKeysB': u'e', u'trialtype': 3, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'e', u'trueLabel': 1}, {u'requiredResponseB': u'i', u'requiredResponseA': u'e', u'falseLabel': 0, u'feedbackResponseA': u'i', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'cyan', u'stimulus': u'I am not worthwhile', u'feedbackAllowedKeysB': u'e', u'trialtype': 3, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'e', u'trueLabel': 1}, {u'requiredResponseB': u'i', u'requiredResponseA': u'e', u'falseLabel': 0, u'feedbackResponseA': u'i', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'cyan', u'stimulus': u'I am not interesting', u'feedbackAllowedKeysB': u'e', u'trialtype': 3, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'e', u'trueLabel': 1}, {u'requiredResponseB': u'i', u'requiredResponseA': u'e', u'falseLabel': 0, u'feedbackResponseA': u'i', u'feedbackResponseB': u'e', u'feedbackAllowedKeysA': u'i', u'stimulusColour': u'cyan', u'stimulus': u'I am not kind', u'feedbackAllowedKeysB': u'e', u'trialtype': 3, u'requiredAllowedKeysB': u'i', u'requiredAllowedKeysA': u'e', u'trueLabel': 1}, {u'requiredResponseB': u'e', u'requiredResponseA': u'i', u'falseLabel': 0, u'feedbackResponseA': u'e', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'cyan', u'stimulus': u'I am not bad', u'feedbackAllowedKeysB': u'i', u'trialtype': 4, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'i', u'trueLabel': 1}, {u'requiredResponseB': u'e', u'requiredResponseA': u'i', u'falseLabel': 0, u'feedbackResponseA': u'e', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'cyan', u'stimulus': u'I am not a failure', u'feedbackAllowedKeysB': u'i', u'trialtype': 4, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'i', u'trueLabel': 1}, {u'requiredResponseB': u'e', u'requiredResponseA': u'i', u'falseLabel': 0, u'feedbackResponseA': u'e', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'cyan', u'stimulus': u'I am not worthless', u'feedbackAllowedKeysB': u'i', u'trialtype': 4, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'i', u'trueLabel': 1}, {u'requiredResponseB': u'e', u'requiredResponseA': u'i', u'falseLabel': 0, u'feedbackResponseA': u'e', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'cyan', u'stimulus': u'I am not boring', u'feedbackAllowedKeysB': u'i', u'trialtype': 4, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'i', u'trueLabel': 1}, {u'requiredResponseB': u'e', u'requiredResponseA': u'i', u'falseLabel': 0, u'feedbackResponseA': u'e', u'feedbackResponseB': u'i', u'feedbackAllowedKeysA': u'e', u'stimulusColour': u'cyan', u'stimulus': u'I am not dumb', u'feedbackAllowedKeysB': u'i', u'trialtype': 4, u'requiredAllowedKeysB': u'e', u'requiredAllowedKeysA': u'i', u'trueLabel': 1}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="0:10" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="inducerTrials"/>
    <LoopTerminator name="inducersLoop"/>
    <LoopInitiator loopType="TrialHandler" name="inst2">
      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>
      <Param name="name" val="inst2" valType="code" updates="None"/>
      <Param name="isTrials" val="False" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="sequential" valType="str" updates="None"/>
      <Param name="nReps" val="1" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\n\nIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\n\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase some propositions will be presented in BLUE.\nThese propositons are always statements about SELF ESTEEM.\n\nYou must respond AS IF you see yourself as a good person and not a bad person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nFor example:\nWhen the proposition &quot;I am valuable&quot; appears, respond with the right response (TRUE).\nWhen the proposition &quot;I am worthless&quot; appears, respond with the left response (FALSE).\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\n\nYou must respond AS IF you see yourself as a good person and not a bad person.\n\nPress the I key when the statement is TRUE according to the above rule.\n\nPress the E key when the statement is FALSE according to the above rule.\n\nThe rule that you must respond to the orange words does not change:\n\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nIMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\n\nYou must respond AS IF you see yourself as a bad person and not a good person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nFor example:\nWhen the proposition &quot;I am valuable&quot; appears, respond with the left response (FALSE).\nWhen the proposition &quot;I am worthless&quot; appears, respond with the right response (TRUE).\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase will again present words in ORANGE and statements in BLUE.\n\nAgain, you must respond AS IF you see yourself as a bad person and not a good person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nThe rule that you must respond to the orange words does not change:\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Thank you, the task is now complete. Please contact the researcher.'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="1" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="instructions"/>
    <LoopTerminator name="inst2"/>
    <LoopInitiator loopType="TrialHandler" name="stimuliRuleALoop">
      <Param name="conditionsFile" val="stimuli.xlsx" valType="str" updates="None"/>
      <Param name="name" val="stimuliRuleALoop" valType="code" updates="None"/>
      <Param name="isTrials" val="True" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="random" valType="str" updates="None"/>
      <Param name="nReps" val="1" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'stimulus': u'True', u'requiredResponseRuleA': u'i', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'Correct', u'requiredResponseRuleA': u'i', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'False', u'requiredResponseRuleA': u'e', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'Incorrect', u'requiredResponseRuleA': u'e', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am good', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am valuable', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am worthwhile', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am bad', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am a failure', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am worthless', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not good', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not valuable', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not worthwhile', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not bad', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am not a failure', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am not worthless', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="10:30" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="practiceTrialsRuleA"/>
    <LoopTerminator name="stimuliRuleALoop"/>
    <LoopInitiator loopType="TrialHandler" name="inst3">
      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>
      <Param name="name" val="inst3" valType="code" updates="None"/>
      <Param name="isTrials" val="False" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="random" valType="str" updates="None"/>
      <Param name="nReps" val="1" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\n\nIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\n\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase some propositions will be presented in BLUE.\nThese propositons are always statements about SELF ESTEEM.\n\nYou must respond AS IF you see yourself as a good person and not a bad person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nFor example:\nWhen the proposition &quot;I am valuable&quot; appears, respond with the right response (TRUE).\nWhen the proposition &quot;I am worthless&quot; appears, respond with the left response (FALSE).\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\n\nYou must respond AS IF you see yourself as a good person and not a bad person.\n\nPress the I key when the statement is TRUE according to the above rule.\n\nPress the E key when the statement is FALSE according to the above rule.\n\nThe rule that you must respond to the orange words does not change:\n\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nIMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\n\nYou must respond AS IF you see yourself as a bad person and not a good person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nFor example:\nWhen the proposition &quot;I am valuable&quot; appears, respond with the left response (FALSE).\nWhen the proposition &quot;I am worthless&quot; appears, respond with the right response (TRUE).\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase will again present words in ORANGE and statements in BLUE.\n\nAgain, you must respond AS IF you see yourself as a bad person and not a good person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nThe rule that you must respond to the orange words does not change:\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Thank you, the task is now complete. Please contact the researcher.'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="2" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="instructions"/>
    <LoopTerminator name="inst3"/>
    <LoopInitiator loopType="TrialHandler" name="inducersAndStimuliRuleALoop">
      <Param name="conditionsFile" val="stimuli.xlsx" valType="str" updates="None"/>
      <Param name="name" val="inducersAndStimuliRuleALoop" valType="code" updates="None"/>
      <Param name="isTrials" val="True" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="random" valType="str" updates="None"/>
      <Param name="nReps" val="2" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'stimulus': u'True', u'requiredResponseRuleA': u'i', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'Correct', u'requiredResponseRuleA': u'i', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'False', u'requiredResponseRuleA': u'e', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'Incorrect', u'requiredResponseRuleA': u'e', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am good', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am valuable', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am worthwhile', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am bad', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am a failure', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am worthless', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not good', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not valuable', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not worthwhile', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not bad', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am not a failure', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am not worthless', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="trialsRuleA"/>
    <LoopTerminator name="inducersAndStimuliRuleALoop"/>
    <LoopInitiator loopType="TrialHandler" name="inst4">
      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>
      <Param name="name" val="inst4" valType="code" updates="None"/>
      <Param name="isTrials" val="False" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="sequential" valType="str" updates="None"/>
      <Param name="nReps" val="1" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\n\nIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\n\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase some propositions will be presented in BLUE.\nThese propositons are always statements about SELF ESTEEM.\n\nYou must respond AS IF you see yourself as a good person and not a bad person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nFor example:\nWhen the proposition &quot;I am valuable&quot; appears, respond with the right response (TRUE).\nWhen the proposition &quot;I am worthless&quot; appears, respond with the left response (FALSE).\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\n\nYou must respond AS IF you see yourself as a good person and not a bad person.\n\nPress the I key when the statement is TRUE according to the above rule.\n\nPress the E key when the statement is FALSE according to the above rule.\n\nThe rule that you must respond to the orange words does not change:\n\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nIMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\n\nYou must respond AS IF you see yourself as a bad person and not a good person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nFor example:\nWhen the proposition &quot;I am valuable&quot; appears, respond with the left response (FALSE).\nWhen the proposition &quot;I am worthless&quot; appears, respond with the right response (TRUE).\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase will again present words in ORANGE and statements in BLUE.\n\nAgain, you must respond AS IF you see yourself as a bad person and not a good person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nThe rule that you must respond to the orange words does not change:\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Thank you, the task is now complete. Please contact the researcher.'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="3" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="instructions"/>
    <LoopTerminator name="inst4"/>
    <LoopInitiator loopType="TrialHandler" name="stimuliRuleBLoop">
      <Param name="conditionsFile" val="stimuli.xlsx" valType="str" updates="None"/>
      <Param name="name" val="stimuliRuleBLoop" valType="code" updates="None"/>
      <Param name="isTrials" val="True" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="random" valType="str" updates="None"/>
      <Param name="nReps" val="1" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'stimulus': u'True', u'requiredResponseRuleA': u'i', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'Correct', u'requiredResponseRuleA': u'i', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'False', u'requiredResponseRuleA': u'e', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'Incorrect', u'requiredResponseRuleA': u'e', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am good', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am valuable', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am worthwhile', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am bad', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am a failure', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am worthless', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not good', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not valuable', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not worthwhile', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not bad', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am not a failure', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am not worthless', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="10:30" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="practiceTrialsRuleB"/>
    <LoopTerminator name="stimuliRuleBLoop"/>
    <LoopInitiator loopType="TrialHandler" name="inst5">
      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>
      <Param name="name" val="inst5" valType="code" updates="None"/>
      <Param name="isTrials" val="False" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="sequential" valType="str" updates="None"/>
      <Param name="nReps" val="1" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\n\nIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\n\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase some propositions will be presented in BLUE.\nThese propositons are always statements about SELF ESTEEM.\n\nYou must respond AS IF you see yourself as a good person and not a bad person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nFor example:\nWhen the proposition &quot;I am valuable&quot; appears, respond with the right response (TRUE).\nWhen the proposition &quot;I am worthless&quot; appears, respond with the left response (FALSE).\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\n\nYou must respond AS IF you see yourself as a good person and not a bad person.\n\nPress the I key when the statement is TRUE according to the above rule.\n\nPress the E key when the statement is FALSE according to the above rule.\n\nThe rule that you must respond to the orange words does not change:\n\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nIMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\n\nYou must respond AS IF you see yourself as a bad person and not a good person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nFor example:\nWhen the proposition &quot;I am valuable&quot; appears, respond with the left response (FALSE).\nWhen the proposition &quot;I am worthless&quot; appears, respond with the right response (TRUE).\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase will again present words in ORANGE and statements in BLUE.\n\nAgain, you must respond AS IF you see yourself as a bad person and not a good person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nThe rule that you must respond to the orange words does not change:\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Thank you, the task is now complete. Please contact the researcher.'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="4" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="instructions"/>
    <LoopTerminator name="inst5"/>
    <LoopInitiator loopType="TrialHandler" name="inducersAndStimuliRuleBLoop">
      <Param name="conditionsFile" val="stimuli.xlsx" valType="str" updates="None"/>
      <Param name="name" val="inducersAndStimuliRuleBLoop" valType="code" updates="None"/>
      <Param name="isTrials" val="True" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="random" valType="str" updates="None"/>
      <Param name="nReps" val="2" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'stimulus': u'True', u'requiredResponseRuleA': u'i', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'Correct', u'requiredResponseRuleA': u'i', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'False', u'requiredResponseRuleA': u'e', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'Incorrect', u'requiredResponseRuleA': u'e', u'stimulusColour': u'orange', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am good', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am valuable', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am worthwhile', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am bad', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am a failure', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am worthless', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not good', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not valuable', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not worthwhile', u'requiredResponseRuleA': u'e', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'i'}, {u'stimulus': u'I am not bad', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am not a failure', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}, {u'stimulus': u'I am not worthless', u'requiredResponseRuleA': u'i', u'stimulusColour': u'cyan', u'requiredResponseRuleB': u'e'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="trialsRuleB"/>
    <LoopTerminator name="inducersAndStimuliRuleBLoop"/>
    <LoopInitiator loopType="TrialHandler" name="instEnd">
      <Param name="conditionsFile" val="instructions.xlsx" valType="str" updates="None"/>
      <Param name="name" val="instEnd" valType="code" updates="None"/>
      <Param name="isTrials" val="False" valType="bool" updates="None"/>
      <Param name="random seed" val="" valType="code" updates="None"/>
      <Param name="loopType" val="sequential" valType="str" updates="None"/>
      <Param name="nReps" val="1" valType="code" updates="None"/>
      <Param name="endPoints" val="[0, 1]" valType="num" updates="None"/>
      <Param name="conditions" val="[{u'instructions': u'In this response task will you have to react to words and propositions that are presented on the screen. In the next phase words will be presented in ORANGE.\n\nIt is your job to decide as soon as possible whether the word refers to TRUE or FALSE.\n\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase some propositions will be presented in BLUE.\nThese propositons are always statements about SELF ESTEEM.\n\nYou must respond AS IF you see yourself as a good person and not a bad person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nFor example:\nWhen the proposition &quot;I am valuable&quot; appears, respond with the right response (TRUE).\nWhen the proposition &quot;I am worthless&quot; appears, respond with the left response (FALSE).\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase some words will be presented in ORANGE and some propositions in BLUE. These propositons are always statements about SELF ESTEEM.\n\nYou must respond AS IF you see yourself as a good person and not a bad person.\n\nPress the I key when the statement is TRUE according to the above rule.\n\nPress the E key when the statement is FALSE according to the above rule.\n\nThe rule that you must respond to the orange words does not change:\n\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nIMPORANT: THE RULE FOR THE BLUE STATEMENTS HAS NOW CHANGED.\n\nYou must respond AS IF you see yourself as a bad person and not a good person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nFor example:\nWhen the proposition &quot;I am valuable&quot; appears, respond with the left response (FALSE).\nWhen the proposition &quot;I am worthless&quot; appears, respond with the right response (TRUE).\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Very good!\n\nThe next phase will again present words in ORANGE and statements in BLUE.\n\nAgain, you must respond AS IF you see yourself as a bad person and not a good person.\n\nPress the I key when the statement is TRUE according to the above rule.\nPress the E key when the statement is FALSE according to the above rule.\n\nThe rule that you must respond to the orange words does not change:\nPress the I key if the word is synonymous with TRUE.\nPress the E key if the word is a synonym for FALSE.\n\nIf you make a mistake, hit the correct key as soon as possible.\n\nPut your two index fingers on the E and I keys. Press either one to start.'}, {u'instructions': u'Thank you, the task is now complete. Please contact the researcher.'}]" valType="str" updates="None"/>
      <Param name="Selected rows" val="5" valType="str" updates="None"/>
    </LoopInitiator>
    <Routine name="instructions"/>
    <LoopTerminator name="instEnd"/>
  </Flow>
</PsychoPy2experiment>
